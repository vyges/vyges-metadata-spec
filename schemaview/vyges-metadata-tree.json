{
  "name": "VygesMetadata",
  "type": "object",
  "description": "Metadata manifest for reusable silicon IP blocks in the Vyges ecosystem.",
  "required": [
    "name",
    "x-version",
    "version",
    "license",
    "interfaces",
    "template",
    "target",
    "design_type",
    "maturity"
  ],
  "examples": [
    {
      "name": "spi-controller",
      "x-version": "1.0.0",
      "version": "1.0.0",
      "license": "MIT",
      "interfaces": [
        {
          "type": "apb",
          "direction": "slave",
          "protocol": "AMBA APB",
          "signals": [
            {
              "name": "PCLK",
              "direction": "input",
              "width": 1,
              "description": "APB clock signal"
            },
            {
              "name": "PRESETn",
              "direction": "input",
              "width": 1,
              "description": "APB reset signal (active low)"
            },
            {
              "name": "PSEL",
              "direction": "input",
              "width": 1,
              "description": "APB select signal"
            },
            {
              "name": "PENABLE",
              "direction": "input",
              "width": 1,
              "description": "APB enable signal"
            },
            {
              "name": "PWRITE",
              "direction": "input",
              "width": 1,
              "description": "APB write signal"
            },
            {
              "name": "PADDR",
              "direction": "input",
              "width": 8,
              "description": "APB address bus"
            },
            {
              "name": "PWDATA",
              "direction": "input",
              "width": 32,
              "description": "APB write data bus"
            },
            {
              "name": "PRDATA",
              "direction": "output",
              "width": 32,
              "description": "APB read data bus"
            },
            {
              "name": "PREADY",
              "direction": "output",
              "width": 1,
              "description": "APB ready signal"
            },
            {
              "name": "PSLVERR",
              "direction": "output",
              "width": 1,
              "description": "APB slave error signal"
            }
          ]
        },
        {
          "type": "spi",
          "direction": "master",
          "protocol": "SPI",
          "signals": [
            {
              "name": "SCLK",
              "direction": "output",
              "width": 1,
              "description": "SPI clock signal"
            },
            {
              "name": "MOSI",
              "direction": "output",
              "width": 1,
              "description": "SPI master out slave in"
            },
            {
              "name": "MISO",
              "direction": "input",
              "width": 1,
              "description": "SPI master in slave out"
            },
            {
              "name": "SS_n",
              "direction": "output",
              "width": 1,
              "description": "SPI slave select signal (active low)"
            }
          ]
        }
      ],
      "template": "communication",
      "target": "fpga",
      "design_type": "digital",
      "maturity": "production",
      "parameters": [
        {
          "parameter_info": {
            "name": "CLOCK_DIV",
            "type": "int",
            "description": "Clock divider for SPI clock generation"
          },
          "constraints": {
            "default": 8,
            "range": {
              "min": 2,
              "max": 256
            },
            "is_required": false
          },
          "metadata": {
            "units": "cycles"
          }
        },
        {
          "parameter_info": {
            "name": "DATA_WIDTH",
            "type": "int",
            "description": "Data width for SPI transactions"
          },
          "constraints": {
            "default": 8,
            "range": {
              "min": 1,
              "max": 32
            },
            "is_required": true
          },
          "metadata": {
            "units": "bits"
          }
        }
      ],
      "categories": {
        "primary": "communication",
        "secondary": [
          "serial",
          "master"
        ]
      }
    },
    {
      "name": "ddr4-controller",
      "x-version": "1.0.0",
      "version": "1.0.0",
      "license": "MIT",
      "interfaces": [
        {
          "type": "axi",
          "direction": "slave",
          "protocol": "AMBA AXI4",
          "signals": [
            {
              "name": "ACLK",
              "direction": "input",
              "width": 1,
              "description": "AXI clock signal"
            },
            {
              "name": "ARESETn",
              "direction": "input",
              "width": 1,
              "description": "AXI reset signal (active low)"
            },
            {
              "name": "AWID",
              "direction": "input",
              "width": 4,
              "description": "AXI write address ID"
            },
            {
              "name": "AWADDR",
              "direction": "input",
              "width": 32,
              "description": "AXI write address"
            },
            {
              "name": "AWLEN",
              "direction": "input",
              "width": 8,
              "description": "AXI write burst length"
            },
            {
              "name": "AWSIZE",
              "direction": "input",
              "width": 3,
              "description": "AXI write burst size"
            },
            {
              "name": "AWBURST",
              "direction": "input",
              "width": 2,
              "description": "AXI write burst type"
            },
            {
              "name": "AWVALID",
              "direction": "input",
              "width": 1,
              "description": "AXI write address valid"
            },
            {
              "name": "AWREADY",
              "direction": "output",
              "width": 1,
              "description": "AXI write address ready"
            }
          ]
        },
        {
          "type": "ddr4",
          "direction": "master",
          "protocol": "DDR4",
          "signals": [
            {
              "name": "CK_t",
              "direction": "output",
              "width": 1,
              "description": "DDR4 clock (true)"
            },
            {
              "name": "CK_c",
              "direction": "output",
              "width": 1,
              "description": "DDR4 clock (complement)"
            },
            {
              "name": "CKE",
              "direction": "output",
              "width": 1,
              "description": "DDR4 clock enable"
            },
            {
              "name": "CS_n",
              "direction": "output",
              "width": 1,
              "description": "DDR4 chip select (active low)"
            },
            {
              "name": "ACT_n",
              "direction": "output",
              "width": 1,
              "description": "DDR4 activate (active low)"
            },
            {
              "name": "A",
              "direction": "output",
              "width": 17,
              "description": "DDR4 address bus"
            },
            {
              "name": "BA",
              "direction": "output",
              "width": 2,
              "description": "DDR4 bank address"
            },
            {
              "name": "BG",
              "direction": "output",
              "width": 2,
              "description": "DDR4 bank group"
            },
            {
              "name": "DQ",
              "direction": "inout",
              "width": 64,
              "description": "DDR4 data bus"
            },
            {
              "name": "DQS_t",
              "direction": "inout",
              "width": 8,
              "description": "DDR4 data strobe (true)"
            },
            {
              "name": "DQS_c",
              "direction": "inout",
              "width": 8,
              "description": "DDR4 data strobe (complement)"
            },
            {
              "name": "DM_n",
              "direction": "output",
              "width": 8,
              "description": "DDR4 data mask (active low)"
            }
          ]
        }
      ],
      "template": "memory",
      "target": "fpga",
      "design_type": "digital",
      "maturity": "production",
      "parameters": [
        {
          "parameter_info": {
            "name": "DATA_WIDTH",
            "type": "int",
            "description": "DDR4 data bus width"
          },
          "constraints": {
            "default": 64,
            "range": {
              "min": 8,
              "max": 72
            },
            "is_required": false
          },
          "metadata": {
            "units": "bits"
          }
        },
        {
          "parameter_info": {
            "name": "ADDR_WIDTH",
            "type": "int",
            "description": "DDR4 address bus width"
          },
          "constraints": {
            "default": 32,
            "range": {
              "min": 16,
              "max": 64
            },
            "is_required": false
          },
          "metadata": {
            "units": "bits"
          }
        }
      ],
      "categories": {
        "primary": "memory",
        "secondary": [
          "controller",
          "high-speed"
        ]
      }
    }
  ],
  "children": [
    {
      "name": "community",
      "type": "object",
      "description": "Community and ecosystem contributions",
      "required": false,
      "examples": [
        {
          "issues": "https://github.com/vyges/spi-controller/issues",
          "contributions": true,
          "chat": "https://discord.gg/vyges"
        },
        {
          "issues": "https://acme.com/support",
          "contributions": false,
          "chat": "https://acme.slack.com"
        }
      ],
      "children": [
        {
          "name": "issues",
          "type": "string",
          "description": "Link to GitHub issues or support forum",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/issues",
            "https://forum.vyges.com"
          ]
        },
        {
          "name": "contributions",
          "type": "boolean",
          "description": "Is the project accepting external contributions?",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "chat",
          "type": "string",
          "description": "Link to Discord, Gitter, Slack, or Zulip",
          "required": false,
          "examples": [
            "https://discord.gg/vyges",
            "https://gitter.im/vyges/community"
          ]
        }
      ]
    },
    {
      "name": "maintainers",
      "type": "array",
      "description": "List of maintainers responsible for this IP block",
      "required": false,
      "examples": [
        [
          {
            "name": "Shivaram Mysore",
            "email": "shivaram@vyges.com",
            "github": "smysore"
          }
        ],
        [
          {
            "name": "John Doe",
            "email": "john.doe@acme.com",
            "github": "johndoe"
          },
          {
            "name": "Jane Smith",
            "github": "janesmith"
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name"
          ],
          "children": [
            {
              "name": "name",
              "type": "string",
              "description": "Full name of the maintainer",
              "required": false,
              "examples": [
                "Shivaram Mysore",
                "John Doe"
              ]
            },
            {
              "name": "email",
              "type": "string",
              "description": "Contact email address",
              "required": false,
              "examples": [
                "shivaram@vyges.com",
                "john.doe@acme.com"
              ]
            },
            {
              "name": "github",
              "type": "string",
              "description": "GitHub username for collaboration",
              "required": false,
              "examples": [
                "smysore",
                "johndoe"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "registry",
      "type": "object",
      "description": "Registry information for catalog discovery and management",
      "required": false,
      "examples": [
        {
          "status": "approved",
          "submission_date": "2024-01-15T10:30:00Z",
          "approval_date": "2024-01-16T14:20:00Z",
          "verified_by": "vyges-team",
          "registry_id": "spi-controller-v1",
          "compliance_check": {
            "status": "passing",
            "last_checked": "2024-01-16T14:20:00Z",
            "checker_version": "1.0.0",
            "issues": []
          }
        },
        {
          "status": "draft",
          "registry_id": "pcie-phy-v3"
        }
      ],
      "children": [
        {
          "name": "status",
          "type": "string",
          "description": "Current status in the registry approval process",
          "required": false,
          "enum": [
            "draft",
            "submitted",
            "approved",
            "rejected",
            "deprecated"
          ],
          "examples": [
            "draft",
            "submitted"
          ]
        },
        {
          "name": "submission_date",
          "type": "string",
          "description": "ISO 8601 timestamp when this IP was submitted to the registry",
          "required": false,
          "examples": [
            "2024-01-15T10:30:00Z",
            "2024-01-16T14:20:00Z"
          ]
        },
        {
          "name": "approval_date",
          "type": "string",
          "description": "ISO 8601 timestamp when this IP was approved for the registry",
          "required": false,
          "examples": [
            "2024-01-16T14:20:00Z",
            "2024-01-17T09:15:00Z"
          ]
        },
        {
          "name": "verified_by",
          "type": "string",
          "description": "GitHub username of the person who verified this IP for registry inclusion",
          "required": false,
          "examples": [
            "vyges-team",
            "smysore"
          ]
        },
        {
          "name": "registry_id",
          "type": "string",
          "description": "Unique identifier for this IP in the registry (auto-generated if not provided)",
          "required": false,
          "examples": [
            "spi-controller-v1",
            "pcie-phy-v3"
          ]
        },
        {
          "name": "compliance_check",
          "type": "object",
          "description": "Compliance validation results",
          "required": false,
          "examples": [
            {
              "status": "passing",
              "last_checked": "2024-01-16T14:20:00Z",
              "checker_version": "1.0.0",
              "issues": []
            },
            {
              "status": "failing",
              "last_checked": "2024-01-15T16:30:00Z",
              "checker_version": "0.9.5",
              "issues": [
                "missing_description",
                "invalid_license"
              ]
            }
          ],
          "children": [
            {
              "name": "status",
              "type": "string",
              "description": "Current compliance status",
              "required": false,
              "enum": [
                "pending",
                "passing",
                "failing"
              ],
              "examples": [
                "pending",
                "passing"
              ]
            },
            {
              "name": "last_checked",
              "type": "string",
              "description": "ISO 8601 timestamp of last compliance check",
              "required": false,
              "examples": [
                "2024-01-16T14:20:00Z",
                "2024-01-15T16:30:00Z"
              ]
            },
            {
              "name": "checker_version",
              "type": "string",
              "description": "Version of compliance checker used",
              "required": false,
              "examples": [
                "1.0.0",
                "0.9.5"
              ]
            },
            {
              "name": "issues",
              "type": "array",
              "description": "List of compliance issues found",
              "required": false,
              "examples": [
                [],
                [
                  "missing_description",
                  "invalid_license"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "compatibility",
      "type": "object",
      "description": "Compatibility information and version constraints",
      "required": false,
      "examples": [
        {
          "min_vyges_version": "1.0.0",
          "max_vyges_version": "3.0.0",
          "breaking_changes": [
            {
              "version": "2.0.0",
              "description": "API interface changed",
              "migration_guide": "https://docs.vyges.com/migration/v2"
            }
          ]
        },
        {
          "min_vyges_version": "2.0.0",
          "deprecated_since": "3.0.0",
          "replacement": "spi-controller-v2"
        }
      ],
      "children": [
        {
          "name": "min_vyges_version",
          "type": "string",
          "description": "Minimum Vyges platform version required",
          "required": false,
          "examples": [
            "1.0.0",
            "2.0.0"
          ]
        },
        {
          "name": "max_vyges_version",
          "type": "string",
          "description": "Maximum Vyges platform version supported",
          "required": false,
          "examples": [
            "3.0.0",
            "4.0.0"
          ]
        },
        {
          "name": "breaking_changes",
          "type": "array",
          "description": "List of breaking changes and migration guides",
          "required": false,
          "examples": [
            [
              {
                "version": "2.0.0",
                "description": "API interface changed",
                "migration_guide": "https://docs.vyges.com/migration/v2"
              }
            ],
            [
              {
                "version": "3.0.0",
                "description": "Parameter names updated"
              },
              {
                "version": "4.0.0",
                "description": "New required fields added",
                "migration_guide": "https://docs.vyges.com/migration/v4"
              }
            ]
          ],
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": [
                "version",
                "description"
              ],
              "examples": [
                {
                  "version": "2.0.0",
                  "description": "API interface changed",
                  "migration_guide": "https://docs.vyges.com/migration/v2"
                },
                {
                  "version": "3.0.0",
                  "description": "Parameter names updated"
                }
              ],
              "children": [
                {
                  "name": "version",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "2.0.0",
                    "3.0.0"
                  ]
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "API interface changed",
                    "Parameter names updated"
                  ]
                },
                {
                  "name": "migration_guide",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "https://docs.vyges.com/migration/v2",
                    "https://docs.vyges.com/migration/v3"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "deprecated_since",
          "type": "string",
          "description": "Version when this IP was deprecated",
          "required": false,
          "examples": [
            "2.0.0",
            "3.0.0"
          ]
        },
        {
          "name": "replacement",
          "type": "string",
          "description": "Name of the replacement IP (if deprecated)",
          "required": false,
          "examples": [
            "spi-controller-v2",
            "pcie-phy-v3"
          ]
        }
      ]
    },
    {
      "name": "tags",
      "type": "array",
      "description": "Searchable tags for categorizing and discovering the IP",
      "required": false,
      "examples": [
        [
          "spi",
          "controller",
          "apb",
          "master"
        ],
        [
          "pcie",
          "phy",
          "encrypted",
          "mixed-signal"
        ]
      ]
    },
    {
      "name": "fpga",
      "type": "object",
      "description": "FPGA-specific configuration and requirements",
      "required": [
        "toolchain"
      ],
      "examples": [
        {
          "toolchain": "vivado",
          "board": "arty-a7-35",
          "cfu_playground_compatible": true,
          "constraints": [
            "constraints.xdc",
            "timing.sdc"
          ]
        },
        {
          "toolchain": "yosys",
          "board": "ice40-hx8k-b-evn",
          "constraints": [
            "ice40-hx8k-b-evn.pcf"
          ]
        }
      ],
      "children": [
        {
          "name": "toolchain",
          "type": "string",
          "description": "Primary FPGA toolchain used",
          "required": false,
          "enum": [
            "vivado",
            "quartus",
            "yosys",
            "symbiflow"
          ],
          "examples": [
            "vivado",
            "quartus"
          ]
        },
        {
          "name": "board",
          "type": "string",
          "description": "Name of the supported FPGA board",
          "required": false,
          "examples": [
            "arty-a7-35",
            "nexys-a7-100t"
          ]
        },
        {
          "name": "cfu_playground_compatible",
          "type": "boolean",
          "description": "Whether this IP is compatible with CFU Playground",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "constraints",
          "type": "array",
          "description": "List of constraint files (.xdc, .sdc, etc.)",
          "required": false,
          "examples": [
            [
              "constraints.xdc",
              "timing.sdc"
            ],
            [
              "arty-a7-35.xdc"
            ]
          ]
        },
        {
          "name": "hard_ip",
          "type": "boolean",
          "description": "Whether this is a hard IP block (vendor-provided)",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "vendor",
          "type": "string",
          "description": "FPGA vendor for hard IP blocks",
          "required": false,
          "enum": [
            "xilinx",
            "intel",
            "lattice",
            "microchip"
          ],
          "examples": [
            "xilinx",
            "intel"
          ]
        }
      ]
    },
    {
      "name": "automation",
      "type": "object",
      "description": "Automation requirements and capabilities",
      "required": false,
      "examples": [
        {
          "meta": {
            "automation_level": "enhanced",
            "enabled": true
          },
          "requirements": {
            "minimal_required": [
              "name",
              "version",
              "license",
              "interfaces",
              "template",
              "target",
              "design_type",
              "maturity",
              "description",
              "source",
              "asic",
              "fpga",
              "test",
              "flows"
            ],
            "recommended_for_automation": [
              "parameters",
              "dependencies",
              "toolRequirements",
              "performance",
              "reliability",
              "packaging",
              "community",
              "security"
            ]
          },
          "capabilities": {
            "workflow_support": [
              "ci_cd_integration",
              "automated_testing",
              "documentation_generation"
            ],
            "integration_points": [
              "github_actions",
              "custom_scripts"
            ]
          },
          "security_policy": {
            "min_security_level": "medium",
            "require_assertions": true,
            "require_secure_testbench": true,
            "tag_high_risk_ips": true,
            "enforced_standards": [
              "iso_26262"
            ],
            "automated_checks": [
              "assertion_coverage",
              "fuzzing_tests"
            ]
          }
        },
        {
          "meta": {
            "automation_level": "basic",
            "enabled": true
          },
          "requirements": {
            "minimal_required": [
              "name",
              "version",
              "license",
              "interfaces",
              "template",
              "target",
              "design_type",
              "maturity",
              "description",
              "source",
              "asic",
              "fpga",
              "test",
              "flows"
            ],
            "recommended_for_automation": [
              "commercial",
              "compliance",
              "security"
            ],
            "blocking_issues": [
              "encrypted_ip",
              "requires_nda"
            ]
          },
          "capabilities": {
            "workflow_support": [
              "dependency_management",
              "version_control"
            ],
            "integration_points": [
              "custom_scripts"
            ]
          }
        }
      ],
      "children": [
        {
          "name": "meta",
          "type": "object",
          "description": "Basic automation configuration and metadata",
          "required": false,
          "children": [
            {
              "name": "automation_level",
              "type": "string",
              "description": "Level of automation support this IP provides",
              "required": false,
              "enum": [
                "basic",
                "enhanced",
                "full"
              ],
              "examples": [
                "basic",
                "enhanced"
              ]
            },
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Whether automation is enabled for this IP",
              "required": false,
              "examples": [
                true,
                false
              ]
            }
          ]
        },
        {
          "name": "requirements",
          "type": "object",
          "description": "Automation requirements and field specifications",
          "required": false,
          "children": [
            {
              "name": "minimal_required",
              "type": "array",
              "description": "Minimum fields required for basic automation",
              "required": false,
              "examples": [
                [
                  "name",
                  "version",
                  "license",
                  "interfaces",
                  "template",
                  "target",
                  "design_type",
                  "maturity",
                  "description",
                  "source",
                  "asic",
                  "fpga",
                  "test",
                  "flows"
                ]
              ]
            },
            {
              "name": "recommended_for_automation",
              "type": "array",
              "description": "Recommended fields for enhanced automation",
              "required": false,
              "examples": [
                [
                  "parameters",
                  "dependencies",
                  "toolRequirements",
                  "performance",
                  "reliability",
                  "packaging",
                  "community",
                  "security"
                ]
              ]
            },
            {
              "name": "blocking_issues",
              "type": "array",
              "description": "Issues that prevent automation (e.g., missing source, encrypted IP)",
              "required": false,
              "examples": [
                [
                  "encrypted_ip",
                  "requires_nda"
                ],
                [
                  "missing_source"
                ]
              ]
            }
          ]
        },
        {
          "name": "capabilities",
          "type": "object",
          "description": "Automation capabilities and workflow support",
          "required": false,
          "children": [
            {
              "name": "workflow_support",
              "type": "array",
              "description": "Supported automation workflows",
              "required": false,
              "examples": [
                [
                  "ci_cd_integration",
                  "automated_testing",
                  "documentation_generation"
                ],
                [
                  "dependency_management",
                  "version_control"
                ]
              ]
            },
            {
              "name": "integration_points",
              "type": "array",
              "description": "Supported CI/CD integration points",
              "required": false,
              "examples": [
                [
                  "github_actions",
                  "custom_scripts"
                ],
                [
                  "jenkins",
                  "azure_devops"
                ]
              ]
            }
          ]
        },
        {
          "name": "security_policy",
          "type": "object",
          "description": "Project-wide security policy for automation",
          "required": false,
          "examples": [
            {
              "min_security_level": "medium",
              "require_assertions": true,
              "require_secure_testbench": true,
              "tag_high_risk_ips": true,
              "enforced_standards": [
                "iso_26262"
              ],
              "automated_checks": [
                "assertion_coverage",
                "fuzzing_tests"
              ]
            },
            {
              "min_security_level": "critical",
              "require_assertions": true,
              "require_secure_testbench": true,
              "require_formal_verification": true,
              "tag_high_risk_ips": true,
              "enforced_standards": [
                "fips_140",
                "nist_sp_800"
              ],
              "automated_checks": [
                "assertion_coverage",
                "fuzzing_tests",
                "formal_verification",
                "side_channel_analysis"
              ]
            }
          ],
          "children": [
            {
              "name": "min_security_level",
              "type": "string",
              "description": "Minimum security level required for all IPs in this project",
              "required": false,
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ],
              "examples": [
                "medium",
                "high"
              ]
            },
            {
              "name": "require_assertions",
              "type": "boolean",
              "description": "Whether security assertions are required for all IPs",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "require_secure_testbench",
              "type": "boolean",
              "description": "Whether secure testbench generation is required",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "require_formal_verification",
              "type": "boolean",
              "description": "Whether formal verification is required for security properties",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "tag_high_risk_ips",
              "type": "boolean",
              "description": "Whether to automatically tag high-risk IPs",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "enforced_standards",
              "type": "array",
              "description": "Security standards that must be enforced",
              "required": false,
              "examples": [
                [
                  "iso_26262",
                  "iec_61508"
                ],
                [
                  "fips_140",
                  "nist_sp_800"
                ]
              ]
            },
            {
              "name": "automated_checks",
              "type": "array",
              "description": "Automated security checks to run",
              "required": false,
              "examples": [
                [
                  "assertion_coverage",
                  "fuzzing_tests",
                  "formal_verification"
                ],
                [
                  "side_channel_analysis",
                  "threat_modeling",
                  "compliance_check"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "branding",
      "type": "object",
      "description": "Optional branding metadata for provider attribution.",
      "required": [
        "provider"
      ],
      "examples": [
        {
          "provider": "Vyges Inc.",
          "logo": "https://vyges.com/images/logo.svg",
          "website": "https://vyges.com",
          "usage": "Attribution only"
        },
        {
          "provider": "Acme Semiconductor",
          "website": "https://acme.com/ip/pcie-phy",
          "usage": "Contact for commercial use"
        }
      ],
      "children": [
        {
          "name": "provider",
          "type": "string",
          "description": "Name of the company, organization, or individual maintaining the IP.",
          "required": false,
          "examples": [
            "Vyges Inc.",
            "Acme Semiconductor"
          ]
        },
        {
          "name": "logo",
          "type": "string",
          "description": "URL to a logo image (SVG or PNG preferred).",
          "required": false,
          "examples": [
            "https://vyges.com/images/logo.svg",
            "https://acme.com/logo.png"
          ]
        },
        {
          "name": "website",
          "type": "string",
          "description": "Link to the official IP page or provider's site.",
          "required": false,
          "examples": [
            "https://vyges.com",
            "https://acme.com/ip/pcie-phy"
          ]
        },
        {
          "name": "usage",
          "type": "string",
          "description": "Optional note describing how branding may be used (e.g., attribution only).",
          "required": false,
          "examples": [
            "Attribution only",
            "Logo may be used in documentation"
          ]
        }
      ]
    },
    {
      "name": "created",
      "type": "string",
      "description": "ISO 8601 timestamp when this IP was first created",
      "required": false,
      "examples": [
        "2024-01-15T10:30:00Z",
        "2023-12-01T09:15:00Z"
      ]
    },
    {
      "name": "interfaces",
      "type": "array",
      "description": "One or more external interfaces this IP exposes",
      "required": false,
      "examples": [
        [
          {
            "interface_types": {
              "type": "bus",
              "direction": "input"
            },
            "protocol_config": {
              "protocol": "APB",
              "width": 32
            },
            "signal_definitions": {
              "signals": [
                {
                  "name": "PCLK",
                  "direction": "input",
                  "type": "clock",
                  "description": "APB clock signal"
                },
                {
                  "name": "PRESETn",
                  "direction": "input",
                  "type": "reset",
                  "active_level": "low",
                  "description": "APB reset signal"
                }
              ]
            }
          }
        ],
        [
          {
            "interface_types": {
              "type": "chiplet",
              "direction": "inout"
            },
            "protocol_config": {
              "protocol": "UCIe",
              "width": 64
            },
            "signal_definitions": {
              "signals": [
                {
                  "name": "ucie_clk",
                  "direction": "input",
                  "type": "clock",
                  "description": "UCIe clock signal"
                },
                {
                  "name": "ucie_rst_n",
                  "direction": "input",
                  "type": "reset",
                  "active_level": "low",
                  "description": "UCIe reset signal"
                },
                {
                  "name": "ucie_tx_data",
                  "direction": "output",
                  "type": "data",
                  "width": 64,
                  "description": "UCIe transmit data"
                },
                {
                  "name": "ucie_rx_data",
                  "direction": "input",
                  "type": "data",
                  "width": 64,
                  "description": "UCIe receive data"
                }
              ]
            }
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "type"
          ],
          "children": [
            {
              "name": "interface_types",
              "type": "object",
              "description": "Interface type and direction configuration",
              "required": false,
              "children": [
                {
                  "name": "type",
                  "type": "string",
                  "description": "Interface type category",
                  "required": false,
                  "enum": [
                    "bus",
                    "io",
                    "interrupt",
                    "clock",
                    "reset",
                    "chiplet"
                  ],
                  "examples": [
                    "bus",
                    "io"
                  ]
                },
                {
                  "name": "direction",
                  "type": "string",
                  "description": "Signal direction: input (to IP), output (from IP), or inout (bidirectional)",
                  "required": false,
                  "enum": [
                    "input",
                    "output",
                    "inout"
                  ],
                  "examples": [
                    "input",
                    "output"
                  ]
                }
              ]
            },
            {
              "name": "protocol_config",
              "type": "object",
              "description": "Protocol and configuration details",
              "required": false,
              "children": [
                {
                  "name": "protocol",
                  "type": "string",
                  "description": "Bus protocol name, e.g. AXI4-Lite, APB, TileLink",
                  "required": false,
                  "examples": [
                    "APB",
                    "AXI4-Lite"
                  ]
                },
                {
                  "name": "width",
                  "type": "integer",
                  "description": "Interface width in bits (for bus interfaces)",
                  "required": false,
                  "examples": [
                    32,
                    64
                  ]
                }
              ]
            },
            {
              "name": "signal_definitions",
              "type": "object",
              "description": "Detailed signal specifications",
              "required": false,
              "children": [
                {
                  "name": "signals",
                  "type": "array",
                  "description": "List of signals in this interface",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "name",
                        "direction"
                      ],
                      "examples": [
                        {
                          "name": "PCLK",
                          "direction": "input",
                          "type": "clock",
                          "description": "APB clock signal"
                        },
                        {
                          "name": "PRESETn",
                          "direction": "input",
                          "type": "reset",
                          "active_level": "low",
                          "description": "APB reset signal"
                        }
                      ],
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "Signal name as it appears in the RTL",
                          "required": false,
                          "examples": [
                            "PCLK",
                            "PRESETn"
                          ]
                        },
                        {
                          "name": "direction",
                          "type": "string",
                          "description": "Signal direction relative to the IP block",
                          "required": false,
                          "enum": [
                            "input",
                            "output",
                            "inout"
                          ],
                          "examples": [
                            "input",
                            "output"
                          ]
                        },
                        {
                          "name": "width",
                          "type": "integer",
                          "description": "Signal width in bits (1 for single-bit signals)",
                          "required": false,
                          "examples": [
                            1,
                            8
                          ]
                        },
                        {
                          "name": "type",
                          "type": "string",
                          "description": "Signal category for better understanding",
                          "required": false,
                          "enum": [
                            "data",
                            "control",
                            "clock",
                            "reset",
                            "interrupt",
                            "status"
                          ],
                          "examples": [
                            "clock",
                            "reset"
                          ]
                        },
                        {
                          "name": "description",
                          "type": "string",
                          "description": "Human-readable description of the signal's purpose",
                          "required": false,
                          "examples": [
                            "APB clock signal",
                            "APB reset signal"
                          ]
                        },
                        {
                          "name": "active_level",
                          "type": "string",
                          "description": "Active level for control signals (e.g., reset, enable)",
                          "required": false,
                          "enum": [
                            "high",
                            "low"
                          ],
                          "examples": [
                            "high",
                            "low"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "asic",
      "type": "object",
      "description": "ASIC-specific configuration and requirements",
      "required": false,
      "examples": [
        {
          "design_config": {
            "flavor": "digital",
            "pdks": [
              "sky130B",
              "sky130A"
            ],
            "clock_freq_mhz": 100
          },
          "tools": {
            "synthesis_tool": "openlane",
            "tools": [
              "yosys",
              "openroad"
            ]
          },
          "constraints": {
            "constraints": [
              "constraints.sdc"
            ]
          }
        },
        {
          "design_config": {
            "flavor": "analog",
            "pdks": [
              "sky130B"
            ]
          },
          "tools": {
            "tools": [
              "ngspice",
              "xschem"
            ]
          },
          "constraints": {
            "analog_models": [
              "models.spice"
            ]
          },
          "views": {
            "symbol_views": [
              "symbol.sym"
            ],
            "layout_views": [
              "layout.gds"
            ]
          }
        }
      ],
      "children": [
        {
          "name": "design_config",
          "type": "object",
          "description": "Basic ASIC design configuration",
          "required": false,
          "children": [
            {
              "name": "flavor",
              "type": "string",
              "description": "ASIC design type",
              "required": false,
              "enum": [
                "digital",
                "analog",
                "mixed-signal"
              ],
              "examples": [
                "digital",
                "analog"
              ]
            },
            {
              "name": "pdks",
              "type": "array",
              "description": "List of supported PDKs (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
              "required": false,
              "examples": [
                [
                  "sky130B",
                  "sky130A"
                ],
                [
                  "gf180mcuC"
                ]
              ]
            },
            {
              "name": "clock_freq_mhz",
              "type": "number",
              "description": "Target clock frequency in MHz",
              "required": false,
              "examples": [
                100,
                250
              ]
            }
          ]
        },
        {
          "name": "tools",
          "type": "object",
          "description": "ASIC design and verification tools",
          "required": false,
          "children": [
            {
              "name": "synthesis_tool",
              "type": "string",
              "description": "Primary synthesis tool for digital flows",
              "required": false,
              "enum": [
                "openlane",
                "design_compiler",
                "genus",
                "yosys"
              ],
              "examples": [
                "openlane",
                "design_compiler"
              ]
            },
            {
              "name": "tools",
              "type": "array",
              "description": "List of tools used (e.g., ngspice, xschem for analog)",
              "required": false,
              "examples": [
                [
                  "yosys",
                  "openroad"
                ],
                [
                  "ngspice",
                  "xschem"
                ]
              ]
            }
          ]
        },
        {
          "name": "constraints",
          "type": "object",
          "description": "Design constraints and configuration files",
          "required": false,
          "children": [
            {
              "name": "constraints",
              "type": "array",
              "description": "List of constraint files (.sdc, etc.)",
              "required": false,
              "examples": [
                [
                  "constraints.sdc"
                ],
                [
                  "timing.sdc",
                  "area.sdc"
                ]
              ]
            },
            {
              "name": "analog_models",
              "type": "array",
              "description": "List of analog model files (.spice, .ams, etc.)",
              "required": false,
              "examples": [
                [
                  "models.spice"
                ],
                [
                  "analog.ams",
                  "models.spice"
                ]
              ]
            }
          ]
        },
        {
          "name": "views",
          "type": "object",
          "description": "Design views and representations",
          "required": false,
          "children": [
            {
              "name": "symbol_views",
              "type": "array",
              "description": "List of symbol view files",
              "required": false,
              "examples": [
                [
                  "symbol.sym"
                ],
                [
                  "spi_controller.sym"
                ]
              ]
            },
            {
              "name": "layout_views",
              "type": "array",
              "description": "List of layout view files",
              "required": false,
              "examples": [
                [
                  "layout.gds"
                ],
                [
                  "spi_controller.gds",
                  "spi_controller.lef"
                ]
              ]
            }
          ]
        },
        {
          "name": "mixed_signal",
          "type": "object",
          "description": "Mixed-signal design configuration",
          "required": false,
          "children": [
            {
              "name": "digital_partition",
              "type": "array",
              "description": "List of digital RTL files for mixed-signal flows",
              "required": false,
              "examples": [
                [
                  "spi_controller.v"
                ],
                [
                  "spi_controller.sv",
                  "spi_fifo.v"
                ]
              ]
            },
            {
              "name": "analog_partition",
              "type": "array",
              "description": "List of analog files for mixed-signal flows",
              "required": false,
              "examples": [
                [
                  "analog.spice"
                ],
                [
                  "analog.ams",
                  "analog.spice"
                ]
              ]
            },
            {
              "name": "co_simulation",
              "type": "object",
              "description": "Co-simulation configuration for mixed-signal flows",
              "required": false,
              "examples": [
                {
                  "tool": "ams-designer",
                  "interface_signals": [
                    "clk",
                    "rst_n",
                    "data_in",
                    "data_out"
                  ]
                },
                {
                  "tool": "spectre",
                  "interface_signals": [
                    "adc_in",
                    "dac_out"
                  ]
                }
              ],
              "children": [
                {
                  "name": "tool",
                  "type": "string",
                  "description": "Co-simulation tool (e.g., ams-designer)",
                  "required": false,
                  "examples": [
                    "ams-designer",
                    "spectre"
                  ]
                },
                {
                  "name": "interface_signals",
                  "type": "array",
                  "description": "List of interface signals between digital and analog partitions",
                  "required": false,
                  "examples": [
                    [
                      "clk",
                      "rst_n",
                      "data_in",
                      "data_out"
                    ],
                    [
                      "adc_in",
                      "dac_out"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "roadmap",
      "type": "object",
      "description": "Future development plans and roadmap",
      "required": false,
      "examples": [
        {
          "planned_features": [
            "DMA support",
            "Interrupt handling",
            "Power management"
          ],
          "deprecation_plan": "Version 2.0 will be deprecated in Q4 2024. Migration guide available at https://docs.vyges.com/migration",
          "version_schedule": {
            "next_major": "2024-12-01",
            "next_minor": "2024-09-01",
            "maintenance_until": "2026-12-31"
          }
        },
        {
          "planned_features": [
            "Multi-lane support",
            "Advanced error correction"
          ],
          "deprecation_plan": "No deprecation planned"
        }
      ],
      "children": [
        {
          "name": "planned_features",
          "type": "array",
          "description": "List of planned features or improvements",
          "required": false,
          "examples": [
            [
              "DMA support",
              "Interrupt handling",
              "Power management"
            ],
            [
              "Multi-lane support",
              "Advanced error correction"
            ]
          ]
        },
        {
          "name": "deprecation_plan",
          "type": "string",
          "description": "Deprecation timeline and migration path",
          "required": false,
          "examples": [
            "Version 2.0 will be deprecated in Q4 2024. Migration guide available at https://docs.vyges.com/migration",
            "No deprecation planned"
          ]
        },
        {
          "name": "version_schedule",
          "type": "object",
          "description": "Planned version release schedule",
          "required": false,
          "examples": [
            {
              "next_major": "2024-12-01",
              "next_minor": "2024-09-01",
              "maintenance_until": "2026-12-31"
            },
            {
              "next_minor": "2024-11-15",
              "maintenance_until": "2027-06-30"
            }
          ],
          "children": [
            {
              "name": "next_major",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2024-12-01",
                "2025-03-15"
              ]
            },
            {
              "name": "next_minor",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2024-09-01",
                "2024-11-15"
              ]
            },
            {
              "name": "maintenance_until",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2026-12-31",
                "2027-06-30"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "delivery",
      "type": "object",
      "description": "IP delivery and access information",
      "required": false,
      "examples": [
        {
          "encryptedRTL": false,
          "encryptedModels": false,
          "formats": [
            "verilog",
            "vhdl"
          ],
          "requiresNDA": false
        },
        {
          "encryptedRTL": true,
          "encryptedModels": true,
          "formats": [
            "lib",
            "db",
            "gds"
          ],
          "requiresNDA": true,
          "access": "https://acme.com/contact",
          "licenseModel": "per-project",
          "partnerPortal": "https://partners.acme.com"
        }
      ],
      "children": [
        {
          "name": "encryptedRTL",
          "type": "boolean",
          "description": "Whether the RTL is encrypted or proprietary",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "encryptedModels",
          "type": "boolean",
          "description": "Whether analog models are encrypted",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "formats",
          "type": "array",
          "description": "List of delivered file formats (e.g., verilog, vhdl, lib, db, gds, spice)",
          "required": false,
          "examples": [
            [
              "verilog",
              "vhdl"
            ],
            [
              "spice",
              "gds"
            ]
          ]
        },
        {
          "name": "requiresNDA",
          "type": "boolean",
          "description": "Whether an NDA is required for access",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "access",
          "type": "string",
          "description": "Contact information or URL for requesting access",
          "required": false,
          "examples": [
            "https://acme.com/contact",
            "sales@acme.com"
          ]
        },
        {
          "name": "licenseModel",
          "type": "string",
          "description": "Type of licensing model",
          "required": false,
          "enum": [
            "evaluation",
            "per-project",
            "royalty",
            "proprietary"
          ],
          "examples": [
            "evaluation",
            "per-project"
          ]
        },
        {
          "name": "partnerPortal",
          "type": "string",
          "description": "URL to partner portal for licensing",
          "required": false,
          "examples": [
            "https://partners.acme.com",
            "https://licensing.vyges.com"
          ]
        }
      ]
    },
    {
      "name": "template",
      "type": "string",
      "description": "Name and version of the template used (e.g., vyges-ip-template@1.0.0)",
      "required": false,
      "examples": [
        "vyges-ip-template@1.0.0"
      ]
    },
    {
      "name": "version",
      "type": "string",
      "description": "Semantic version of this IP block (e.g. 1.2.3). This is the version of the actual IP block being described and is used for dependency resolution, downloading specific versions, and release management. Each IP block has its own independent version.",
      "required": false,
      "examples": [
        "1.0.0",
        "2.1.3"
      ]
    },
    {
      "name": "meta",
      "type": "object",
      "description": "Additional metadata for future extensibility",
      "required": false,
      "examples": [
        {
          "template": {
            "generator": "vyges-cli",
            "init_tool": "vyges-cli",
            "template_version": "1.0.0",
            "generated_at": "2024-01-15T10:30:00Z"
          },
          "generated_by": "vyges-cli",
          "schema": {
            "version": "1.0.0",
            "compatible_versions": [
              "1.0.0",
              "1.1.0"
            ],
            "generated_with": "vyges-cli"
          }
        }
      ],
      "children": [
        {
          "name": "template",
          "type": "object",
          "description": "Template-related metadata",
          "required": false,
          "examples": [
            {
              "generator": "vyges-cli",
              "init_tool": "vyges-cli",
              "template_version": "1.0.0",
              "generated_at": "2024-01-15T10:30:00Z"
            }
          ],
          "children": [
            {
              "name": "generator",
              "type": "string",
              "description": "Tool or service that generated this IP from the template",
              "required": false,
              "examples": [
                "vyges-cli",
                "cookiecutter"
              ]
            },
            {
              "name": "init_tool",
              "type": "string",
              "description": "Initialization tool used (e.g., vyges-cli, cookiecutter)",
              "required": false,
              "examples": [
                "vyges-cli",
                "cookiecutter"
              ]
            },
            {
              "name": "template_version",
              "type": "string",
              "description": "Version of the template when this IP was generated",
              "required": false,
              "examples": [
                "1.0.0",
                "2.1.0"
              ]
            },
            {
              "name": "generated_at",
              "type": "string",
              "description": "ISO 8601 timestamp when this IP was generated from the template",
              "required": false,
              "examples": [
                "2024-01-15T10:30:00Z",
                "2023-12-01T09:15:00Z"
              ]
            }
          ]
        },
        {
          "name": "generated_by",
          "type": "string",
          "description": "Tool or service that created this metadata file",
          "required": false,
          "examples": [
            "vyges-cli",
            "manual"
          ]
        },
        {
          "name": "schema",
          "type": "object",
          "description": "Schema version and compatibility information",
          "required": [
            "version"
          ],
          "examples": [
            {
              "version": "1.0.0",
              "compatible_versions": [
                "1.0.0",
                "1.1.0"
              ],
              "generated_with": "vyges-cli"
            }
          ],
          "children": [
            {
              "name": "version",
              "type": "string",
              "description": "Version of the vyges-metadata schema used",
              "required": false,
              "examples": [
                "1.0.0",
                "0.1.0"
              ]
            },
            {
              "name": "compatible_versions",
              "type": "array",
              "description": "List of compatible schema versions",
              "required": false,
              "examples": [
                [
                  "1.0.0",
                  "1.1.0"
                ],
                [
                  "0.1.0",
                  "0.2.0"
                ]
              ]
            },
            {
              "name": "generated_with",
              "type": "string",
              "description": "Tool that generated this metadata file",
              "required": false,
              "examples": [
                "vyges-cli",
                "json-schema-generator"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "sourceFiles",
      "type": "array",
      "description": "List of source RTL files constituting the IP block.",
      "required": false,
      "examples": [
        {
          "file_metadata": {
            "path": "rtl/spi_controller.sv",
            "type": "rtl",
            "owner": "vyges-team",
            "version": "1.0.0",
            "license": "Apache-2.0"
          },
          "organization": {
            "block": "spi"
          }
        },
        {
          "file_metadata": {
            "path": "rtl/third_party/uart_core.v",
            "type": "rtl",
            "owner": "acme-corp",
            "version": "2.1.0",
            "license": "MIT"
          },
          "vendor_info": {
            "name": "ACME Corporation",
            "docs": [
              {
                "title": "UART Core Datasheet",
                "url": "https://acme.com/docs/uart-core-datasheet.pdf",
                "type": "datasheet"
              },
              {
                "title": "UART Core User Guide",
                "url": "https://acme.com/docs/uart-core-user-guide.pdf",
                "type": "user_guide"
              }
            ],
            "contact": {
              "email": "support@acme.com",
              "url": "https://acme.com/support"
            }
          },
          "organization": {
            "block": "uart"
          }
        }
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "path",
            "type",
            "owner",
            "version",
            "license"
          ],
          "children": [
            {
              "name": "file_metadata",
              "type": "object",
              "description": "Basic file information and metadata",
              "required": false,
              "children": [
                {
                  "name": "path",
                  "type": "string",
                  "description": "Relative path to the file.",
                  "required": false
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "File category.",
                  "required": false,
                  "enum": [
                    "rtl",
                    "testbench",
                    "constraint",
                    "doc",
                    "header"
                  ]
                },
                {
                  "name": "owner",
                  "type": "string",
                  "description": "Maintainer or owner of this file.",
                  "required": false
                },
                {
                  "name": "version",
                  "type": "string",
                  "description": "Version or commit identifier of the file.",
                  "required": false
                },
                {
                  "name": "license",
                  "type": "string",
                  "description": "SPDX license identifier for this file.",
                  "required": false
                }
              ]
            },
            {
              "name": "vendor_info",
              "type": "object",
              "description": "Vendor information for the IP",
              "required": [
                "name"
              ],
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Name of the vendor or organization",
                  "required": false
                },
                {
                  "name": "docs",
                  "type": "array",
                  "description": "Documentation links from vendor.",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "title",
                        "url"
                      ],
                      "children": [
                        {
                          "name": "title",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "url",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "type",
                          "type": "string",
                          "description": "",
                          "required": false,
                          "enum": [
                            "datasheet",
                            "user_guide",
                            "api_ref",
                            "app_note",
                            "reference_manual",
                            "integration_guide",
                            "other"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "contact",
                  "type": "object",
                  "description": "Contact information for vendor support",
                  "required": false,
                  "children": [
                    {
                      "name": "email",
                      "type": "string",
                      "description": "Primary support email address",
                      "required": false
                    },
                    {
                      "name": "url",
                      "type": "string",
                      "description": "Support page or contact form URL",
                      "required": false
                    },
                    {
                      "name": "phone",
                      "type": "string",
                      "description": "Support phone number (optional)",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "organization",
              "type": "object",
              "description": "File organization and logical grouping",
              "required": false,
              "children": [
                {
                  "name": "block",
                  "type": "string",
                  "description": "Logical block name or namespace this file belongs to. Used for organization and to avoid naming conflicts between different functional blocks within the same IP.",
                  "required": false,
                  "examples": [
                    "spi",
                    "uart"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "performance",
      "type": "object",
      "description": "Performance characteristics and benchmarks",
      "required": false,
      "examples": [
        {
          "clock_frequency": {
            "value": 100,
            "unit": "MHz",
            "description": "Maximum operating frequency",
            "measurement_type": "estimate"
          },
          "area": {
            "value": 50000,
            "unit": "gates",
            "description": "Estimated gate count for 1024-point FFT",
            "measurement_type": "estimate"
          },
          "power": {
            "value": 50,
            "unit": "mW",
            "description": "Estimated power consumption at 1GHz",
            "measurement_type": "estimate"
          }
        }
      ],
      "children": [
        {
          "name": "clock_frequency",
          "type": "object",
          "description": "Clock frequency performance",
          "required": [
            "value",
            "unit"
          ],
          "examples": [
            {
              "value": 100,
              "unit": "MHz",
              "description": "Maximum operating frequency",
              "measurement_type": "estimate"
            }
          ],
          "children": [
            {
              "name": "value",
              "type": "number",
              "description": "Frequency value",
              "required": false
            },
            {
              "name": "unit",
              "type": "string",
              "description": "Frequency unit (e.g., MHz, GHz)",
              "required": false,
              "examples": [
                "MHz",
                "GHz"
              ]
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of the frequency measurement",
              "required": false
            },
            {
              "name": "measurement_type",
              "type": "string",
              "description": "Type of measurement",
              "required": false,
              "enum": [
                "estimate",
                "actual",
                "NA",
                "other"
              ]
            }
          ]
        },
        {
          "name": "area",
          "type": "object",
          "description": "Area performance metrics",
          "required": [
            "value",
            "unit"
          ],
          "examples": [
            {
              "value": 50000,
              "unit": "gates",
              "description": "Estimated gate count for 1024-point FFT",
              "measurement_type": "estimate"
            }
          ],
          "children": [
            {
              "name": "value",
              "type": "number",
              "description": "Area value",
              "required": false
            },
            {
              "name": "unit",
              "type": "string",
              "description": "Area unit (e.g., gates, mm², μm²)",
              "required": false,
              "examples": [
                "gates",
                "mm²"
              ]
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of the area measurement",
              "required": false
            },
            {
              "name": "measurement_type",
              "type": "string",
              "description": "Type of measurement",
              "required": false,
              "enum": [
                "estimate",
                "actual",
                "NA",
                "other"
              ]
            }
          ]
        },
        {
          "name": "power",
          "type": "object",
          "description": "Power consumption metrics",
          "required": [
            "value",
            "unit"
          ],
          "examples": [
            {
              "value": 50,
              "unit": "mW",
              "description": "Estimated power consumption at 1GHz",
              "measurement_type": "estimate"
            }
          ],
          "children": [
            {
              "name": "value",
              "type": "number",
              "description": "Power value",
              "required": false
            },
            {
              "name": "unit",
              "type": "string",
              "description": "Power unit (e.g., mW, W)",
              "required": false,
              "examples": [
                "mW",
                "W"
              ]
            },
            {
              "name": "description",
              "type": "string",
              "description": "Description of the power measurement",
              "required": false
            },
            {
              "name": "measurement_type",
              "type": "string",
              "description": "Type of measurement",
              "required": false,
              "enum": [
                "estimate",
                "actual",
                "NA",
                "other"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "target_pdks",
      "type": "array",
      "description": "PDKs this IP has been validated against (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
      "required": false,
      "examples": [
        [
          "sky130B",
          "gf180mcuC"
        ],
        [
          "sky130B"
        ]
      ]
    },
    {
      "name": "trust_profile",
      "type": "object",
      "description": "Security and trust indicators for the IP",
      "required": false,
      "examples": [
        {
          "reproducible_build": true,
          "fuzzed": true,
          "lint_clean": true,
          "signed": false
        },
        {
          "reproducible_build": true,
          "lint_clean": true,
          "fuzzed": false,
          "signed": true
        }
      ],
      "children": [
        {
          "name": "reproducible_build",
          "type": "boolean",
          "description": "Whether the build is reproducible from source",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "fuzzed",
          "type": "boolean",
          "description": "Whether the IP has been fuzz tested",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "lint_clean",
          "type": "boolean",
          "description": "Whether the IP passes linting checks",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "signed",
          "type": "boolean",
          "description": "Whether the IP is cryptographically signed",
          "required": false,
          "examples": [
            true,
            false
          ]
        }
      ]
    },
    {
      "name": "description",
      "type": "string",
      "description": "Short description of what the IP block does",
      "required": false,
      "examples": [
        "SPI master controller with configurable clock divider",
        "High-speed PCIe Gen4 PHY with encrypted RTL payload"
      ]
    },
    {
      "name": "toolRequirements",
      "type": "object",
      "description": "Tool requirements for using this IP",
      "required": false,
      "examples": [
        {
          "simulation": "verilator",
          "synthesis": "yosys",
          "physical": "openroad",
          "layout": "magic",
          "verification": "netgen",
          "notes": "Open-source toolchain supported"
        },
        {
          "simulation": "VCS",
          "synthesis": "Design Compiler",
          "physical": "Innovus",
          "layout": "Virtuoso",
          "verification": "calibre",
          "version_notes": {
            "VCS": "2023.06+ required",
            "Design Compiler": "2023.03+ recommended"
          },
          "notes": "Requires commercial tools for full functionality"
        }
      ],
      "children": [
        {
          "name": "simulation",
          "type": "string",
          "description": "Required simulation tool (e.g., VCS, ModelSim, verilator)",
          "required": false,
          "examples": [
            "verilator",
            "VCS"
          ]
        },
        {
          "name": "synthesis",
          "type": "string",
          "description": "Required synthesis tool (e.g., Design Compiler, OpenLane)",
          "required": false,
          "examples": [
            "yosys",
            "Design Compiler"
          ]
        },
        {
          "name": "physical",
          "type": "string",
          "description": "Required physical design tool (e.g., Innovus, OpenLane)",
          "required": false,
          "examples": [
            "openroad",
            "Innovus"
          ]
        },
        {
          "name": "layout",
          "type": "string",
          "description": "Required layout tool (e.g., Virtuoso, Magic)",
          "required": false,
          "examples": [
            "magic",
            "Virtuoso"
          ]
        },
        {
          "name": "verification",
          "type": "string",
          "description": "Required verification tool (e.g., Calibre, PVS)",
          "required": false,
          "examples": [
            "calibre",
            "PVS"
          ]
        },
        {
          "name": "version_notes",
          "type": "object",
          "description": "Optional version requirements and compatibility notes for tools",
          "required": false,
          "examples": [
            {
              "verilator": "4.0+ for SystemVerilog, 5.0+ for latest optimizations",
              "yosys": "0.9+ for basic synthesis, 0.23+ for advanced features",
              "vivado": "2023.1+ recommended for latest features",
              "edalock": "See EDA Lock manifest for exact tool versions and reproducible builds"
            }
          ]
        },
        {
          "name": "notes",
          "type": "string",
          "description": "Additional notes about tool requirements",
          "required": false,
          "examples": [
            "Requires commercial tools for full functionality",
            "Open-source toolchain supported"
          ]
        }
      ]
    },
    {
      "name": "design_type",
      "type": "array",
      "description": "Design types this IP supports",
      "required": false,
      "examples": [
        [
          "digital"
        ],
        [
          "analog"
        ]
      ]
    },
    {
      "name": "integration",
      "type": "object",
      "description": "Integration examples and wrappers",
      "required": false,
      "examples": [
        {
          "examples": [
            {
              "target": "simulation",
              "wrapper": "examples/spi_wrapper.v",
              "tb": "examples/spi_tb.v"
            },
            {
              "target": "fpga",
              "wrapper": "examples/fpga_wrapper.v",
              "tb": "test/spi_integration_tb.py"
            }
          ]
        }
      ],
      "children": [
        {
          "name": "examples",
          "type": "array",
          "description": "List of integration examples",
          "required": false,
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": false,
              "examples": [
                {
                  "target": "simulation",
                  "wrapper": "examples/spi_wrapper.v",
                  "tb": "examples/spi_tb.v"
                },
                {
                  "target": "fpga",
                  "wrapper": "examples/fpga_wrapper.v",
                  "tb": "test/spi_integration_tb.py"
                }
              ],
              "children": [
                {
                  "name": "target",
                  "type": "string",
                  "description": "Target platform for the example",
                  "required": false,
                  "enum": [
                    "simulation",
                    "fpga",
                    "asic"
                  ],
                  "examples": [
                    "simulation",
                    "fpga"
                  ]
                },
                {
                  "name": "wrapper",
                  "type": "string",
                  "description": "Path to wrapper file or module name",
                  "required": false,
                  "examples": [
                    "examples/spi_wrapper.v",
                    "examples/fpga_wrapper.v"
                  ]
                },
                {
                  "name": "tb",
                  "type": "string",
                  "description": "Path to testbench file",
                  "required": false,
                  "examples": [
                    "examples/spi_tb.v",
                    "test/spi_integration_tb.py"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "dependencies",
      "type": "array",
      "description": "List of other IP blocks or libraries this IP depends on",
      "required": false,
      "examples": [
        [
          {
            "dependency_info": {
              "name": "openhw/apb-bridge",
              "version": "^1.0.0",
              "type": "ip"
            },
            "source_management": {
              "source": {
                "type": "git",
                "url": "https://github.com/openhwgroup/apb-bridge",
                "commit": "a1b2c3d"
              },
              "autoFetch": true
            },
            "compliance": {
              "license": "CERN-OHL-S",
              "attribution": "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S."
            }
          }
        ],
        [
          {
            "dependency_info": {
              "name": "pulp-platform/common_cells",
              "version": ">=1.0.0",
              "type": "library",
              "optional": true
            },
            "compliance": {
              "license": "Apache-2.0"
            }
          },
          {
            "dependency_info": {
              "name": "lowrisc/prim",
              "version": "~1.0.0",
              "type": "ip"
            },
            "source_management": {
              "source": {
                "type": "git",
                "url": "https://github.com/lowrisc/opentitan",
                "commit": "main"
              }
            },
            "compliance": {
              "license": "Apache-2.0"
            }
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name",
            "version"
          ],
          "examples": [
            {
              "dependency_info": {
                "name": "openhw/apb-bridge",
                "version": "^1.0.0",
                "type": "ip"
              },
              "source_management": {
                "source": {
                  "type": "git",
                  "url": "https://github.com/openhwgroup/apb-bridge",
                  "commit": "a1b2c3d"
                },
                "autoFetch": true
              },
              "compliance": {
                "license": "CERN-OHL-S",
                "attribution": "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S."
              }
            },
            {
              "dependency_info": {
                "name": "pulp-platform/common_cells",
                "version": ">=1.0.0",
                "type": "library",
                "optional": true
              },
              "compliance": {
                "license": "Apache-2.0"
              }
            }
          ],
          "children": [
            {
              "name": "dependency_info",
              "type": "object",
              "description": "Basic dependency information and requirements",
              "required": false,
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Name of the dependent IP or library",
                  "required": false,
                  "examples": [
                    "openhw/apb-bridge",
                    "pulp-platform/common_cells"
                  ]
                },
                {
                  "name": "version",
                  "type": "string",
                  "description": "Required version range (e.g., ^1.2.0, >=2.0.0)",
                  "required": false,
                  "examples": [
                    "^1.0.0",
                    ">=2.0.0"
                  ]
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Type of dependency",
                  "required": false,
                  "enum": [
                    "ip",
                    "library",
                    "tool"
                  ],
                  "examples": [
                    "ip",
                    "library"
                  ]
                },
                {
                  "name": "optional",
                  "type": "boolean",
                  "description": "Whether this dependency is optional",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                }
              ]
            },
            {
              "name": "source_management",
              "type": "object",
              "description": "Source location and version control information",
              "required": false,
              "children": [
                {
                  "name": "source",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "examples": [
                    {
                      "type": "git",
                      "url": "https://github.com/openhwgroup/apb-bridge",
                      "commit": "a1b2c3d",
                      "indexing": true
                    },
                    {
                      "type": "registry",
                      "url": "https://registry.vyges.com/ip/apb-bridge",
                      "indexing": false
                    }
                  ],
                  "children": [
                    {
                      "name": "type",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "enum": [
                        "git",
                        "archive",
                        "registry"
                      ],
                      "examples": [
                        "git",
                        "archive"
                      ]
                    },
                    {
                      "name": "url",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "examples": [
                        "https://github.com/openhwgroup/apb-bridge",
                        "https://github.com/pulp-platform/common_cells"
                      ]
                    },
                    {
                      "name": "commit",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "examples": [
                        "a1b2c3d",
                        "main"
                      ]
                    },
                    {
                      "name": "hash",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "examples": [
                        "sha256:abc123...",
                        "sha256:def456..."
                      ]
                    },
                    {
                      "name": "indexing",
                      "type": "boolean",
                      "description": "",
                      "required": false,
                      "examples": [
                        true,
                        false
                      ]
                    }
                  ]
                },
                {
                  "name": "autoFetch",
                  "type": "boolean",
                  "description": "Whether this dependency should be auto-downloaded by the Vyges CLI",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                }
              ]
            },
            {
              "name": "compliance",
              "type": "object",
              "description": "License and attribution requirements",
              "required": false,
              "children": [
                {
                  "name": "license",
                  "type": "string",
                  "description": "SPDX identifier of the dependency's license",
                  "required": false,
                  "examples": [
                    "Apache-2.0",
                    "CERN-OHL-S"
                  ]
                },
                {
                  "name": "attribution",
                  "type": "string",
                  "description": "Required attribution text or URL if OSS license demands it",
                  "required": false,
                  "examples": [
                    "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S.",
                    "Portions Copyright 2023 FOSSi Foundation"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "packaging",
      "type": "object",
      "description": "Packaging and standard integration support",
      "required": false,
      "examples": [
        {
          "ipxact": true,
          "edalock": true,
          "format": "verilog"
        },
        {
          "ipxact": false,
          "edalock": true,
          "format": "vhdl"
        }
      ],
      "children": [
        {
          "name": "ipxact",
          "type": "boolean",
          "description": "IP-XACT packaging compatibility",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "edalock",
          "type": "boolean",
          "description": "EDA Lock manifest support (for reproducible toolchains). When true, an EDA Lock manifest file should be present in the IP package.",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "format",
          "type": "string",
          "description": "Primary HDL format",
          "required": false,
          "enum": [
            "verilog",
            "vhdl",
            "chisel",
            "spice",
            "ams",
            "mixed"
          ],
          "examples": [
            "verilog",
            "vhdl"
          ]
        }
      ]
    },
    {
      "name": "compliance",
      "type": "object",
      "description": "Security and compliance metadata",
      "required": false,
      "examples": [
        {
          "sbom": "https://github.com/vyges/spi-controller/blob/main/sbom.json",
          "known_cves": [],
          "threat_model": "Side-channel attacks on cryptographic operations"
        },
        {
          "sbom": "https://acme.com/ip/sbom.xml",
          "known_cves": [
            "CVE-2023-1234"
          ],
          "threat_model": "Timing attacks on memory access patterns"
        }
      ],
      "children": [
        {
          "name": "sbom",
          "type": "string",
          "description": "Link to Software Bill of Materials (SBOM)",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/blob/main/sbom.json",
            "https://acme.com/ip/sbom.xml"
          ]
        },
        {
          "name": "known_cves",
          "type": "array",
          "description": "List of known CVE IDs affecting this IP (if applicable)",
          "required": false,
          "examples": [
            [],
            [
              "CVE-2023-1234"
            ]
          ]
        },
        {
          "name": "threat_model",
          "type": "string",
          "description": "Optional high-level threat model or attack surfaces",
          "required": false,
          "examples": [
            "Side-channel attacks on cryptographic operations",
            "Timing attacks on memory access patterns"
          ]
        }
      ]
    },
    {
      "name": "localization",
      "type": "object",
      "description": "Internationalization and localization support",
      "required": false,
      "examples": [
        {
          "supported_languages": [
            "en",
            "zh"
          ],
          "documentation_languages": [
            "en",
            "zh"
          ],
          "localized_descriptions": {
            "en": "High-performance SPI controller with configurable parameters",
            "zh": "高性能SPI控制器，具有可配置参数"
          }
        },
        {
          "supported_languages": [
            "en"
          ],
          "documentation_languages": [
            "en"
          ],
          "localized_descriptions": {
            "en": "PCIe PHY supporting multiple generations"
          }
        }
      ],
      "children": [
        {
          "name": "supported_languages",
          "type": "array",
          "description": "List of supported language codes (e.g., en, zh, ja)",
          "required": false,
          "examples": [
            [
              "en"
            ],
            [
              "en",
              "zh"
            ]
          ]
        },
        {
          "name": "documentation_languages",
          "type": "array",
          "description": "Languages in which documentation is available",
          "required": false,
          "examples": [
            [
              "en"
            ],
            [
              "en",
              "zh"
            ]
          ]
        },
        {
          "name": "localized_descriptions",
          "type": "object",
          "description": "Description in different languages",
          "required": false,
          "examples": [
            {
              "en": "High-performance SPI controller with configurable parameters",
              "zh": "高性能SPI控制器，具有可配置参数",
              "ja": "設定可能なパラメータを持つ高性能SPIコントローラー"
            },
            {
              "en": "PCIe PHY supporting multiple generations",
              "zh": "支持多代PCIe PHY",
              "ja": "複数の世代をサポートするPCIe PHY"
            }
          ]
        }
      ]
    },
    {
      "name": "security",
      "type": "object",
      "description": "Security and safety-related metadata for RTL design validation",
      "required": false,
      "examples": [
        {
          "meta": {
            "enabled": true,
            "security_level": "high",
            "tool_availability": "open_source",
            "target_flow": "fpga"
          },
          "analysis": {
            "risk_areas": [
              "memory_access",
              "fsm_state_control",
              "reset_glitch"
            ],
            "protection_features": [
              "address_range_check",
              "fsm_default_state",
              "reset_assertion"
            ]
          },
          "validation": {
            "recommended_tests": [
              "assert_illegal_address_access",
              "assert_fsm_stable_transitions",
              "reset_glitch_simulation"
            ],
            "requires_secure_testbench": true,
            "assertion_coverage": {
              "required_assertions": [
                "address_bounds_check",
                "fsm_state_validity"
              ],
              "coverage_target": 95,
              "critical_paths": [
                "memory_access_control",
                "reset_recovery"
              ]
            },
            "fuzzing_config": {
              "enabled": true,
              "input_ranges": [
                {
                  "signal": "addr",
                  "min_value": 0,
                  "max_value": 1023,
                  "include_invalid": true
                }
              ],
              "test_duration": 10000,
              "mutation_strategy": "random"
            },
            "formal_verification": {
              "enabled": true,
              "security_properties": [
                "no_illegal_memory_access",
                "fsm_reachability"
              ],
              "tools": {
                "open_source": [
                  "yosys-smtbmc",
                  "sby"
                ],
                "commercial": []
              },
              "timeout": 600
            }
          },
          "compliance": {
            "compliance_standards": [
              "iso_26262",
              "iec_61508"
            ],
            "security_documentation": {
              "security_analysis": "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
              "threat_model": "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md"
            }
          }
        },
        {
          "meta": {
            "enabled": true,
            "security_level": "critical",
            "tool_availability": "hybrid",
            "target_flow": "asic"
          },
          "analysis": {
            "risk_areas": [
              "cryptographic_operations",
              "timing_attacks",
              "fault_injection"
            ],
            "protection_features": [
              "side_channel_protection",
              "constant_time_operations",
              "power_analysis_resistance"
            ],
            "side_channel_analysis": {
              "enabled": true,
              "attack_vectors": [
                "timing",
                "power",
                "electromagnetic",
                "fault_injection"
              ],
              "protection_mechanisms": [
                "randomization",
                "shielding",
                "fault_detection"
              ],
              "analysis_tools": {
                "open_source": [
                  "chipwhisperer",
                  "numpy"
                ],
                "commercial": [
                  "secure_ic"
                ]
              }
            }
          },
          "validation": {
            "recommended_tests": [
              "assert_cryptographic_operations",
              "assert_timing_attack_resistance",
              "assert_fault_injection_resistance"
            ],
            "requires_secure_testbench": true,
            "formal_verification": {
              "enabled": true,
              "security_properties": [
                "cryptographic_key_integrity",
                "constant_time_operations"
              ],
              "tools": {
                "open_source": [
                  "yosys-smtbmc"
                ],
                "commercial": [
                  "oneSpin"
                ]
              },
              "timeout": 1800
            }
          },
          "compliance": {
            "compliance_standards": [
              "fips_140",
              "nist_sp_800"
            ],
            "security_documentation": {
              "security_analysis": "https://acme.com/ip/security_analysis.pdf",
              "threat_model": "https://acme.com/ip/threat_model.pdf",
              "penetration_testing": "https://acme.com/ip/penetration_testing.pdf"
            }
          }
        }
      ],
      "children": [
        {
          "name": "meta",
          "type": "object",
          "description": "Basic security configuration and metadata",
          "required": [
            "enabled"
          ],
          "children": [
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Whether security validation is enabled for this IP (disabled by default to lower barrier to entry)",
              "required": false,
              "examples": [
                false,
                true
              ]
            },
            {
              "name": "security_level",
              "type": "string",
              "description": "Severity or criticality of this IP from a security standpoint",
              "required": false,
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ],
              "examples": [
                "low",
                "medium"
              ]
            },
            {
              "name": "tool_availability",
              "type": "string",
              "description": "Preferred tool availability for security testing (open-source by default for accessibility)",
              "required": false,
              "enum": [
                "open_source",
                "commercial",
                "hybrid"
              ],
              "examples": [
                "open_source",
                "commercial"
              ]
            },
            {
              "name": "target_flow",
              "type": "string",
              "description": "Target design flow for security tool selection (references tools.{flow})",
              "required": false,
              "enum": [
                "asic",
                "fpga",
                "chiplet",
                "analog"
              ],
              "examples": [
                "fpga",
                "asic"
              ]
            }
          ]
        },
        {
          "name": "analysis",
          "type": "object",
          "description": "Security risk analysis and protection features",
          "required": false,
          "children": [
            {
              "name": "risk_areas",
              "type": "array",
              "description": "Functional areas where security validation is critical",
              "required": false,
              "examples": [
                [
                  "memory_access",
                  "fsm_state_control",
                  "reset_glitch"
                ],
                [
                  "bus_protocol",
                  "clock_domain_crossing",
                  "side_channel"
                ]
              ]
            },
            {
              "name": "protection_features",
              "type": "array",
              "description": "Security-related design features implemented in the IP",
              "required": false,
              "examples": [
                [
                  "address_range_check",
                  "fsm_default_state",
                  "reset_assertion"
                ],
                [
                  "ecc_protection",
                  "parity_checking",
                  "crc_validation"
                ]
              ]
            },
            {
              "name": "side_channel_analysis",
              "type": "object",
              "description": "Side-channel analysis requirements and protections",
              "required": false,
              "examples": [
                {
                  "enabled": true,
                  "attack_vectors": [
                    "timing",
                    "power"
                  ],
                  "protection_mechanisms": [
                    "constant_time_operations",
                    "power_balancing"
                  ],
                  "analysis_tools": {
                    "open_source": [
                      "custom_python",
                      "numpy"
                    ],
                    "commercial": [
                      "secure_ic"
                    ]
                  }
                }
              ],
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "Whether side-channel analysis is required",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "attack_vectors",
                  "type": "array",
                  "description": "Side-channel attack vectors to protect against",
                  "required": false,
                  "examples": [
                    [
                      "timing",
                      "power"
                    ],
                    [
                      "timing",
                      "power",
                      "electromagnetic",
                      "fault_injection"
                    ]
                  ]
                },
                {
                  "name": "protection_mechanisms",
                  "type": "array",
                  "description": "Implemented side-channel protection mechanisms",
                  "required": false,
                  "examples": [
                    [
                      "constant_time_operations",
                      "power_balancing"
                    ],
                    [
                      "randomization",
                      "shielding",
                      "fault_detection"
                    ]
                  ]
                },
                {
                  "name": "analysis_tools",
                  "type": "object",
                  "description": "Side-channel analysis tools categorized by availability",
                  "required": false,
                  "examples": [
                    {
                      "open_source": [
                        "custom_python",
                        "numpy"
                      ],
                      "commercial": [
                        "secure_ic"
                      ]
                    }
                  ],
                  "children": [
                    {
                      "name": "open_source",
                      "type": "array",
                      "description": "Open-source side-channel analysis tools (references tools.{flow}.open_source.security)",
                      "required": false,
                      "examples": [
                        [
                          "custom_python",
                          "numpy",
                          "scipy",
                          "chipwhisperer"
                        ]
                      ]
                    },
                    {
                      "name": "commercial",
                      "type": "array",
                      "description": "Commercial side-channel analysis tools (references tools.{flow}.commercial.security)",
                      "required": false,
                      "examples": [
                        [
                          "secure_ic",
                          "rambus_dpa",
                          "rohde_schwarz"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "validation",
          "type": "object",
          "description": "Security validation and testing configuration",
          "required": false,
          "children": [
            {
              "name": "recommended_tests",
              "type": "array",
              "description": "Suggested tests/assertions to validate security for this IP",
              "required": false,
              "examples": [
                [
                  "assert_illegal_address_access",
                  "assert_fsm_stable_transitions",
                  "reset_glitch_simulation"
                ],
                [
                  "assert_protocol_timing",
                  "assert_cdc_synchronization",
                  "assert_side_channel_protection"
                ]
              ]
            },
            {
              "name": "requires_secure_testbench",
              "type": "boolean",
              "description": "Whether this IP requires security-focused testbench generation",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "assertion_coverage",
              "type": "object",
              "description": "Security assertion coverage requirements",
              "required": false,
              "children": [
                {
                  "name": "required_assertions",
                  "type": "array",
                  "description": "List of required security assertions",
                  "required": false
                },
                {
                  "name": "coverage_target",
                  "type": "number",
                  "description": "Target assertion coverage percentage",
                  "required": false
                },
                {
                  "name": "critical_paths",
                  "type": "array",
                  "description": "Critical security paths that must be covered",
                  "required": false
                }
              ]
            },
            {
              "name": "fuzzing_config",
              "type": "object",
              "description": "Configuration for security-focused fuzzing tests",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "Whether fuzzing tests should be generated",
                  "required": false
                },
                {
                  "name": "input_ranges",
                  "type": "array",
                  "description": "Input signal ranges for fuzzing",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "signal",
                        "min_value",
                        "max_value"
                      ],
                      "children": [
                        {
                          "name": "signal",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "min_value",
                          "type": "integer",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "max_value",
                          "type": "integer",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "include_invalid",
                          "type": "boolean",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "test_duration",
                  "type": "integer",
                  "description": "Duration of fuzzing tests in cycles",
                  "required": false
                },
                {
                  "name": "mutation_strategy",
                  "type": "string",
                  "description": "Fuzzing mutation strategy",
                  "required": false,
                  "enum": [
                    "random",
                    "directed",
                    "coverage_guided"
                  ]
                }
              ]
            },
            {
              "name": "formal_verification",
              "type": "object",
              "description": "Formal verification requirements for security properties",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "Whether formal verification is required",
                  "required": false
                },
                {
                  "name": "security_properties",
                  "type": "array",
                  "description": "Security properties to be formally verified",
                  "required": false
                },
                {
                  "name": "tools",
                  "type": "object",
                  "description": "Formal verification tools categorized by availability",
                  "required": false,
                  "children": [
                    {
                      "name": "open_source",
                      "type": "array",
                      "description": "Open-source formal verification tools",
                      "required": false
                    },
                    {
                      "name": "commercial",
                      "type": "array",
                      "description": "Commercial formal verification tools",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "timeout",
                  "type": "integer",
                  "description": "Formal verification timeout in seconds",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "compliance",
          "type": "object",
          "description": "Security compliance standards and documentation",
          "required": false,
          "children": [
            {
              "name": "compliance_standards",
              "type": "array",
              "description": "Security compliance standards this IP adheres to",
              "required": false,
              "examples": [
                [
                  "iso_26262",
                  "iec_61508"
                ],
                [
                  "fips_140",
                  "nist_sp_800"
                ]
              ]
            },
            {
              "name": "security_documentation",
              "type": "object",
              "description": "Links to security-related documentation",
              "required": false,
              "examples": [
                {
                  "security_analysis": "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
                  "threat_model": "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md"
                }
              ],
              "children": [
                {
                  "name": "security_analysis",
                  "type": "string",
                  "description": "Link to security analysis report",
                  "required": false,
                  "examples": [
                    "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
                    "https://acme.com/ip/security_analysis.pdf"
                  ]
                },
                {
                  "name": "threat_model",
                  "type": "string",
                  "description": "Link to detailed threat model",
                  "required": false,
                  "examples": [
                    "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md",
                    "https://acme.com/ip/threat_model.pdf"
                  ]
                },
                {
                  "name": "penetration_testing",
                  "type": "string",
                  "description": "Link to penetration testing results",
                  "required": false,
                  "examples": [
                    "https://github.com/vyges/spi-controller/blob/main/docs/penetration_testing.md",
                    "https://acme.com/ip/penetration_testing.pdf"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "license",
      "type": "string",
      "description": "SPDX-compatible license identifier (e.g., Apache-2.0, MIT, CERN-OHL-S)",
      "required": false,
      "examples": [
        "Apache-2.0",
        "MIT"
      ]
    },
    {
      "name": "flows",
      "type": "object",
      "description": "Design flow verification status for different tools and processes",
      "required": false,
      "examples": [
        {
          "simulation_tools": {
            "verilator": {
              "status": "verified"
            }
          },
          "synthesis_tools": {
            "openlane": {
              "pdks": [
                "sky130B",
                "gf180mcuC",
                "ihp-sg13g2"
              ],
              "status": "tested"
            },
            "vivado": {
              "status": "verified"
            }
          }
        },
        {
          "simulation_tools": {
            "verilator": {
              "status": "partial"
            }
          },
          "synthesis_tools": {
            "openlane": {
              "pdks": [
                "sky130B"
              ],
              "status": "partial"
            }
          }
        }
      ],
      "children": [
        {
          "name": "simulation_tools",
          "type": "object",
          "description": "Simulation and verification tool status",
          "required": false,
          "children": [
            {
              "name": "verilator",
              "type": "object",
              "description": "",
              "required": [
                "status"
              ],
              "examples": [
                {
                  "status": "verified"
                },
                {
                  "status": "partial"
                }
              ],
              "children": [
                {
                  "name": "status",
                  "type": "string",
                  "description": "Verilator simulation and linting status",
                  "required": false,
                  "enum": [
                    "verified",
                    "partial",
                    "failed",
                    "untested"
                  ],
                  "examples": [
                    "verified",
                    "partial"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "synthesis_tools",
          "type": "object",
          "description": "Synthesis and implementation tool status",
          "required": false,
          "children": [
            {
              "name": "openlane",
              "type": "object",
              "description": "",
              "required": [
                "status"
              ],
              "examples": [
                {
                  "pdks": [
                    "sky130B",
                    "gf180mcuC",
                    "ihp-sg13g2"
                  ],
                  "status": "tested"
                },
                {
                  "pdks": [
                    "sky130B"
                  ],
                  "status": "partial"
                }
              ],
              "children": [
                {
                  "name": "pdks",
                  "type": "array",
                  "description": "List of PDKs tested with OpenLane (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
                  "required": false,
                  "examples": [
                    [
                      "sky130B",
                      "gf180mcuC"
                    ],
                    [
                      "sky130B"
                    ]
                  ]
                },
                {
                  "name": "status",
                  "type": "string",
                  "description": "OpenLane synthesis and place-and-route status",
                  "required": false,
                  "enum": [
                    "tested",
                    "partial",
                    "failed",
                    "untested"
                  ],
                  "examples": [
                    "tested",
                    "partial"
                  ]
                }
              ]
            },
            {
              "name": "vivado",
              "type": "object",
              "description": "",
              "required": [
                "status"
              ],
              "examples": [
                {
                  "status": "verified"
                },
                {
                  "status": "partial"
                }
              ],
              "children": [
                {
                  "name": "status",
                  "type": "string",
                  "description": "Xilinx Vivado synthesis and implementation status",
                  "required": false,
                  "enum": [
                    "verified",
                    "partial",
                    "failed",
                    "untested"
                  ],
                  "examples": [
                    "verified",
                    "partial"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "chiplet",
      "type": "object",
      "description": "Comprehensive chiplet metadata specification with CDXML/BoW/AIB/UCIe compliance, security lifecycle management, discovery composition, test validation, and advanced packaging specifications",
      "required": false,
      "examples": [
        {
          "compliance": {
            "cdxml": {
              "version": "cdxml-v0.2",
              "interface": {
                "type": "BoW",
                "lanes": 8,
                "tx_pads": 32,
                "rx_pads": 32,
                "data_rate_gbps": 8
              },
              "electrical": {
                "core_voltage": 0.8,
                "io_voltage": 1.2,
                "max_current_ma": 120,
                "leakage_ma": 4.5
              },
              "mechanical": {
                "die_width_um": 4000,
                "die_height_um": 3000,
                "bump_pitch_um": 100,
                "substrate_type": "organic"
              },
              "checklist": {
                "known_good_die": true,
                "reticle_compatible": true,
                "has_dft_hooks": true,
                "test_vector_included": true,
                "thermal_model_available": true,
                "power_model_available": true,
                "d2d_loopback_coverage": true
              },
              "validation": {
                "status": "validated",
                "date": "2024-01-15",
                "tool": "CDXML Validator v0.2"
              }
            },
            "bow_specification": {
              "spec_version": "2.0d.1",
              "signaling": {
                "signaling_class": "B",
                "tx_voltage": 0.4,
                "rx_voltage": 0.4,
                "clocking_scheme": "forwarded",
                "link_training": true,
                "protocol_layer": "raw",
                "serialization_factor": 8
              },
              "timing": {
                "setup_time_ps": 50,
                "hold_time_ps": 50,
                "max_jitter_ps": 10,
                "skew_tolerance_ps": 25
              },
              "compliance": {
                "has_loopback": true,
                "supports_prbs": true,
                "supports_inband_error_detect": true,
                "supports_eye_monitoring": true,
                "supports_jitter_tolerance": true
              }
            }
          },
          "extensions": {
            "meta": {
              "chiplet_ready": true,
              "integration_level": "rtl",
              "die_to_die_interfaces": [
                "ucie",
                "bow"
              ]
            },
            "lifecycle": {
              "origin": "vyges/partner-x",
              "trusted_fabricator": true,
              "fabrication_node": "tsmc7nm",
              "package_type": "2.5d_interposer"
            }
          },
          "interfaces": [
            {
              "role": "die_to_die_0",
              "phy": {
                "standard": "AIB",
                "version": "2.0",
                "mode": "parallel_source_sync",
                "lanes_tx": 64,
                "lanes_rx": 64,
                "data_rate_gbps_per_lane": 1,
                "io_voltage": "1.2V",
                "termination": "on_die",
                "training": [
                  "deskew",
                  "prbs"
                ],
                "loopback": true,
                "error_detection": [
                  "crc"
                ],
                "power_pJ_per_bit": 0.8,
                "reach_mm": 8,
                "bump_map_ref": "aib_ring_v1"
              },
              "link": {
                "protocol": "STREAMING",
                "width_bits": 256,
                "flow_control": "credit",
                "replay": false,
                "fec": "none",
                "max_payload_bytes": 256
              },
              "management": {
                "discovery": "CDXML",
                "endpoint_id": "0x1A2B",
                "config_bus": "I2C@0x54",
                "firmware_update": {
                  "method": "in_band",
                  "format": "CSIP-v1",
                  "secure_boot": true,
                  "rot_block": "caliptra_v0.7"
                },
                "telemetry": [
                  "temperature",
                  "lane_error_counters"
                ]
              }
            }
          ],
          "packaging": {
            "assembly": "2.5D_interposer",
            "substrate_stackup": "pkg_stack_v3",
            "thermal": {
              "theta_ja_c_per_w": 18,
              "max_tj_c": 110
            },
            "power_delivery": {
              "rails": [
                {
                  "name": "1.2V_CORE",
                  "imax_a": 0.6,
                  "dvdt_limit_mV_us": 20,
                  "seq": 1
                },
                {
                  "name": "1.8V_IO",
                  "imax_a": 0.3,
                  "seq": 2
                }
              ],
              "decap_guidance": "min 1nF/mm2 near AIB ring"
            }
          },
          "enhanced_compliance": {
            "cdxml_compliance": {
              "version": "cdxml-v0.2",
              "protocol_support": [
                "AIB",
                "BoW",
                "UCIe",
                "EMIB"
              ],
              "electrical_validation": "OCP-ODSA-2025Q1",
              "mechanical_validation": "OCP-ODSA-2025Q1"
            },
            "aib_compliance": {
              "enabled": true,
              "spec_version": "2.0",
              "features": [
                "gearboxing",
                "prbs",
                "loopback"
              ]
            },
            "ucie_compliance": {
              "enabled": false,
              "spec_version": "1.1",
              "profile": "ShortReach",
              "protocol_modes": [
                "PCIe",
                "CXL",
                "STREAMING"
              ]
            }
          }
        }
      ],
      "children": [
        {
          "name": "compliance",
          "type": "object",
          "description": "Standards compliance foundation (CDXML/BoW) - required for interoperability",
          "required": [
            "cdxml",
            "bow_specification"
          ],
          "children": [
            {
              "name": "cdxml",
              "type": "object",
              "description": "CDXML (Chiplet Design Exchange Format) compliance for OCP integration",
              "required": [
                "version",
                "interface",
                "electrical",
                "mechanical",
                "checklist"
              ],
              "children": [
                {
                  "name": "version",
                  "type": "string",
                  "description": "CDXML specification version this chiplet complies with",
                  "required": false,
                  "examples": [
                    "cdxml-v0.1",
                    "cdxml-v0.2"
                  ]
                },
                {
                  "name": "interface",
                  "type": "object",
                  "description": "Die-to-die interface characteristics per CDXML specification",
                  "required": [
                    "type",
                    "lanes",
                    "data_rate_gbps"
                  ],
                  "examples": [
                    {
                      "type": "BoW",
                      "lanes": 8,
                      "tx_pads": 32,
                      "rx_pads": 32,
                      "data_rate_gbps": 8
                    },
                    {
                      "type": "UCIe",
                      "lanes": 16,
                      "tx_pads": 64,
                      "rx_pads": 64,
                      "data_rate_gbps": 16
                    }
                  ],
                  "children": [
                    {
                      "name": "type",
                      "type": "string",
                      "description": "Interface protocol type",
                      "required": false,
                      "enum": [
                        "BoW",
                        "UCIe",
                        "AIB",
                        "EMIB",
                        "custom"
                      ]
                    },
                    {
                      "name": "lanes",
                      "type": "integer",
                      "description": "Number of interface lanes",
                      "required": false
                    },
                    {
                      "name": "tx_pads",
                      "type": "integer",
                      "description": "Number of transmit pads",
                      "required": false
                    },
                    {
                      "name": "rx_pads",
                      "type": "integer",
                      "description": "Number of receive pads",
                      "required": false
                    },
                    {
                      "name": "data_rate_gbps",
                      "type": "number",
                      "description": "Data rate per lane in Gbps",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "electrical",
                  "type": "object",
                  "description": "Combined electrical characteristics",
                  "required": false,
                  "examples": [
                    {
                      "core_voltage": 0.8,
                      "io_voltage": 1.2,
                      "max_current_ma": 120,
                      "leakage_ma": 4.5
                    }
                  ]
                },
                {
                  "name": "mechanical",
                  "type": "object",
                  "description": "Combined mechanical characteristics",
                  "required": false,
                  "examples": [
                    {
                      "die_width_um": 4000,
                      "die_height_um": 3000,
                      "bump_pitch_um": 100,
                      "substrate_type": "organic"
                    }
                  ]
                },
                {
                  "name": "checklist",
                  "type": "object",
                  "description": "Standard compliance checklist items",
                  "required": false,
                  "examples": [
                    {
                      "known_good_die": true,
                      "reticle_compatible": true,
                      "has_dft_hooks": true,
                      "test_vector_included": true,
                      "thermal_model_available": true,
                      "power_model_available": true,
                      "d2d_loopback_coverage": true
                    }
                  ],
                  "children": [
                    {
                      "name": "known_good_die",
                      "type": "boolean",
                      "description": "Whether die has been tested and verified as known-good",
                      "required": false
                    },
                    {
                      "name": "reticle_compatible",
                      "type": "boolean",
                      "description": "Whether die is compatible with standard reticle formats",
                      "required": false
                    },
                    {
                      "name": "has_dft_hooks",
                      "type": "boolean",
                      "description": "Whether die includes design-for-test hooks",
                      "required": false
                    },
                    {
                      "name": "test_vector_included",
                      "type": "boolean",
                      "description": "Whether test vectors are included with the die",
                      "required": false
                    },
                    {
                      "name": "thermal_model_available",
                      "type": "boolean",
                      "description": "Whether thermal model is available for analysis",
                      "required": false
                    },
                    {
                      "name": "power_model_available",
                      "type": "boolean",
                      "description": "Whether power model is available for analysis",
                      "required": false
                    },
                    {
                      "name": "d2d_loopback_coverage",
                      "type": "boolean",
                      "description": "Whether die-to-die loopback testing is covered",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "validation",
                  "type": "object",
                  "description": "Validation status and tool information",
                  "required": false,
                  "examples": [
                    {
                      "status": "validated",
                      "date": "2024-01-15",
                      "tool": "CDXML Validator v0.2"
                    }
                  ],
                  "children": [
                    {
                      "name": "status",
                      "type": "string",
                      "description": "Validation status",
                      "required": false,
                      "enum": [
                        "not_validated",
                        "in_progress",
                        "validated",
                        "failed"
                      ]
                    },
                    {
                      "name": "date",
                      "type": "string",
                      "description": "Date when validation was completed",
                      "required": false
                    },
                    {
                      "name": "tool",
                      "type": "string",
                      "description": "Tool used for validation",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "bow_specification",
              "type": "object",
              "description": "BoW (Bunch of Wires) specification details",
              "required": [
                "spec_version",
                "signaling",
                "timing"
              ],
              "children": [
                {
                  "name": "spec_version",
                  "type": "string",
                  "description": "BoW specification version",
                  "required": false
                },
                {
                  "name": "signaling",
                  "type": "object",
                  "description": "BoW signaling characteristics",
                  "required": false,
                  "examples": [
                    {
                      "signaling_class": "B",
                      "tx_voltage": 0.4,
                      "rx_voltage": 0.4,
                      "clocking_scheme": "forwarded",
                      "link_training": true,
                      "protocol_layer": "raw",
                      "serialization_factor": 8
                    }
                  ],
                  "children": [
                    {
                      "name": "signaling_class",
                      "type": "string",
                      "description": "BoW signaling class",
                      "required": false,
                      "enum": [
                        "A",
                        "B",
                        "C",
                        "D"
                      ]
                    },
                    {
                      "name": "tx_voltage",
                      "type": "number",
                      "description": "Transmit voltage in volts",
                      "required": false
                    },
                    {
                      "name": "rx_voltage",
                      "type": "number",
                      "description": "Receive voltage in volts",
                      "required": false
                    },
                    {
                      "name": "clocking_scheme",
                      "type": "string",
                      "description": "Clock distribution scheme",
                      "required": false,
                      "enum": [
                        "forwarded",
                        "embedded",
                        "recovered"
                      ]
                    },
                    {
                      "name": "link_training",
                      "type": "boolean",
                      "description": "Whether link training is supported",
                      "required": false
                    },
                    {
                      "name": "protocol_layer",
                      "type": "string",
                      "description": "Protocol layer type",
                      "required": false,
                      "enum": [
                        "raw",
                        "packetized",
                        "streaming"
                      ]
                    },
                    {
                      "name": "serialization_factor",
                      "type": "integer",
                      "description": "Serialization factor",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "timing",
                  "type": "object",
                  "description": "BoW timing constraints",
                  "required": false,
                  "examples": [
                    {
                      "setup_time_ps": 50,
                      "hold_time_ps": 50,
                      "max_jitter_ps": 10,
                      "skew_tolerance_ps": 25
                    }
                  ],
                  "children": [
                    {
                      "name": "setup_time_ps",
                      "type": "number",
                      "description": "Setup time in picoseconds",
                      "required": false
                    },
                    {
                      "name": "hold_time_ps",
                      "type": "number",
                      "description": "Hold time in picoseconds",
                      "required": false
                    },
                    {
                      "name": "max_jitter_ps",
                      "type": "number",
                      "description": "Maximum jitter in picoseconds",
                      "required": false
                    },
                    {
                      "name": "skew_tolerance_ps",
                      "type": "number",
                      "description": "Skew tolerance in picoseconds",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "compliance",
                  "type": "object",
                  "description": "BoW compliance features",
                  "required": false,
                  "examples": [
                    {
                      "has_loopback": true,
                      "supports_prbs": true,
                      "supports_inband_error_detect": true,
                      "supports_eye_monitoring": true,
                      "supports_jitter_tolerance": true
                    }
                  ],
                  "children": [
                    {
                      "name": "has_loopback",
                      "type": "boolean",
                      "description": "Whether loopback testing is supported",
                      "required": false
                    },
                    {
                      "name": "supports_prbs",
                      "type": "boolean",
                      "description": "Whether PRBS testing is supported",
                      "required": false
                    },
                    {
                      "name": "supports_inband_error_detect",
                      "type": "boolean",
                      "description": "Whether in-band error detection is supported",
                      "required": false
                    },
                    {
                      "name": "supports_eye_monitoring",
                      "type": "boolean",
                      "description": "Whether eye monitoring is supported",
                      "required": false
                    },
                    {
                      "name": "supports_jitter_tolerance",
                      "type": "boolean",
                      "description": "Whether jitter tolerance testing is supported",
                      "required": false
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "extensions",
          "type": "object",
          "description": "Vendor-specific extensions and customizations beyond standards",
          "required": false,
          "children": [
            {
              "name": "meta",
              "type": "object",
              "description": "Basic chiplet configuration and integration metadata",
              "required": false,
              "examples": [
                {
                  "chiplet_ready": true,
                  "integration_level": "rtl",
                  "die_to_die_interfaces": [
                    "ucie",
                    "bow"
                  ]
                }
              ],
              "children": [
                {
                  "name": "chiplet_ready",
                  "type": "boolean",
                  "description": "Whether this IP is designed for chiplet integration",
                  "required": false
                },
                {
                  "name": "integration_level",
                  "type": "string",
                  "description": "Integration abstraction level for chiplet design",
                  "required": false,
                  "enum": [
                    "rtl",
                    "netlist",
                    "hard_ip"
                  ]
                },
                {
                  "name": "die_to_die_interfaces",
                  "type": "array",
                  "description": "Supported die-to-die interface protocols",
                  "required": false
                }
              ]
            },
            {
              "name": "testing",
              "type": "object",
              "description": "Custom testing and validation requirements beyond standards",
              "required": false,
              "children": [
                {
                  "name": "multi_die_testing",
                  "type": "object",
                  "description": "Multi-die testing and validation requirements",
                  "required": false,
                  "examples": [
                    {
                      "test_access": "boundary_scan",
                      "test_coverage": {
                        "interconnect": 95,
                        "functionality": 90
                      },
                      "test_vectors": [
                        "interconnect_test.v",
                        "functional_test.v"
                      ]
                    }
                  ],
                  "children": [
                    {
                      "name": "test_access",
                      "type": "string",
                      "description": "Test access method",
                      "required": false,
                      "enum": [
                        "boundary_scan",
                        "internal_access",
                        "functional"
                      ]
                    },
                    {
                      "name": "test_coverage",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "interconnect",
                          "type": "number",
                          "description": "Interconnect test coverage percentage",
                          "required": false
                        },
                        {
                          "name": "functionality",
                          "type": "number",
                          "description": "Functional test coverage percentage",
                          "required": false
                        }
                      ]
                    },
                    {
                      "name": "test_vectors",
                      "type": "array",
                      "description": "List of test vector files or formats",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "signal_conformance",
                  "type": "object",
                  "description": "Signal and protocol conformance validation",
                  "required": false,
                  "examples": [
                    {
                      "protocol_reference": "UCIe 1.1",
                      "verified_against": true,
                      "test_suite": "UCIe Compliance Test Suite v1.1",
                      "verification_date": "2024-01-15",
                      "verification_tool": "UCIe Compliance Checker",
                      "compliance_level": "full"
                    }
                  ],
                  "children": [
                    {
                      "name": "protocol_reference",
                      "type": "string",
                      "description": "Protocol specification version and reference",
                      "required": false
                    },
                    {
                      "name": "verified_against",
                      "type": "boolean",
                      "description": "Whether interface was verified against protocol test suite",
                      "required": false
                    },
                    {
                      "name": "test_suite",
                      "type": "string",
                      "description": "Name and version of test suite used for verification",
                      "required": false
                    },
                    {
                      "name": "verification_date",
                      "type": "string",
                      "description": "Date when protocol verification was completed",
                      "required": false
                    },
                    {
                      "name": "verification_tool",
                      "type": "string",
                      "description": "Tool used for protocol verification",
                      "required": false
                    },
                    {
                      "name": "compliance_level",
                      "type": "string",
                      "description": "Level of protocol compliance achieved",
                      "required": false,
                      "enum": [
                        "basic",
                        "full",
                        "extended"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "lifecycle",
              "type": "object",
              "description": "Supply chain and manufacturing metadata beyond standards",
              "required": false,
              "examples": [
                {
                  "origin": "vyges/partner-x",
                  "trusted_fabricator": true,
                  "version_control": "git",
                  "release_status": "qualified",
                  "fabrication_node": "tsmc7nm",
                  "package_type": "2.5d_interposer",
                  "supply_chain_tracking": true,
                  "certification": [
                    "ISO 9001",
                    "IATF 16949"
                  ]
                }
              ],
              "children": [
                {
                  "name": "origin",
                  "type": "string",
                  "description": "Origin of the chiplet (e.g., vyges/partner-x, internal)",
                  "required": false
                },
                {
                  "name": "trusted_fabricator",
                  "type": "boolean",
                  "description": "Whether this chiplet comes from a trusted fabricator",
                  "required": false
                },
                {
                  "name": "version_control",
                  "type": "string",
                  "description": "Version control system used",
                  "required": false,
                  "enum": [
                    "git",
                    "svn",
                    "perforce",
                    "none"
                  ]
                },
                {
                  "name": "release_status",
                  "type": "string",
                  "description": "Release status in the supply chain",
                  "required": false,
                  "enum": [
                    "development",
                    "alpha",
                    "beta",
                    "qualified",
                    "production",
                    "deprecated"
                  ]
                },
                {
                  "name": "fabrication_node",
                  "type": "string",
                  "description": "Fabrication process node",
                  "required": false
                },
                {
                  "name": "package_type",
                  "type": "string",
                  "description": "Package type for chiplet integration",
                  "required": false,
                  "enum": [
                    "2.5d_interposer",
                    "3d_stacked",
                    "organic_substrate",
                    "fan_out"
                  ]
                },
                {
                  "name": "supply_chain_tracking",
                  "type": "boolean",
                  "description": "Whether supply chain is tracked and verified",
                  "required": false
                },
                {
                  "name": "certification",
                  "type": "array",
                  "description": "List of certifications (e.g., ISO 9001, automotive)",
                  "required": false
                }
              ]
            },
            {
              "name": "custom_electrical",
              "type": "object",
              "description": "Vendor-specific electrical characteristics beyond standards",
              "required": false,
              "children": [
                {
                  "name": "power_domains",
                  "type": "array",
                  "description": "Power domain configuration for SoC/Chiplet partitioning",
                  "required": false,
                  "examples": [
                    {
                      "name": "core_pd",
                      "voltage": 0.8,
                      "type": "logic",
                      "isolation_required": true,
                      "max_current_ma": 100,
                      "description": "Core logic domain"
                    }
                  ],
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "Power domain configuration",
                      "required": [
                        "name",
                        "voltage"
                      ],
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "voltage",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "type",
                          "type": "string",
                          "description": "",
                          "required": false,
                          "enum": [
                            "logic",
                            "memory",
                            "analog",
                            "io",
                            "mixed"
                          ]
                        },
                        {
                          "name": "isolation_required",
                          "type": "boolean",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "retention_required",
                          "type": "boolean",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "max_current_ma",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "description",
                          "type": "string",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "custom_physical",
              "type": "object",
              "description": "Vendor-specific physical constraints beyond standards",
              "required": false,
              "children": [
                {
                  "name": "packaging_considerations",
                  "type": "string",
                  "description": "Notes about physical packaging requirements",
                  "required": false
                },
                {
                  "name": "interposer_constraints",
                  "type": "object",
                  "description": "Interposer design constraints",
                  "required": false,
                  "children": [
                    {
                      "name": "technology",
                      "type": "string",
                      "description": "Interposer technology type",
                      "required": false,
                      "enum": [
                        "silicon",
                        "organic",
                        "glass"
                      ]
                    },
                    {
                      "name": "routing_layers",
                      "type": "integer",
                      "description": "Number of routing layers required",
                      "required": false
                    },
                    {
                      "name": "minimum_pitch",
                      "type": "number",
                      "description": "Minimum routing pitch in micrometers",
                      "required": false
                    },
                    {
                      "name": "die_spacing",
                      "type": "number",
                      "description": "Minimum spacing between dies in millimeters",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "bump_constraints",
                  "type": "object",
                  "description": "Bump map and connectivity constraints",
                  "required": false,
                  "children": [
                    {
                      "name": "pitch",
                      "type": "number",
                      "description": "Bump pitch in micrometers",
                      "required": false
                    },
                    {
                      "name": "size",
                      "type": "number",
                      "description": "Bump size in micrometers",
                      "required": false
                    },
                    {
                      "name": "array",
                      "type": "string",
                      "description": "Bump array configuration",
                      "required": false,
                      "enum": [
                        "full",
                        "peripheral",
                        "area"
                      ]
                    },
                    {
                      "name": "power_bumps",
                      "type": "integer",
                      "description": "Number of power/ground bumps required",
                      "required": false
                    },
                    {
                      "name": "signal_bumps",
                      "type": "integer",
                      "description": "Number of signal bumps required",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "thermal_constraints",
                  "type": "object",
                  "description": "Thermal analysis constraints",
                  "required": false,
                  "children": [
                    {
                      "name": "max_power_per_die",
                      "type": "number",
                      "description": "Maximum power per die in watts",
                      "required": false
                    },
                    {
                      "name": "junction_temperature",
                      "type": "number",
                      "description": "Maximum junction temperature in Celsius",
                      "required": false
                    },
                    {
                      "name": "thermal_resistance",
                      "type": "number",
                      "description": "Thermal resistance in degrees C per watt",
                      "required": false
                    },
                    {
                      "name": "cooling_requirements",
                      "type": "string",
                      "description": "Cooling requirements description",
                      "required": false
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "interfaces",
          "type": "array",
          "description": "Array of interface specifications for die-to-die communication",
          "required": false,
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "Complete interface specification for die-to-die communication",
              "required": false,
              "children": [
                {
                  "name": "role",
                  "type": "string",
                  "description": "Interface role (e.g., die_to_die_0, memory_interface)",
                  "required": false
                },
                {
                  "name": "phy",
                  "type": "object",
                  "description": "Physical layer interface specifications",
                  "required": false,
                  "children": [
                    {
                      "name": "standard",
                      "type": "string",
                      "description": "Interface standard",
                      "required": false,
                      "enum": [
                        "AIB",
                        "BoW",
                        "UCIe"
                      ]
                    },
                    {
                      "name": "version",
                      "type": "string",
                      "description": "Standard version number",
                      "required": false
                    },
                    {
                      "name": "mode",
                      "type": "string",
                      "description": "Signaling mode (e.g., parallel_source_sync)",
                      "required": false
                    },
                    {
                      "name": "lanes_tx",
                      "type": "integer",
                      "description": "Number of transmit lanes",
                      "required": false
                    },
                    {
                      "name": "lanes_rx",
                      "type": "integer",
                      "description": "Number of receive lanes",
                      "required": false
                    },
                    {
                      "name": "data_rate_gbps_per_lane",
                      "type": "number",
                      "description": "Data rate per lane in Gbps",
                      "required": false
                    },
                    {
                      "name": "io_voltage",
                      "type": "string",
                      "description": "I/O voltage level",
                      "required": false
                    },
                    {
                      "name": "termination",
                      "type": "string",
                      "description": "Termination scheme",
                      "required": false,
                      "enum": [
                        "on_die",
                        "external"
                      ]
                    },
                    {
                      "name": "training",
                      "type": "array",
                      "description": "Training sequence requirements",
                      "required": false
                    },
                    {
                      "name": "loopback",
                      "type": "boolean",
                      "description": "Loopback capability availability",
                      "required": false
                    },
                    {
                      "name": "error_detection",
                      "type": "array",
                      "description": "Error detection mechanisms",
                      "required": false
                    },
                    {
                      "name": "power_pJ_per_bit",
                      "type": "number",
                      "description": "Power per bit in picojoules",
                      "required": false
                    },
                    {
                      "name": "reach_mm",
                      "type": "number",
                      "description": "Maximum reach in millimeters",
                      "required": false
                    },
                    {
                      "name": "bump_map_ref",
                      "type": "string",
                      "description": "Reference to bump map artifact",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "link",
                  "type": "object",
                  "description": "Link layer protocol specifications",
                  "required": false,
                  "children": [
                    {
                      "name": "protocol",
                      "type": "string",
                      "description": "Link protocol",
                      "required": false,
                      "enum": [
                        "PCIe",
                        "CXL",
                        "STREAMING",
                        "CUSTOM"
                      ]
                    },
                    {
                      "name": "width_bits",
                      "type": "integer",
                      "description": "Total link width in bits",
                      "required": false
                    },
                    {
                      "name": "flow_control",
                      "type": "string",
                      "description": "Flow control mechanism",
                      "required": false
                    },
                    {
                      "name": "replay",
                      "type": "boolean",
                      "description": "Replay capability",
                      "required": false
                    },
                    {
                      "name": "fec",
                      "type": "string",
                      "description": "Forward error correction",
                      "required": false
                    },
                    {
                      "name": "max_payload_bytes",
                      "type": "integer",
                      "description": "Maximum payload size in bytes",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "management",
                  "type": "object",
                  "description": "System management and discovery specifications",
                  "required": false,
                  "children": [
                    {
                      "name": "discovery",
                      "type": "string",
                      "description": "Discovery protocol",
                      "required": false,
                      "enum": [
                        "CDXML"
                      ]
                    },
                    {
                      "name": "endpoint_id",
                      "type": "string",
                      "description": "Unique endpoint identifier",
                      "required": false
                    },
                    {
                      "name": "config_bus",
                      "type": "string",
                      "description": "Configuration bus specification",
                      "required": false
                    },
                    {
                      "name": "firmware_update",
                      "type": "object",
                      "description": "Firmware update mechanism",
                      "required": false,
                      "children": [
                        {
                          "name": "method",
                          "type": "string",
                          "description": "Update method",
                          "required": false,
                          "enum": [
                            "in_band",
                            "out_of_band"
                          ]
                        },
                        {
                          "name": "format",
                          "type": "string",
                          "description": "Firmware format",
                          "required": false
                        },
                        {
                          "name": "secure_boot",
                          "type": "boolean",
                          "description": "Secure boot capability",
                          "required": false
                        },
                        {
                          "name": "rot_block",
                          "type": "string",
                          "description": "Root of trust block",
                          "required": false
                        }
                      ]
                    },
                    {
                      "name": "telemetry",
                      "type": "array",
                      "description": "Available telemetry data",
                      "required": false
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "packaging",
          "type": "object",
          "description": "Packaging and assembly specifications",
          "required": false,
          "children": [
            {
              "name": "assembly",
              "type": "string",
              "description": "Assembly type",
              "required": false,
              "enum": [
                "organic_substrate",
                "2.5D_interposer",
                "fanout"
              ]
            },
            {
              "name": "substrate_stackup",
              "type": "string",
              "description": "Substrate stackup reference",
              "required": false
            },
            {
              "name": "thermal",
              "type": "object",
              "description": "Thermal characteristics",
              "required": false,
              "children": [
                {
                  "name": "theta_ja_c_per_w",
                  "type": "number",
                  "description": "Thermal resistance from junction to ambient",
                  "required": false
                },
                {
                  "name": "max_tj_c",
                  "type": "number",
                  "description": "Maximum junction temperature in Celsius",
                  "required": false
                }
              ]
            },
            {
              "name": "power_delivery",
              "type": "object",
              "description": "Power delivery network specifications",
              "required": false,
              "children": [
                {
                  "name": "rails",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "imax_a",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "dvdt_limit_mV_us",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "seq",
                          "type": "integer",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "decap_guidance",
                  "type": "string",
                  "description": "Decoupling capacitor guidance",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "enhanced_packaging",
          "type": "object",
          "description": "Enhanced packaging specifications for mechanical and assembly teams",
          "required": false,
          "children": [
            {
              "name": "mechanical_constraints",
              "type": "object",
              "description": "Mechanical and physical constraints",
              "required": false,
              "children": [
                {
                  "name": "die_thickness_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "warpage_limit_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "co_planarity",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "die_size_tolerance",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bump_height_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bump_diameter_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bump_pitch_tolerance",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "assembly_requirements",
              "type": "object",
              "description": "Assembly and manufacturing requirements",
              "required": false,
              "children": [
                {
                  "name": "pick_and_place_accuracy",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "reflow_profile",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "underfill_material",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bonding_temperature",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bonding_pressure",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "interposer_specifications",
              "type": "object",
              "description": "Interposer and substrate specifications",
              "required": false,
              "children": [
                {
                  "name": "interposer_material",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "interposer_thickness_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "routing_layers",
                  "type": "integer",
                  "description": "",
                  "required": false
                },
                {
                  "name": "minimum_feature_size_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "via_diameter_um",
                  "type": "number",
                  "description": "",
                  "required": false
                },
                {
                  "name": "metal_stack",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "thermal_management",
              "type": "object",
              "description": "Thermal management specifications",
              "required": false,
              "children": [
                {
                  "name": "thermal_interface_material",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "heat_spreader",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "thermal_vias",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "junction_to_case_resistance",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "case_to_ambient_resistance",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "security_lifecycle",
          "type": "object",
          "description": "Security and lifecycle management specifications",
          "required": false,
          "children": [
            {
              "name": "secure_boot",
              "type": "object",
              "description": "Secure boot capability and configuration",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "method",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "key_storage",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "verification",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "attestation",
              "type": "object",
              "description": "Attestation and identity management",
              "required": false,
              "children": [
                {
                  "name": "attestation_block",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "attestation_method",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "measurement_capability",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "quote_generation",
                  "type": "boolean",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "firmware_authentication",
              "type": "object",
              "description": "Firmware authentication mechanisms",
              "required": false,
              "children": [
                {
                  "name": "method",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "key_management",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "version_control",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "integrity_checking",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "revocation_policy",
              "type": "object",
              "description": "Revocation and lifecycle management",
              "required": false,
              "children": [
                {
                  "name": "method",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "revocation_list",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "update_mechanism",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "rollback_protection",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "discovery_composition",
          "type": "object",
          "description": "Discovery, composition, and system integration specifications",
          "required": false,
          "children": [
            {
              "name": "chiplet_uuid",
              "type": "string",
              "description": "Globally unique chiplet identifier",
              "required": false
            },
            {
              "name": "dependencies",
              "type": "object",
              "description": "External dependencies and requirements",
              "required": false,
              "children": [
                {
                  "name": "power_rails",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "voltage",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "current_max",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "is_required",
                          "type": "boolean",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "clock_sources",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "frequency_mhz",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "jitter_ps_rms",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "is_required",
                          "type": "boolean",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "thermal_requirements",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "max_junction_temp_c",
                      "type": "number",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "thermal_resistance_c_per_w",
                      "type": "number",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "capabilities",
              "type": "object",
              "description": "Chiplet capabilities and provided services",
              "required": false,
              "children": [
                {
                  "name": "interface_capabilities",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "type",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "lanes",
                          "type": "integer",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "data_rate_gbps_per_lane",
                          "type": "number",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "voltage",
                          "type": "string",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "compute_capabilities",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "core_type",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "performance_dmips_mhz",
                      "type": "number",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "memory_interface",
                      "type": "string",
                      "description": "",
                      "required": false
                    }
                  ]
                },
                {
                  "name": "security_capabilities",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "secure_boot",
                      "type": "boolean",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "attestation",
                      "type": "boolean",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "crypto_engines",
                      "type": "array",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "test_validation",
          "type": "object",
          "description": "Test, validation, and bring-up specifications",
          "required": false,
          "children": [
            {
              "name": "loopback_modes",
              "type": "object",
              "description": "Available loopback testing modes",
              "required": false,
              "children": [
                {
                  "name": "internal_loopback",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "external_loopback",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "pattern_generation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "error_injection",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "prbs_support",
              "type": "object",
              "description": "PRBS pattern generation and checking",
              "required": false,
              "children": [
                {
                  "name": "patterns",
                  "type": "array",
                  "description": "",
                  "required": false
                },
                {
                  "name": "generation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "checking",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "error_counting",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "bist_hooks",
              "type": "object",
              "description": "Built-in self-test capabilities",
              "required": false,
              "children": [
                {
                  "name": "memory_bist",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "logic_bist",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "analog_bist",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "boundary_scan",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "error_counters",
              "type": "object",
              "description": "Error monitoring and counting capabilities",
              "required": false,
              "children": [
                {
                  "name": "bit_errors",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "symbol_errors",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "crc_errors",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "parity_errors",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "timeout_errors",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "enhanced_compliance",
          "type": "object",
          "description": "Enhanced compliance tracking with granular validation",
          "required": false,
          "children": [
            {
              "name": "cdxml_compliance",
              "type": "object",
              "description": "CDXML compliance tracking and validation",
              "required": false,
              "children": [
                {
                  "name": "version",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "protocol_support",
                  "type": "array",
                  "description": "",
                  "required": false
                },
                {
                  "name": "electrical_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "mechanical_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "validation_tracking",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": false,
                      "children": [
                        {
                          "name": "tool",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "version",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "result",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "date",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "validation_details",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "constraints_verified",
                          "type": "array",
                          "description": "",
                          "required": false
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "aib_compliance",
              "type": "object",
              "description": "AIB compliance tracking and validation",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "spec_version",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "features",
                  "type": "array",
                  "description": "",
                  "required": false
                },
                {
                  "name": "validation_tracking",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "Validation status and tool information",
                      "required": false,
                      "children": [
                        {
                          "name": "status",
                          "type": "string",
                          "description": "Validation status",
                          "required": false,
                          "enum": [
                            "not_validated",
                            "in_progress",
                            "validated",
                            "failed"
                          ]
                        },
                        {
                          "name": "date",
                          "type": "string",
                          "description": "Date when validation was completed",
                          "required": false
                        },
                        {
                          "name": "tool",
                          "type": "string",
                          "description": "Tool used for validation",
                          "required": false
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "ucie_compliance",
              "type": "object",
              "description": "UCIe compliance tracking and validation",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "",
                  "required": false
                },
                {
                  "name": "spec_version",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "profile",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "protocol_modes",
                  "type": "array",
                  "description": "",
                  "required": false
                },
                {
                  "name": "validation_tracking",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "Validation status and tool information",
                      "required": false,
                      "children": [
                        {
                          "name": "status",
                          "type": "string",
                          "description": "Validation status",
                          "required": false,
                          "enum": [
                            "not_validated",
                            "in_progress",
                            "validated",
                            "failed"
                          ]
                        },
                        {
                          "name": "date",
                          "type": "string",
                          "description": "Date when validation was completed",
                          "required": false
                        },
                        {
                          "name": "tool",
                          "type": "string",
                          "description": "Tool used for validation",
                          "required": false
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "overall_compliance_status",
              "type": "object",
              "description": "Overall compliance status and summary",
              "required": false,
              "children": [
                {
                  "name": "cdxml_status",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "bow_status",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "aib_status",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "ucie_status",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "last_validation_date",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "compliance_score",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "next_validation_due",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "validation_team",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "certification_status",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            }
          ]
        },
        {
          "name": "compatibility_rules",
          "type": "object",
          "description": "Machine-readable rules for automated compatibility checking",
          "required": false,
          "children": [
            {
              "name": "interface_compatibility_rules",
              "type": "array",
              "description": "",
              "required": false,
              "children": [
                {
                  "name": "items",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "rule_id",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "condition",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "severity",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "enum": [
                        "critical",
                        "warning",
                        "info"
                      ]
                    },
                    {
                      "name": "error_message",
                      "type": "string",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "mechanical_compatibility_rules",
              "type": "array",
              "description": "",
              "required": false,
              "children": [
                {
                  "name": "items",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "rule_id",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "condition",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "severity",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "enum": [
                        "critical",
                        "warning",
                        "info"
                      ]
                    },
                    {
                      "name": "error_message",
                      "type": "string",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "protocol_compatibility_rules",
              "type": "array",
              "description": "",
              "required": false,
              "children": [
                {
                  "name": "items",
                  "type": "object",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "rule_id",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "condition",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "severity",
                      "type": "string",
                      "description": "",
                      "required": false,
                      "enum": [
                        "critical",
                        "warning",
                        "info"
                      ]
                    },
                    {
                      "name": "error_message",
                      "type": "string",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "composition_engine",
          "type": "object",
          "description": "Automated chiplet composition and system integration engine",
          "required": false,
          "children": [
            {
              "name": "auto_matching_capabilities",
              "type": "object",
              "description": "Automated matching between chiplets",
              "required": false,
              "children": [
                {
                  "name": "interface_matching",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "power_matching",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "thermal_matching",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "performance_matching",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "system_composition_rules",
              "type": "object",
              "description": "Rules for composing complete chiplet systems",
              "required": false,
              "children": [
                {
                  "name": "minimum_system_requirements",
                  "type": "array",
                  "description": "",
                  "required": false
                },
                {
                  "name": "optimal_composition_guidelines",
                  "type": "array",
                  "description": "",
                  "required": false
                }
              ]
            },
            {
              "name": "integration_validation",
              "type": "object",
              "description": "Automated validation of chiplet system integration",
              "required": false,
              "children": [
                {
                  "name": "electrical_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "mechanical_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "thermal_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "performance_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                },
                {
                  "name": "security_validation",
                  "type": "string",
                  "description": "",
                  "required": false
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "documentation",
      "type": "object",
      "description": "Documentation links and resources",
      "required": false,
      "examples": [
        {
          "readme": "https://github.com/vyges/spi-controller/blob/main/README.md",
          "datasheet": "https://docs.vyges.com/spi-controller/datasheet.pdf",
          "user_guide": "https://docs.vyges.com/spi-controller/user-guide",
          "api_docs": "https://docs.vyges.com/spi-controller/api"
        },
        {
          "readme": "https://github.com/acme/pcie-phy-encrypted/blob/main/README.md",
          "datasheet": "https://acme.com/pcie-phy/datasheet"
        }
      ],
      "children": [
        {
          "name": "readme",
          "type": "string",
          "description": "URL to the main README file",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/blob/main/README.md",
            "https://docs.vyges.com/spi-controller"
          ]
        },
        {
          "name": "datasheet",
          "type": "string",
          "description": "URL to the datasheet or technical specification",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/datasheet.pdf",
            "https://acme.com/pcie-phy/datasheet"
          ]
        },
        {
          "name": "user_guide",
          "type": "string",
          "description": "URL to the user guide or manual",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/user-guide",
            "https://acme.com/pcie-phy/manual"
          ]
        },
        {
          "name": "api_docs",
          "type": "string",
          "description": "URL to API documentation",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/api",
            "https://acme.com/pcie-phy/api"
          ]
        }
      ]
    },
    {
      "name": "name",
      "type": "string",
      "description": "Unique package name, typically in the format 'namespace/ip-name'",
      "required": false,
      "examples": [
        "vyges/spi-controller",
        "acme/pcie-phy"
      ]
    },
    {
      "name": "parameters",
      "type": "array",
      "description": "Parameterizable configuration fields",
      "required": false,
      "examples": [
        [
          {
            "parameter_info": {
              "name": "CLOCK_DIV",
              "type": "int",
              "description": "Clock divider for SPI clock generation"
            },
            "constraints": {
              "default": 8,
              "range": {
                "min": 2,
                "max": 256
              },
              "is_required": false
            },
            "metadata": {
              "units": "cycles"
            }
          },
          {
            "parameter_info": {
              "name": "DATA_WIDTH",
              "type": "int",
              "description": "Data width for SPI transactions"
            },
            "constraints": {
              "default": 8,
              "range": {
                "min": 1,
                "max": 32
              },
              "is_required": true
            },
            "metadata": {
              "units": "bits"
            }
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name",
            "type"
          ],
          "examples": [
            {
              "parameter_info": {
                "name": "CLOCK_DIV",
                "type": "int",
                "description": "Clock divider for SPI clock generation"
              },
              "constraints": {
                "default": 8,
                "range": {
                  "min": 2,
                  "max": 256
                },
                "is_required": false
              },
              "metadata": {
                "units": "cycles"
              }
            },
            {
              "parameter_info": {
                "name": "DATA_WIDTH",
                "type": "int",
                "description": "Data width for SPI transactions"
              },
              "constraints": {
                "default": 8,
                "range": {
                  "min": 1,
                  "max": 32
                },
                "is_required": true
              },
              "metadata": {
                "units": "bits"
              }
            }
          ],
          "children": [
            {
              "name": "parameter_info",
              "type": "object",
              "description": "Basic parameter information and type",
              "required": false,
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Parameter name as used in the RTL",
                  "required": false,
                  "examples": [
                    "CLOCK_DIV",
                    "DATA_WIDTH"
                  ]
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Parameter data type",
                  "required": false,
                  "enum": [
                    "int",
                    "bool",
                    "string",
                    "real"
                  ],
                  "examples": [
                    "int",
                    "bool"
                  ]
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "Human-readable description of the parameter's purpose",
                  "required": false,
                  "examples": [
                    "Clock divider for SPI clock generation",
                    "Enable advanced features"
                  ]
                }
              ]
            },
            {
              "name": "constraints",
              "type": "object",
              "description": "Parameter constraints and validation rules",
              "required": false,
              "children": [
                {
                  "name": "default",
                  "type": "object",
                  "description": "Default value for the parameter",
                  "required": false,
                  "examples": [
                    8,
                    true
                  ]
                },
                {
                  "name": "range",
                  "type": "object",
                  "description": "Valid range for the parameter",
                  "required": false,
                  "examples": [
                    {
                      "min": 2,
                      "max": 256,
                      "step": 1
                    },
                    {
                      "min": 0,
                      "max": 100
                    }
                  ],
                  "children": [
                    {
                      "name": "min",
                      "type": "object",
                      "description": "Minimum allowed value",
                      "required": false,
                      "examples": [
                        2,
                        0
                      ]
                    },
                    {
                      "name": "max",
                      "type": "object",
                      "description": "Maximum allowed value",
                      "required": false,
                      "examples": [
                        256,
                        100
                      ]
                    },
                    {
                      "name": "step",
                      "type": "object",
                      "description": "Step size for numeric parameters",
                      "required": false,
                      "examples": [
                        1,
                        0.1
                      ]
                    }
                  ]
                },
                {
                  "name": "is_required",
                  "type": "boolean",
                  "description": "Whether this parameter is required",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                }
              ]
            },
            {
              "name": "metadata",
              "type": "object",
              "description": "Additional parameter metadata and units",
              "required": false,
              "children": [
                {
                  "name": "units",
                  "type": "string",
                  "description": "Units for the parameter (e.g., MHz, bits, cycles)",
                  "required": false,
                  "examples": [
                    "cycles",
                    "bits"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "tools",
      "type": "object",
      "description": "Comprehensive tool categorization for different design flows and security testing",
      "required": false,
      "examples": [
        {
          "meta": {
            "tool_availability": "hybrid",
            "primary_flow": "asic",
            "tool_validation": true
          },
          "design_flows": {
            "asic": {
              "open_source": {
                "synthesis": [
                  "yosys"
                ],
                "place_route": [
                  "openroad"
                ],
                "layout": [
                  "magic"
                ],
                "drc_lvs": [
                  "magic"
                ]
              },
              "commercial": {
                "synthesis": [],
                "place_route": [],
                "layout": [],
                "drc_lvs": []
              }
            },
            "fpga": {
              "open_source": {
                "synthesis": [
                  "yosys"
                ],
                "place_route": [
                  "nextpnr"
                ],
                "programming": [
                  "openfpgaloader"
                ]
              },
              "commercial": {
                "synthesis": [],
                "place_route": [],
                "programming": []
              }
            }
          },
          "verification": {
            "open_source": {
              "simulation": [
                "verilator"
              ],
              "formal": [
                "yosys-smtbmc"
              ],
              "coverage": [
                "verilator"
              ]
            },
            "commercial": {
              "simulation": [],
              "formal": [],
              "coverage": []
            }
          },
          "security": {
            "open_source": {
              "side_channel": [
                "chipwhisperer"
              ],
              "fault_injection": [
                "custom_python"
              ],
              "cryptographic": [
                "custom_python"
              ]
            },
            "commercial": {
              "side_channel": [],
              "fault_injection": [],
              "cryptographic": []
            }
          }
        },
        {
          "meta": {
            "tool_availability": "commercial_only",
            "primary_flow": "fpga",
            "tool_validation": true
          },
          "design_flows": {
            "fpga": {
              "commercial": {
                "synthesis": [
                  "vivado"
                ],
                "place_route": [
                  "vivado"
                ],
                "programming": [
                  "vivado"
                ]
              }
            }
          },
          "verification": {
            "commercial": {
              "simulation": [
                "modelsim"
              ],
              "formal": [
                "questa_formal"
              ],
              "coverage": [
                "modelsim"
              ]
            }
          },
          "security": {
            "commercial": {
              "side_channel": [
                "secure_ic"
              ],
              "fault_injection": [
                "secure_ic"
              ],
              "cryptographic": [
                "secure_ic"
              ]
            }
          }
        }
      ],
      "children": [
        {
          "name": "meta",
          "type": "object",
          "description": "Basic tool configuration and metadata",
          "required": false,
          "children": [
            {
              "name": "tool_availability",
              "type": "string",
              "description": "Primary tool availability strategy",
              "required": false,
              "enum": [
                "open_source_only",
                "commercial_only",
                "hybrid",
                "custom"
              ],
              "examples": [
                "open_source_only",
                "hybrid"
              ]
            },
            {
              "name": "primary_flow",
              "type": "string",
              "description": "Primary design flow focus",
              "required": false,
              "enum": [
                "asic",
                "fpga",
                "chiplet",
                "analog",
                "mixed_signal"
              ],
              "examples": [
                "asic",
                "fpga"
              ]
            },
            {
              "name": "tool_validation",
              "type": "boolean",
              "description": "Whether tools have been validated for this IP",
              "required": false,
              "examples": [
                true,
                false
              ]
            }
          ]
        },
        {
          "name": "design_flows",
          "type": "object",
          "description": "Design flow tools organized by technology domain",
          "required": false,
          "children": [
            {
              "name": "asic",
              "type": "object",
              "description": "ASIC design and verification tools",
              "required": false,
              "children": [
                {
                  "name": "open_source",
                  "type": "object",
                  "description": "Open-source ASIC tools",
                  "required": false,
                  "children": [
                    {
                      "name": "synthesis",
                      "type": "array",
                      "description": "Open-source synthesis tools",
                      "required": false,
                      "examples": [
                        [
                          "yosys",
                          "abc"
                        ],
                        [
                          "yosys"
                        ]
                      ]
                    },
                    {
                      "name": "place_route",
                      "type": "array",
                      "description": "Open-source place and route tools",
                      "required": false,
                      "examples": [
                        [
                          "openroad",
                          "tritonroute"
                        ],
                        [
                          "openroad"
                        ]
                      ]
                    },
                    {
                      "name": "layout",
                      "type": "array",
                      "description": "Open-source layout tools",
                      "required": false,
                      "examples": [
                        [
                          "magic",
                          "klayout"
                        ],
                        [
                          "magic"
                        ]
                      ]
                    },
                    {
                      "name": "drc_lvs",
                      "type": "array",
                      "description": "Open-source DRC/LVS tools",
                      "required": false,
                      "examples": [
                        [
                          "magic",
                          "netgen"
                        ],
                        [
                          "magic"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "name": "commercial",
                  "type": "object",
                  "description": "Commercial ASIC tools",
                  "required": false,
                  "children": [
                    {
                      "name": "synthesis",
                      "type": "array",
                      "description": "Commercial synthesis tools",
                      "required": false,
                      "examples": [
                        [
                          "design_compiler",
                          "synplify"
                        ],
                        [
                          "design_compiler"
                        ]
                      ]
                    },
                    {
                      "name": "place_route",
                      "type": "array",
                      "description": "Commercial place and route tools",
                      "required": false,
                      "examples": [
                        [
                          "ic_compiler",
                          "innovus"
                        ],
                        [
                          "ic_compiler"
                        ]
                      ]
                    },
                    {
                      "name": "layout",
                      "type": "array",
                      "description": "Commercial layout tools",
                      "required": false,
                      "examples": [
                        [
                          "virtuoso",
                          "laker"
                        ],
                        [
                          "virtuoso"
                        ]
                      ]
                    },
                    {
                      "name": "drc_lvs",
                      "type": "array",
                      "description": "Commercial DRC/LVS tools",
                      "required": false,
                      "examples": [
                        [
                          "calibre",
                          "hercules"
                        ],
                        [
                          "calibre"
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "fpga",
              "type": "object",
              "description": "FPGA design and verification tools",
              "required": false,
              "children": [
                {
                  "name": "open_source",
                  "type": "object",
                  "description": "Open-source FPGA tools",
                  "required": false,
                  "children": [
                    {
                      "name": "synthesis",
                      "type": "array",
                      "description": "Open-source FPGA synthesis tools",
                      "required": false,
                      "examples": [
                        [
                          "yosys",
                          "nextpnr"
                        ],
                        [
                          "yosys"
                        ]
                      ]
                    },
                    {
                      "name": "place_route",
                      "type": "array",
                      "description": "Open-source FPGA place and route tools",
                      "required": false,
                      "examples": [
                        [
                          "nextpnr",
                          "vpr"
                        ],
                        [
                          "nextpnr"
                        ]
                      ]
                    },
                    {
                      "name": "programming",
                      "type": "array",
                      "description": "Open-source FPGA programming tools",
                      "required": false,
                      "examples": [
                        [
                          "openfpgaloader",
                          "fujprog"
                        ],
                        [
                          "openfpgaloader"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "name": "commercial",
                  "type": "object",
                  "description": "Commercial FPGA tools",
                  "required": false,
                  "children": [
                    {
                      "name": "synthesis",
                      "type": "array",
                      "description": "Commercial FPGA synthesis tools",
                      "required": false,
                      "examples": [
                        [
                          "vivado",
                          "quartus"
                        ],
                        [
                          "vivado"
                        ]
                      ]
                    },
                    {
                      "name": "place_route",
                      "type": "array",
                      "description": "Commercial FPGA place and route tools",
                      "required": false,
                      "examples": [
                        [
                          "vivado",
                          "quartus"
                        ],
                        [
                          "vivado"
                        ]
                      ]
                    },
                    {
                      "name": "programming",
                      "type": "array",
                      "description": "Commercial FPGA programming tools",
                      "required": false,
                      "examples": [
                        [
                          "vivado",
                          "quartus"
                        ],
                        [
                          "vivado"
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "chiplet",
              "type": "object",
              "description": "Chiplet design and verification tools",
              "required": false,
              "children": [
                {
                  "name": "open_source",
                  "type": "object",
                  "description": "Open-source chiplet tools",
                  "required": false,
                  "children": [
                    {
                      "name": "design",
                      "type": "array",
                      "description": "Open-source chiplet design tools",
                      "required": false,
                      "examples": [
                        [
                          "yosys",
                          "openroad"
                        ],
                        [
                          "yosys"
                        ]
                      ]
                    },
                    {
                      "name": "integration",
                      "type": "array",
                      "description": "Open-source chiplet integration tools",
                      "required": false,
                      "examples": [
                        [
                          "openroad",
                          "magic"
                        ],
                        [
                          "openroad"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "name": "commercial",
                  "type": "object",
                  "description": "Commercial chiplet tools",
                  "required": false,
                  "children": [
                    {
                      "name": "design",
                      "type": "array",
                      "description": "Commercial chiplet design tools",
                      "required": false,
                      "examples": [
                        [
                          "innovus",
                          "virtuoso"
                        ],
                        [
                          "innovus"
                        ]
                      ]
                    },
                    {
                      "name": "integration",
                      "type": "array",
                      "description": "Commercial chiplet integration tools",
                      "required": false,
                      "examples": [
                        [
                          "innovus",
                          "virtuoso"
                        ],
                        [
                          "innovus"
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "analog",
              "type": "object",
              "description": "Analog design and verification tools",
              "required": false,
              "children": [
                {
                  "name": "open_source",
                  "type": "object",
                  "description": "Open-source analog tools",
                  "required": false,
                  "children": [
                    {
                      "name": "schematic",
                      "type": "array",
                      "description": "Open-source schematic capture tools",
                      "required": false,
                      "examples": [
                        [
                          "xschem",
                          "kicad"
                        ],
                        [
                          "xschem"
                        ]
                      ]
                    },
                    {
                      "name": "simulation",
                      "type": "array",
                      "description": "Open-source analog simulation tools",
                      "required": false,
                      "examples": [
                        [
                          "ngspice",
                          "xyce"
                        ],
                        [
                          "ngspice"
                        ]
                      ]
                    },
                    {
                      "name": "layout",
                      "type": "array",
                      "description": "Open-source analog layout tools",
                      "required": false,
                      "examples": [
                        [
                          "magic",
                          "klayout"
                        ],
                        [
                          "magic"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "name": "commercial",
                  "type": "object",
                  "description": "Commercial analog tools",
                  "required": false,
                  "children": [
                    {
                      "name": "schematic",
                      "type": "array",
                      "description": "Commercial schematic capture tools",
                      "required": false,
                      "examples": [
                        [
                          "virtuoso",
                          "composer"
                        ],
                        [
                          "virtuoso"
                        ]
                      ]
                    },
                    {
                      "name": "simulation",
                      "type": "array",
                      "description": "Commercial analog simulation tools",
                      "required": false,
                      "examples": [
                        [
                          "spectre",
                          "hspice",
                          "ams_designer"
                        ],
                        [
                          "spectre"
                        ]
                      ]
                    },
                    {
                      "name": "layout",
                      "type": "array",
                      "description": "Commercial analog layout tools",
                      "required": false,
                      "examples": [
                        [
                          "virtuoso",
                          "laker"
                        ],
                        [
                          "virtuoso"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "verification",
          "type": "object",
          "description": "Verification and testing tools across all design flows",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source verification tools",
              "required": false,
              "children": [
                {
                  "name": "simulation",
                  "type": "array",
                  "description": "Open-source simulation tools",
                  "required": false,
                  "examples": [
                    [
                      "verilator",
                      "iverilog"
                    ],
                    [
                      "verilator"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Open-source formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys-smtbmc",
                      "sby",
                      "symbiyosys"
                    ],
                    [
                      "yosys-smtbmc"
                    ]
                  ]
                },
                {
                  "name": "coverage",
                  "type": "array",
                  "description": "Open-source coverage tools",
                  "required": false,
                  "examples": [
                    [
                      "verilator",
                      "custom_python"
                    ],
                    [
                      "verilator"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial verification tools",
              "required": false,
              "children": [
                {
                  "name": "simulation",
                  "type": "array",
                  "description": "Commercial simulation tools",
                  "required": false,
                  "examples": [
                    [
                      "vcs",
                      "xcelium",
                      "questa"
                    ],
                    [
                      "vcs"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Commercial formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "onespin",
                      "jasper",
                      "vc_formal"
                    ],
                    [
                      "onespin"
                    ]
                  ]
                },
                {
                  "name": "coverage",
                  "type": "array",
                  "description": "Commercial coverage tools",
                  "required": false,
                  "examples": [
                    [
                      "vcs",
                      "questa"
                    ],
                    [
                      "vcs"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "security",
          "type": "object",
          "description": "Security testing and analysis tools",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source security tools",
              "required": false,
              "children": [
                {
                  "name": "side_channel",
                  "type": "array",
                  "description": "Side-channel analysis tools",
                  "required": false,
                  "examples": [
                    [
                      "chipwhisperer",
                      "custom_python"
                    ],
                    [
                      "chipwhisperer"
                    ]
                  ]
                },
                {
                  "name": "fault_injection",
                  "type": "array",
                  "description": "Fault injection testing tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy"
                    ],
                    [
                      "custom_python"
                    ]
                  ]
                },
                {
                  "name": "cryptographic",
                  "type": "array",
                  "description": "Cryptographic analysis tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "scipy"
                    ],
                    [
                      "custom_python"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial security tools",
              "required": false,
              "children": [
                {
                  "name": "side_channel",
                  "type": "array",
                  "description": "Side-channel analysis tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rohde_schwarz"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                },
                {
                  "name": "fault_injection",
                  "type": "array",
                  "description": "Fault injection testing tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rambus_dpa"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                },
                {
                  "name": "cryptographic",
                  "type": "array",
                  "description": "Cryptographic analysis tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic"
                    ],
                    []
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "chipletIntegration",
      "type": "object",
      "description": "Metadata for chiplet-based IP and interoperability. This section provides comprehensive chiplet metadata including physical interfaces, packaging, compliance, and migration paths. Only required for IP that implements chiplet functionality.",
      "required": false,
      "examples": [
        {
          "phy": {
            "standard": "AIB",
            "version": "2.0",
            "mode": "parallel_source_sync",
            "lanes": 64,
            "lanes_tx": 32,
            "lanes_rx": 32,
            "data_rate_gbps_per_lane": 2,
            "io_voltage": "1.2V",
            "termination": "on_die",
            "training": [
              "deskew",
              "prbs"
            ],
            "loopback": true,
            "error_detection": [
              "crc",
              "parity"
            ],
            "power_pJ_per_bit": 0.8,
            "reach_mm": 25
          },
          "link": {
            "protocol": "AIB",
            "width_bits": 512,
            "flow_control": "credit_based",
            "retry_mechanism": true,
            "max_payload_size": 256,
            "latency_ns": 50
          },
          "management": {
            "discovery": "AIB_Discovery_v2",
            "configuration": "register_based",
            "firmware_update": "secure_boot",
            "monitoring": [
              "temperature",
              "voltage",
              "performance"
            ]
          },
          "packaging": {
            "substrate": "organic",
            "interposer": "silicon",
            "bump_pitch_um": 130,
            "thermal_management": "heat_spreader"
          },
          "compliance": {
            "aib": {
              "enabled": true,
              "spec_version": "2.0",
              "features": [
                "gearboxing",
                "prbs",
                "loopback",
                "error_counting"
              ]
            },
            "ucie": {
              "enabled": false,
              "spec_version": "1.0",
              "profile": "ShortReach",
              "protocol_modes": [
                "PCIe",
                "CXL"
              ]
            }
          },
          "migrationPath": {
            "prepareForUCIe": true,
            "targetStandard": "UCIe 1.1",
            "migrationSteps": [
              "Maintain AIB compliance for current designs",
              "Prepare UCIe interface wrapper",
              "Implement protocol translation"
            ],
            "compatibilityLayer": "Interface wrapper"
          }
        },
        {
          "phy": {
            "standard": "UCIe",
            "version": "1.1",
            "mode": "serial",
            "lanes": 32,
            "lanes_tx": 16,
            "lanes_rx": 16,
            "data_rate_gbps_per_lane": 8,
            "io_voltage": "0.8V",
            "termination": "on_die",
            "training": [
              "deskew",
              "prbs",
              "eye_optimization"
            ],
            "loopback": true,
            "error_detection": [
              "crc",
              "ecc"
            ],
            "power_pJ_per_bit": 0.5,
            "reach_mm": 100
          },
          "link": {
            "protocol": "UCIe",
            "width_bits": 256,
            "flow_control": "credit_based",
            "retry_mechanism": true,
            "max_payload_size": 512,
            "latency_ns": 30
          },
          "management": {
            "discovery": "UCIe_Discovery_v1",
            "configuration": "memory_mapped",
            "firmware_update": "secure_boot",
            "monitoring": [
              "temperature",
              "voltage",
              "performance",
              "link_quality"
            ]
          },
          "packaging": {
            "substrate": "organic",
            "interposer": "none",
            "bump_pitch_um": 100,
            "thermal_management": "microchannel"
          },
          "compliance": {
            "aib": {
              "enabled": false,
              "spec_version": "2.0",
              "features": []
            },
            "ucie": {
              "enabled": true,
              "spec_version": "1.1",
              "profile": "LongReach",
              "protocol_modes": [
                "PCIe",
                "CXL",
                "STREAMING"
              ]
            }
          },
          "migrationPath": {
            "prepareForUCIe": true,
            "targetStandard": "UCIe 2.0",
            "migrationSteps": [
              "Upgrade to UCIe 2.0 interface",
              "Implement new protocol features",
              "Update compliance validation"
            ],
            "compatibilityLayer": "None"
          }
        }
      ],
      "children": [
        {
          "name": "phy",
          "type": "object",
          "description": "Physical layer interface specifications for die-to-die communication",
          "required": [
            "standard",
            "version",
            "lanes",
            "data_rate_gbps_per_lane",
            "io_voltage"
          ],
          "children": [
            {
              "name": "standard",
              "type": "string",
              "description": "Interface standard for die-to-die communication",
              "required": false,
              "enum": [
                "AIB",
                "BoW",
                "UCIe",
                "EMIB"
              ],
              "examples": [
                "AIB",
                "BoW"
              ]
            },
            {
              "name": "version",
              "type": "string",
              "description": "Standard version number",
              "required": false,
              "examples": [
                "2.0",
                "1.1"
              ]
            },
            {
              "name": "mode",
              "type": "string",
              "description": "Signaling mode for the interface",
              "required": false,
              "enum": [
                "parallel_source_sync",
                "serial",
                "differential"
              ]
            },
            {
              "name": "lanes",
              "type": "integer",
              "description": "Number of interface lanes (transmit and receive)",
              "required": false,
              "examples": [
                16,
                32
              ]
            },
            {
              "name": "lanes_tx",
              "type": "integer",
              "description": "Number of transmit lanes",
              "required": false,
              "examples": [
                16,
                32
              ]
            },
            {
              "name": "lanes_rx",
              "type": "integer",
              "description": "Number of receive lanes",
              "required": false,
              "examples": [
                16,
                32
              ]
            },
            {
              "name": "data_rate_gbps_per_lane",
              "type": "number",
              "description": "Data rate per lane in Gbps",
              "required": false,
              "examples": [
                0.5,
                1
              ]
            },
            {
              "name": "io_voltage",
              "type": "string",
              "description": "I/O voltage level for the interface",
              "required": false,
              "enum": [
                "0.8V",
                "1.1V",
                "1.2V",
                "1.8V"
              ],
              "examples": [
                "1.2V",
                "1.8V"
              ]
            },
            {
              "name": "termination",
              "type": "string",
              "description": "Termination scheme for the interface",
              "required": false,
              "enum": [
                "on_die",
                "external"
              ]
            },
            {
              "name": "training",
              "type": "array",
              "description": "Training sequence requirements for the interface",
              "required": false,
              "examples": [
                [
                  "deskew",
                  "prbs"
                ],
                [
                  "deskew",
                  "prbs",
                  "eye_optimization"
                ]
              ]
            },
            {
              "name": "loopback",
              "type": "boolean",
              "description": "Whether loopback capability is available",
              "required": false
            },
            {
              "name": "error_detection",
              "type": "array",
              "description": "Error detection mechanisms supported",
              "required": false,
              "examples": [
                [
                  "crc"
                ],
                [
                  "crc",
                  "parity"
                ]
              ]
            },
            {
              "name": "power_pJ_per_bit",
              "type": "number",
              "description": "Power per bit in picojoules",
              "required": false,
              "examples": [
                0.5,
                0.8
              ]
            },
            {
              "name": "reach_mm",
              "type": "number",
              "description": "Maximum reach in millimeters",
              "required": false,
              "examples": [
                5,
                8
              ]
            },
            {
              "name": "bump_map_ref",
              "type": "string",
              "description": "Reference to bump map artifact (should point to an entry in the artifacts section)",
              "required": false,
              "examples": [
                "path://bump_map.csv",
                "artifacts://bump_map_v1"
              ]
            }
          ]
        },
        {
          "name": "link",
          "type": "object",
          "description": "Link layer protocol specifications for data transfer",
          "required": [
            "protocol",
            "width_bits"
          ],
          "children": [
            {
              "name": "protocol",
              "type": "string",
              "description": "Link protocol for data transfer",
              "required": false,
              "enum": [
                "PCIe",
                "CXL",
                "STREAMING",
                "CUSTOM"
              ],
              "examples": [
                "STREAMING",
                "PCIe"
              ]
            },
            {
              "name": "width_bits",
              "type": "integer",
              "description": "Total link width in bits",
              "required": false,
              "examples": [
                64,
                128
              ]
            },
            {
              "name": "flow_control",
              "type": "string",
              "description": "Flow control mechanism",
              "required": false,
              "enum": [
                "credit",
                "ack_nack",
                "none"
              ]
            },
            {
              "name": "replay",
              "type": "boolean",
              "description": "Whether replay capability is supported",
              "required": false
            },
            {
              "name": "fec",
              "type": "string",
              "description": "Forward error correction method",
              "required": false,
              "enum": [
                "none",
                "reed_solomon",
                "ldpc"
              ]
            },
            {
              "name": "max_payload_bytes",
              "type": "integer",
              "description": "Maximum payload size in bytes",
              "required": false,
              "examples": [
                256,
                512
              ]
            }
          ]
        },
        {
          "name": "management",
          "type": "object",
          "description": "System management and discovery specifications",
          "required": [
            "discovery"
          ],
          "children": [
            {
              "name": "discovery",
              "type": "string",
              "description": "Discovery protocol for chiplet integration",
              "required": false,
              "enum": [
                "CDXML",
                "custom"
              ]
            },
            {
              "name": "endpoint_id",
              "type": "string",
              "description": "Unique endpoint identifier",
              "required": false,
              "examples": [
                "0x1A2B",
                "chiplet_0"
              ]
            },
            {
              "name": "config_bus",
              "type": "string",
              "description": "Configuration bus specification",
              "required": false,
              "examples": [
                "I2C@0x54",
                "SPI@0x100"
              ]
            },
            {
              "name": "firmware_update",
              "type": "object",
              "description": "Firmware update mechanism",
              "required": false,
              "children": [
                {
                  "name": "method",
                  "type": "string",
                  "description": "Firmware update method",
                  "required": false,
                  "enum": [
                    "in_band",
                    "out_of_band"
                  ]
                },
                {
                  "name": "format",
                  "type": "string",
                  "description": "Firmware format specification",
                  "required": false,
                  "examples": [
                    "CSIP-v1",
                    "custom"
                  ]
                },
                {
                  "name": "secure_boot",
                  "type": "boolean",
                  "description": "Whether secure boot is required for firmware updates",
                  "required": false
                },
                {
                  "name": "rot_block",
                  "type": "string",
                  "description": "Root of trust block type",
                  "required": false,
                  "examples": [
                    "caliptra_v0.7",
                    "dice"
                  ]
                }
              ]
            },
            {
              "name": "telemetry",
              "type": "array",
              "description": "Available telemetry data",
              "required": false,
              "examples": [
                [
                  "temperature",
                  "lane_error_counters"
                ],
                [
                  "temperature",
                  "power_consumption"
                ]
              ]
            }
          ]
        },
        {
          "name": "packaging",
          "type": "object",
          "description": "Packaging and assembly specifications",
          "required": false,
          "children": [
            {
              "name": "assembly",
              "type": "string",
              "description": "Assembly type for chiplet integration",
              "required": false,
              "enum": [
                "organic_substrate",
                "2.5D_interposer",
                "fanout",
                "3D_stacked"
              ],
              "examples": [
                "2.5D_interposer",
                "organic_substrate"
              ]
            },
            {
              "name": "substrate_stackup",
              "type": "string",
              "description": "Substrate stackup reference",
              "required": false,
              "examples": [
                "pkg_stack_v3",
                "custom_stackup"
              ]
            },
            {
              "name": "thermal",
              "type": "object",
              "description": "Thermal characteristics",
              "required": false,
              "children": [
                {
                  "name": "theta_ja_c_per_w",
                  "type": "number",
                  "description": "Junction to ambient thermal resistance in °C/W",
                  "required": false,
                  "examples": [
                    18,
                    25
                  ]
                },
                {
                  "name": "max_tj_c",
                  "type": "number",
                  "description": "Maximum junction temperature in °C",
                  "required": false,
                  "examples": [
                    110,
                    125
                  ]
                }
              ]
            },
            {
              "name": "power_delivery",
              "type": "object",
              "description": "Power delivery network specifications",
              "required": false,
              "children": [
                {
                  "name": "rails",
                  "type": "array",
                  "description": "",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "name",
                        "imax_a"
                      ],
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "Power rail name",
                          "required": false,
                          "examples": [
                            "1.2V_CORE",
                            "1.8V_IO"
                          ]
                        },
                        {
                          "name": "imax_a",
                          "type": "number",
                          "description": "Maximum current in amperes",
                          "required": false,
                          "examples": [
                            0.6,
                            1.2
                          ]
                        },
                        {
                          "name": "dvdt_limit_mV_us",
                          "type": "number",
                          "description": "dV/dt limit in millivolts per microsecond",
                          "required": false,
                          "examples": [
                            20,
                            50
                          ]
                        },
                        {
                          "name": "seq",
                          "type": "integer",
                          "description": "Power sequencing order",
                          "required": false,
                          "examples": [
                            1,
                            2
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "decap_guidance",
                  "type": "string",
                  "description": "Decoupling capacitor guidance",
                  "required": false,
                  "examples": [
                    "min 1nF/mm2 near interface",
                    "100nF per power domain"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "compliance",
          "type": "object",
          "description": "Standards compliance and validation tracking",
          "required": false,
          "children": [
            {
              "name": "cdxml",
              "type": "object",
              "description": "CDXML compliance information",
              "required": false,
              "children": [
                {
                  "name": "version",
                  "type": "string",
                  "description": "CDXML specification version",
                  "required": false,
                  "examples": [
                    "cdxml-v0.2",
                    "cdxml-v1.0"
                  ]
                },
                {
                  "name": "protocol_support",
                  "type": "array",
                  "description": "Supported interface protocols",
                  "required": false,
                  "examples": [
                    [
                      "AIB",
                      "BoW"
                    ],
                    [
                      "AIB",
                      "UCIe"
                    ]
                  ]
                },
                {
                  "name": "electrical_validation",
                  "type": "string",
                  "description": "Electrical validation reference",
                  "required": false,
                  "examples": [
                    "OCP-ODSA-2025Q1",
                    "custom_validation"
                  ]
                },
                {
                  "name": "mechanical_validation",
                  "type": "string",
                  "description": "Mechanical validation reference",
                  "required": false,
                  "examples": [
                    "OCP-ODSA-2025Q1",
                    "custom_validation"
                  ]
                }
              ]
            },
            {
              "name": "aib",
              "type": "object",
              "description": "AIB compliance status",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "Whether AIB is enabled",
                  "required": false
                },
                {
                  "name": "spec_version",
                  "type": "string",
                  "description": "AIB specification version",
                  "required": false,
                  "examples": [
                    "1.0",
                    "2.0"
                  ]
                },
                {
                  "name": "features",
                  "type": "array",
                  "description": "AIB features supported",
                  "required": false,
                  "examples": [
                    [
                      "gearboxing",
                      "prbs"
                    ],
                    [
                      "loopback"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "ucie",
              "type": "object",
              "description": "UCIe compliance status",
              "required": false,
              "children": [
                {
                  "name": "enabled",
                  "type": "boolean",
                  "description": "Whether UCIe is enabled",
                  "required": false
                },
                {
                  "name": "spec_version",
                  "type": "string",
                  "description": "UCIe specification version",
                  "required": false,
                  "examples": [
                    "1.0",
                    "1.1"
                  ]
                },
                {
                  "name": "profile",
                  "type": "string",
                  "description": "UCIe profile type",
                  "required": false,
                  "enum": [
                    "ShortReach",
                    "LongReach"
                  ],
                  "examples": [
                    "ShortReach",
                    "LongReach"
                  ]
                },
                {
                  "name": "protocol_modes",
                  "type": "array",
                  "description": "Supported UCIe protocol modes",
                  "required": false,
                  "examples": [
                    [
                      "PCIe",
                      "CXL"
                    ],
                    [
                      "STREAMING"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "migrationPath",
          "type": "object",
          "description": "Migration path information for transitioning between standards",
          "required": false,
          "children": [
            {
              "name": "prepareForUCIe",
              "type": "boolean",
              "description": "Whether the design is prepared for UCIe migration",
              "required": false
            },
            {
              "name": "targetStandard",
              "type": "string",
              "description": "Target standard for migration",
              "required": false,
              "examples": [
                "UCIe 1.1",
                "UCIe 2.0"
              ]
            },
            {
              "name": "migrationSteps",
              "type": "array",
              "description": "Steps required for migration",
              "required": false,
              "examples": [
                "Maintain AIB compliance for current designs",
                "Prepare UCIe interface wrapper"
              ]
            },
            {
              "name": "compatibilityLayer",
              "type": "string",
              "description": "Compatibility layer description",
              "required": false,
              "examples": [
                "Protocol translation layer",
                "Interface wrapper"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "x-version",
      "type": "string",
      "description": "Schema version for tracking purposes - indicates which version of the Vyges Metadata Schema this metadata file conforms to. This should be the same across all metadata files using the same schema version.",
      "required": false,
      "examples": [
        "1.0.0",
        "2.0.0"
      ]
    },
    {
      "name": "certification",
      "type": "object",
      "description": "Industry certifications and standards compliance",
      "required": false,
      "examples": [
        {
          "iso_26262": "asil_b",
          "ieee_1149_1": true,
          "ieee_1500": false,
          "other_certifications": [
            "DO-254"
          ]
        },
        {
          "iso_26262": "none",
          "ieee_1149_1": false,
          "ieee_1500": false,
          "other_certifications": []
        }
      ],
      "children": [
        {
          "name": "iso_26262",
          "type": "string",
          "description": "ISO 26262 Automotive Safety Integrity Level",
          "required": false,
          "enum": [
            "none",
            "qm",
            "asil_a",
            "asil_b",
            "asil_c",
            "asil_d"
          ],
          "examples": [
            "none",
            "qm"
          ]
        },
        {
          "name": "ieee_1149_1",
          "type": "boolean",
          "description": "IEEE 1149.1 JTAG boundary scan compliance",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "ieee_1500",
          "type": "boolean",
          "description": "IEEE 1500 embedded core test compliance",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "other_certifications",
          "type": "array",
          "description": "List of other certifications or standards",
          "required": false,
          "examples": [
            [
              "DO-254"
            ],
            [
              "IEC 61508"
            ]
          ]
        }
      ]
    },
    {
      "name": "reliability",
      "type": "object",
      "description": "Reliability and quality metrics",
      "required": false,
      "examples": [
        {
          "fault_tolerance": "basic",
          "error_detection": [
            "parity",
            "CRC"
          ],
          "test_coverage": {
            "line_coverage": 90,
            "branch_coverage": 85,
            "functional_coverage": 95
          },
          "mtbf_hours": 10000
        },
        {
          "fault_tolerance": "mission_critical",
          "error_detection": [
            "ECC",
            "CRC",
            "checksum"
          ],
          "test_coverage": {
            "line_coverage": 95,
            "branch_coverage": 90,
            "functional_coverage": 98
          },
          "mtbf_hours": 100000
        }
      ],
      "children": [
        {
          "name": "fault_tolerance",
          "type": "string",
          "description": "Level of fault tolerance implemented",
          "required": false,
          "enum": [
            "none",
            "basic",
            "advanced",
            "mission_critical"
          ],
          "examples": [
            "none",
            "basic"
          ]
        },
        {
          "name": "error_detection",
          "type": "array",
          "description": "List of error detection mechanisms (e.g., parity, ECC, CRC)",
          "required": false,
          "examples": [
            [
              "parity"
            ],
            [
              "ECC",
              "CRC"
            ]
          ]
        },
        {
          "name": "test_coverage",
          "type": "object",
          "description": "Test coverage percentages",
          "required": false,
          "examples": [
            {
              "line_coverage": 90,
              "branch_coverage": 85,
              "functional_coverage": 95
            },
            {
              "line_coverage": 95,
              "branch_coverage": 90,
              "functional_coverage": 98
            }
          ],
          "children": [
            {
              "name": "line_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                85,
                90
              ]
            },
            {
              "name": "branch_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                80,
                85
              ]
            },
            {
              "name": "functional_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                90,
                95
              ]
            }
          ]
        },
        {
          "name": "mtbf_hours",
          "type": "number",
          "description": "Mean Time Between Failures in hours",
          "required": false,
          "examples": [
            1000,
            10000
          ]
        }
      ]
    },
    {
      "name": "updated",
      "type": "string",
      "description": "ISO 8601 timestamp when this IP was last updated",
      "required": false,
      "examples": [
        "2024-01-20T14:45:00Z",
        "2024-01-15T16:20:00Z"
      ]
    },
    {
      "name": "categories",
      "type": "array",
      "description": "Catalog categories and subcategories for IP classification",
      "required": false,
      "examples": [
        [
          {
            "main_category": "Interface Controllers",
            "sub_category": "Serial Interfaces",
            "description": "SPI master controller for communication with peripheral devices"
          }
        ],
        [
          {
            "main_category": "Signal Processing",
            "sub_category": "Transforms",
            "description": "Fast Fourier Transform implementation for frequency domain analysis"
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "main_category"
          ],
          "children": [
            {
              "name": "main_category",
              "type": "string",
              "description": "Primary functional category for the IP block",
              "required": false,
              "enum": [
                "Analog & Mixed-Signal",
                "Arithmetic Units",
                "Base Libraries",
                "Chiplet Integration",
                "Control Logic",
                "Converters",
                "Interface Controllers",
                "Memory Subsystems",
                "Miscellaneous",
                "Processing Cores",
                "Security IP",
                "Signal Processing",
                "Timing & Clocking",
                "Verification & Testing"
              ]
            },
            {
              "name": "sub_category",
              "type": "string",
              "description": "Secondary subcategory within the main category. The allowed values depend on the main_category selected.",
              "required": false
            },
            {
              "name": "description",
              "type": "string",
              "description": "Optional description of why this category applies to the IP",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "name": "verification",
      "type": "object",
      "description": "Legacy verification metadata (use 'test' and 'flows' sections instead)",
      "required": false,
      "examples": [
        {
          "testbenches": [
            "test_spi_controller.py"
          ],
          "framework": "cocotb",
          "coverage": {
            "lines": 95,
            "branches": 88
          },
          "formal": {
            "tools": [
              "yosys-smtbmc"
            ],
            "status": "passed"
          }
        }
      ],
      "children": [
        {
          "name": "testbenches",
          "type": "array",
          "description": "List of testbench files or frameworks",
          "required": false,
          "examples": [
            [
              "test_spi_controller.py",
              "test_apb_interface.py"
            ],
            [
              "tb_spi.v"
            ]
          ]
        },
        {
          "name": "framework",
          "type": "string",
          "description": "Test framework used (e.g., cocotb, UVM)",
          "required": false,
          "examples": [
            "cocotb",
            "UVM"
          ]
        },
        {
          "name": "coverage",
          "type": "object",
          "description": "Code coverage metrics",
          "required": false,
          "examples": [
            {
              "lines": 95,
              "branches": 88
            },
            {
              "lines": 100,
              "branches": 100
            }
          ],
          "children": [
            {
              "name": "lines",
              "type": "number",
              "description": "Line coverage percentage",
              "required": false,
              "examples": [
                95,
                88
              ]
            },
            {
              "name": "branches",
              "type": "number",
              "description": "Branch coverage percentage",
              "required": false,
              "examples": [
                88,
                92
              ]
            }
          ]
        },
        {
          "name": "formal",
          "type": "object",
          "description": "Formal verification results",
          "required": false,
          "examples": [
            {
              "tools": [
                "yosys-smtbmc",
                "sby"
              ],
              "status": "passed"
            },
            {
              "tools": [
                "jtag"
              ],
              "status": "partial"
            }
          ],
          "children": [
            {
              "name": "tools",
              "type": "array",
              "description": "List of formal verification tools used",
              "required": false,
              "examples": [
                [
                  "yosys-smtbmc",
                  "sby"
                ],
                [
                  "jtag",
                  "symbiyosys"
                ]
              ]
            },
            {
              "name": "status",
              "type": "string",
              "description": "Formal verification status",
              "required": false,
              "enum": [
                "passed",
                "partial",
                "failed",
                "untested"
              ],
              "examples": [
                "passed",
                "partial"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "test",
      "type": "object",
      "description": "Testing and verification status information",
      "required": [
        "status"
      ],
      "examples": [
        {
          "coverage": true,
          "testbenches": [
            "cocotb"
          ],
          "simulators": [
            "verilator"
          ],
          "status": "passing"
        },
        {
          "testbenches": [
            "UVM"
          ],
          "simulators": [
            "VCS"
          ],
          "status": "partial"
        }
      ],
      "children": [
        {
          "name": "coverage",
          "type": "boolean",
          "description": "Whether code coverage is enabled for this IP",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "testbenches",
          "type": "array",
          "description": "List of testbench frameworks used (e.g., cocotb, UVM, SystemVerilog)",
          "required": false,
          "examples": [
            [
              "cocotb"
            ],
            [
              "UVM",
              "SystemVerilog"
            ]
          ]
        },
        {
          "name": "simulators",
          "type": "array",
          "description": "List of simulators used for testing (e.g., verilator, iverilog, ModelSim)",
          "required": false,
          "examples": [
            [
              "verilator"
            ],
            [
              "iverilog",
              "ModelSim"
            ]
          ]
        },
        {
          "name": "status",
          "type": "string",
          "description": "Overall test status",
          "required": false,
          "enum": [
            "passing",
            "failing",
            "partial",
            "untested"
          ],
          "examples": [
            "passing",
            "partial"
          ]
        }
      ]
    },
    {
      "name": "toolchain_support",
      "type": "array",
      "description": "List of EDA tools or simulators this IP has been tested with (legacy field)",
      "required": false,
      "examples": [
        [
          "verilator",
          "yosys"
        ],
        [
          "VCS",
          "Design Compiler"
        ]
      ]
    },
    {
      "name": "maturity",
      "type": "string",
      "description": "Indicates readiness or lifecycle state of the IP",
      "required": false,
      "enum": [
        "prototype",
        "alpha",
        "beta",
        "production",
        "deprecated"
      ],
      "examples": [
        "production",
        "beta"
      ]
    },
    {
      "name": "commercial",
      "type": "object",
      "description": "Commercial/licensing contact and monetization options",
      "required": false,
      "examples": [
        {
          "contact_email": "sales@acme.com",
          "sales_page": "https://acme.com/sales",
          "pricing_model": "one-time",
          "available_regions": [
            "US",
            "EU",
            "JP"
          ]
        },
        {
          "pricing_model": "free",
          "available_regions": [
            "Global"
          ]
        }
      ],
      "children": [
        {
          "name": "contact_email",
          "type": "string",
          "description": "Contact email for commercial inquiries",
          "required": false,
          "examples": [
            "sales@acme.com",
            "licensing@vyges.com"
          ]
        },
        {
          "name": "sales_page",
          "type": "string",
          "description": "URL to sales or licensing page",
          "required": false,
          "examples": [
            "https://acme.com/sales",
            "https://vyges.com/licensing"
          ]
        },
        {
          "name": "pricing_model",
          "type": "string",
          "description": "Pricing model for this IP",
          "required": false,
          "enum": [
            "free",
            "evaluation",
            "subscription",
            "one-time",
            "royalty",
            "custom",
            "contact-us"
          ],
          "examples": [
            "free",
            "evaluation"
          ]
        },
        {
          "name": "available_regions",
          "type": "array",
          "description": "List of regions/countries this IP can be licensed in",
          "required": false,
          "examples": [
            [
              "US",
              "EU",
              "JP"
            ],
            [
              "US",
              "CA"
            ]
          ]
        }
      ]
    },
    {
      "name": "source",
      "type": "object",
      "description": "Source code location and versioning information",
      "required": [
        "type",
        "url"
      ],
      "examples": [
        {
          "type": "git",
          "url": "https://github.com/vyges/spi-controller",
          "commit": "a1b2c3d",
          "private": false,
          "containsEncryptedPayload": false,
          "indexing": true
        },
        {
          "type": "git",
          "url": "https://github.com/acme/pcie-phy-encrypted",
          "private": true,
          "containsEncryptedPayload": true,
          "indexing": false
        }
      ],
      "children": [
        {
          "name": "type",
          "type": "string",
          "description": "Type of source reference",
          "required": false,
          "enum": [
            "git",
            "archive"
          ],
          "examples": [
            "git",
            "archive"
          ]
        },
        {
          "name": "url",
          "type": "string",
          "description": "URL to the source repository or archive",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller",
            "https://github.com/acme/pcie-phy-encrypted"
          ]
        },
        {
          "name": "commit",
          "type": "string",
          "description": "Git commit hash or version identifier",
          "required": false,
          "examples": [
            "a1b2c3d",
            "main"
          ]
        },
        {
          "name": "hash",
          "type": "string",
          "description": "SHA256 for archive-based sources",
          "required": false,
          "examples": [
            "sha256:abc123...",
            "sha256:def456..."
          ]
        },
        {
          "name": "private",
          "type": "boolean",
          "description": "Whether the repository is private or contains proprietary content",
          "required": false,
          "examples": [
            false,
            true
          ]
        },
        {
          "name": "containsEncryptedPayload",
          "type": "boolean",
          "description": "Whether the repository contains encrypted or proprietary IP",
          "required": false,
          "examples": [
            false,
            true
          ]
        },
        {
          "name": "indexing",
          "type": "boolean",
          "description": "Whether Vyges should index the repository contents",
          "required": false,
          "examples": [
            true,
            false
          ]
        }
      ]
    },
    {
      "name": "keywords",
      "type": "array",
      "description": "Keywords for search and discovery",
      "required": false,
      "examples": [
        [
          "serial",
          "protocol",
          "master",
          "slave",
          "communication"
        ],
        [
          "high-speed",
          "phy",
          "gen4",
          "encrypted"
        ]
      ]
    },
    {
      "name": "target",
      "type": "array",
      "description": "Target platforms this IP supports",
      "required": false,
      "examples": [
        [
          "asic"
        ],
        [
          "fpga"
        ]
      ]
    },
    {
      "name": "demo",
      "type": "object",
      "description": "Interactive or downloadable demo availability",
      "required": false,
      "examples": [
        {
          "sandbox_link": "https://demo.vyges.com/spi-controller",
          "emulation_video": "https://youtube.com/watch?v=abc123",
          "testbench_example": "https://github.com/vyges/spi-controller/tree/main/tb",
          "integration_example": "https://github.com/vyges/spi-controller/tree/main/examples"
        },
        {
          "emulation_video": "https://acme.com/demo/video.mp4",
          "testbench_example": "https://acme.com/examples/testbench.zip"
        }
      ],
      "children": [
        {
          "name": "sandbox_link",
          "type": "string",
          "description": "URL to interactive demo or sandbox",
          "required": false,
          "examples": [
            "https://demo.vyges.com/spi-controller",
            "https://acme.com/demo/pcie-phy"
          ]
        },
        {
          "name": "emulation_video",
          "type": "string",
          "description": "URL to demonstration video",
          "required": false,
          "examples": [
            "https://youtube.com/watch?v=abc123",
            "https://acme.com/demo/video.mp4"
          ]
        },
        {
          "name": "testbench_example",
          "type": "string",
          "description": "URL to example testbench or simulation files",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/tree/main/tb",
            "https://acme.com/examples/testbench.zip"
          ]
        },
        {
          "name": "integration_example",
          "type": "string",
          "description": "URL to integration example or wrapper code",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/tree/main/examples",
            "https://acme.com/examples/integration.zip"
          ]
        }
      ]
    }
  ]
}