{
  "name": "VygesMetadata",
  "type": "object",
  "description": "Metadata manifest for reusable silicon IP blocks in the Vyges ecosystem.",
  "required": [
    "name",
    "x-version",
    "version",
    "license",
    "interfaces",
    "template",
    "target",
    "design_type",
    "maturity"
  ],
  "examples": [
    {
      "name": "vyges/spi-controller",
      "x-version": "1.0.0",
      "version": "1.0.0",
      "template": "vyges-ip-template@1.0.0",
      "description": "SPI master controller with configurable clock divider",
      "license": "Apache-2.0",
      "maturity": "production",
      "target": [
        "asic",
        "fpga"
      ],
      "design_type": [
        "digital"
      ],
      "chiplet": {
        "chiplet_ready": true,
        "integration_level": "rtl",
        "die_to_die_interfaces": [
          "ucie",
          "bow"
        ],
        "packaging_considerations": "Requires 2.5D interposer with 0.8mm bump pitch",
        "interposer_constraints": {
          "technology": "silicon",
          "routing_layers": 4,
          "minimum_pitch": 0.8,
          "die_spacing": 0.1
        },
        "bump_constraints": {
          "pitch": 0.8,
          "size": 0.4,
          "array": "full",
          "power_bumps": 8,
          "signal_bumps": 32
        },
        "thermal_constraints": {
          "max_power_per_die": 2,
          "junction_temperature": 125,
          "thermal_resistance": 30,
          "cooling_requirements": "Passive cooling sufficient"
        },
        "multi_die_testing": {
          "test_access": "boundary_scan",
          "test_coverage": {
            "interconnect": 95,
            "functionality": 90
          },
          "test_vectors": [
            "interconnect_test.v",
            "functional_test.v"
          ]
        }
      },
      "automation": {
        "automation_level": "enhanced",
        "minimal_required": [
          "name",
          "version",
          "license",
          "interfaces",
          "template",
          "target",
          "design_type",
          "maturity",
          "description",
          "source",
          "asic",
          "fpga",
          "test",
          "flows"
        ],
        "recommended_for_automation": [
          "parameters",
          "dependencies",
          "toolRequirements",
          "performance",
          "reliability",
          "packaging",
          "community"
        ]
      },
      "toolRequirements": {
        "simulation": "verilator",
        "synthesis": "yosys",
        "physical": "openroad",
        "layout": "magic",
        "verification": "netgen",
        "notes": "Open-source toolchain supported"
      },
      "created": "2024-01-15T10:30:00Z",
      "updated": "2024-01-20T14:45:00Z",
      "interfaces": [
        {
          "type": "bus",
          "direction": "input",
          "protocol": "APB",
          "width": 32,
          "signals": [
            {
              "name": "PCLK",
              "direction": "input",
              "type": "clock",
              "description": "APB clock signal"
            },
            {
              "name": "PRESETn",
              "direction": "input",
              "type": "reset",
              "active_level": "low",
              "description": "APB reset signal"
            }
          ]
        },
        {
          "type": "chiplet",
          "direction": "inout",
          "protocol": "UCIe",
          "width": 64,
          "signals": [
            {
              "name": "ucie_clk",
              "direction": "input",
              "type": "clock",
              "description": "UCIe clock signal"
            },
            {
              "name": "ucie_rst_n",
              "direction": "input",
              "type": "reset",
              "active_level": "low",
              "description": "UCIe reset signal"
            },
            {
              "name": "ucie_tx_data",
              "direction": "output",
              "type": "data",
              "width": 64,
              "description": "UCIe transmit data"
            },
            {
              "name": "ucie_rx_data",
              "direction": "input",
              "type": "data",
              "width": 64,
              "description": "UCIe receive data"
            }
          ]
        }
      ],
      "asic": {
        "flavor": "digital",
        "pdks": [
          "sky130B",
          "gf180mcuC",
          "ihp-sg13g2"
        ],
        "synthesis_tool": "openlane",
        "clock_freq_mhz": 100
      },
      "fpga": {
        "toolchain": "vivado",
        "board": "arty-a7",
        "cfu_playground_compatible": true,
        "constraints": [
          "fpga/constraints/arty.xdc"
        ]
      },
      "test": {
        "status": "passing",
        "testbenches": [
          "cocotb"
        ],
        "simulators": [
          "verilator"
        ]
      },
      "flows": {
        "verilator": {
          "status": "verified"
        },
        "openlane": {
          "status": "tested",
          "pdks": [
            "sky130B",
            "gf180mcuC",
            "ihp-sg13g2"
          ]
        }
      },
      "packaging": {
        "ipxact": true,
        "format": "verilog"
      },
      "community": {
        "contributions": true,
        "issues": "https://github.com/vyges/spi-controller/issues"
      },
      "dependencies": [
        {
          "name": "openhw/apb-bridge",
          "version": "^1.0.0",
          "type": "ip",
          "license": "CERN-OHL-S",
          "source": {
            "type": "git",
            "url": "https://github.com/openhwgroup/apb-bridge",
            "commit": "a1b2c3d"
          },
          "autoFetch": true,
          "attribution": "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S."
        }
      ],
      "parameters": [
        {
          "name": "CLOCK_DIV",
          "type": "int",
          "default": 8,
          "description": "Clock divider for SPI clock generation",
          "range": {
            "min": 2,
            "max": 256
          },
          "units": "cycles",
          "required": false
        },
        {
          "name": "DATA_WIDTH",
          "type": "int",
          "default": 8,
          "description": "Data width for SPI transactions",
          "range": {
            "min": 1,
            "max": 32
          },
          "units": "bits",
          "required": true
        }
      ],
      "performance": {
        "max_frequency_mhz": 100,
        "power_consumption_mw": 5.2,
        "area_mm2": 0.15,
        "gate_count": 2500
      },
      "reliability": {
        "fault_tolerance": "basic",
        "error_detection": [
          "parity"
        ],
        "test_coverage": {
          "line_coverage": 95,
          "branch_coverage": 88,
          "functional_coverage": 92
        }
      },
      "categories": [
        "interface",
        "controller",
        "communication"
      ],
      "tags": [
        "spi",
        "controller",
        "apb",
        "master"
      ],
      "keywords": [
        "serial",
        "protocol",
        "master",
        "slave",
        "communication"
      ],
      "registry": {
        "status": "approved",
        "submission_date": "2024-01-15T10:30:00Z",
        "approval_date": "2024-01-16T14:20:00Z",
        "verified_by": "vyges-team",
        "registry_id": "spi-controller-v1",
        "compliance_check": {
          "status": "passing",
          "last_checked": "2024-01-16T14:20:00Z",
          "checker_version": "1.0.0",
          "issues": []
        }
      }
    },
    {
      "name": "acme/pcie-phy-encrypted",
      "x-version": "1.0.0",
      "version": "3.2.1",
      "template": "vyges-ip-template@1.0.0",
      "description": "High-speed PCIe Gen4 PHY with encrypted RTL payload",
      "license": "Proprietary",
      "maturity": "production",
      "target": [
        "asic"
      ],
      "design_type": [
        "mixed-signal"
      ],
      "interfaces": [
        {
          "type": "bus",
          "direction": "input",
          "protocol": "PCIe",
          "width": 64,
          "signals": [
            {
              "name": "pcie_clk",
              "direction": "input",
              "type": "clock",
              "description": "PCIe reference clock"
            },
            {
              "name": "pcie_rst_n",
              "direction": "input",
              "type": "reset",
              "active_level": "low",
              "description": "PCIe reset signal"
            },
            {
              "name": "tx_data",
              "direction": "output",
              "type": "data",
              "width": 64,
              "description": "Transmit data"
            },
            {
              "name": "rx_data",
              "direction": "input",
              "type": "data",
              "width": 64,
              "description": "Receive data"
            }
          ]
        }
      ],
      "automation": {
        "automation_level": "basic",
        "minimal_required": [
          "name",
          "version",
          "license",
          "interfaces",
          "template",
          "target",
          "design_type",
          "maturity",
          "description",
          "source",
          "asic",
          "fpga",
          "test",
          "flows"
        ],
        "blocking_issues": [
          "encrypted_ip",
          "requires_nda"
        ]
      },
      "asic": {
        "flavor": "mixed-signal",
        "pdks": [
          "tsmc28",
          "gf12"
        ],
        "digital_partition": [
          "rtl/pcie_phy_wrapper.v"
        ],
        "analog_partition": [
          "analog/pcie_phy_analog.spice"
        ],
        "co_simulation": {
          "tool": "ams-designer",
          "interface_signals": [
            "tx_data",
            "rx_data",
            "clk",
            "reset"
          ]
        }
      },
      "delivery": {
        "encryptedRTL": true,
        "encryptedModels": true,
        "formats": [
          "vhdl",
          "lib",
          "db",
          "lef",
          "gds"
        ],
        "requiresNDA": true,
        "access": "Contact licensing@acme.com for evaluation",
        "licenseModel": "per-project"
      },
      "toolRequirements": {
        "simulation": "Synopsys VCS or Cadence Xcelium",
        "synthesis": "Synopsys Design Compiler",
        "physical": "Cadence Innovus"
      },
      "source": {
        "type": "git",
        "url": "https://github.com/acme/pcie-phy-encrypted",
        "private": true,
        "containsEncryptedPayload": true,
        "indexing": false
      },
      "commercial": {
        "contact_email": "licensing@acme.com",
        "pricing_model": "one-time",
        "available_regions": [
          "US",
          "EU",
          "APAC"
        ]
      },
      "compliance": {
        "sbom": "https://acme.com/sbom/pcie-phy-3.2.1.json"
      },
      "tags": [
        "pcie",
        "phy",
        "encrypted",
        "mixed-signal"
      ]
    }
  ],
  "children": [
    {
      "name": "target",
      "type": "array",
      "description": "Target platforms this IP supports",
      "required": false,
      "examples": [
        [
          "asic"
        ],
        [
          "fpga"
        ]
      ]
    },
    {
      "name": "design_type",
      "type": "array",
      "description": "Design types this IP supports",
      "required": false,
      "examples": [
        [
          "digital"
        ],
        [
          "analog"
        ]
      ]
    },
    {
      "name": "name",
      "type": "string",
      "description": "Unique package name, typically in the format 'namespace/ip-name'",
      "required": false,
      "examples": [
        "vyges/spi-controller",
        "acme/pcie-phy"
      ]
    },
    {
      "name": "x-version",
      "type": "string",
      "description": "Schema version for tracking purposes - indicates which version of the Vyges Metadata Schema this metadata file conforms to. This should be the same across all metadata files using the same schema version.",
      "required": false,
      "examples": [
        "1.0.0",
        "2.0.0"
      ]
    },
    {
      "name": "version",
      "type": "string",
      "description": "Semantic version of this IP block (e.g. 1.2.3). This is the version of the actual IP block being described and is used for dependency resolution, downloading specific versions, and release management. Each IP block has its own independent version.",
      "required": false,
      "examples": [
        "1.0.0",
        "2.1.3"
      ]
    },
    {
      "name": "created",
      "type": "string",
      "description": "ISO 8601 timestamp when this IP was first created",
      "required": false,
      "examples": [
        "2024-01-15T10:30:00Z",
        "2023-12-01T09:15:00Z"
      ]
    },
    {
      "name": "updated",
      "type": "string",
      "description": "ISO 8601 timestamp when this IP was last updated",
      "required": false,
      "examples": [
        "2024-01-20T14:45:00Z",
        "2024-01-15T16:20:00Z"
      ]
    },
    {
      "name": "description",
      "type": "string",
      "description": "Short description of what the IP block does",
      "required": false,
      "examples": [
        "SPI master controller with configurable clock divider",
        "High-speed PCIe Gen4 PHY with encrypted RTL payload"
      ]
    },
    {
      "name": "license",
      "type": "string",
      "description": "SPDX-compatible license identifier (e.g., Apache-2.0, MIT, CERN-OHL-S)",
      "required": false,
      "examples": [
        "Apache-2.0",
        "MIT"
      ]
    },
    {
      "name": "maturity",
      "type": "string",
      "description": "Indicates readiness or lifecycle state of the IP",
      "required": false,
      "enum": [
        "prototype",
        "alpha",
        "beta",
        "production",
        "deprecated"
      ],
      "examples": [
        "production",
        "beta"
      ]
    },
    {
      "name": "automation",
      "type": "object",
      "description": "Automation requirements and capabilities",
      "required": false,
      "examples": [
        {
          "automation_level": "enhanced",
          "minimal_required": [
            "name",
            "version",
            "license",
            "interfaces",
            "template",
            "target",
            "design_type",
            "maturity",
            "description",
            "source",
            "asic",
            "fpga",
            "test",
            "flows"
          ],
          "recommended_for_automation": [
            "parameters",
            "dependencies",
            "toolRequirements",
            "performance",
            "reliability",
            "packaging",
            "community",
            "security"
          ],
          "security_policy": {
            "min_security_level": "medium",
            "require_assertions": true,
            "require_secure_testbench": true,
            "tag_high_risk_ips": true,
            "enforced_standards": [
              "iso_26262"
            ],
            "automated_checks": [
              "assertion_coverage",
              "fuzzing_tests"
            ]
          }
        },
        {
          "automation_level": "basic",
          "minimal_required": [
            "name",
            "version",
            "license",
            "interfaces",
            "template",
            "target",
            "design_type",
            "maturity",
            "description",
            "source",
            "asic",
            "fpga",
            "test",
            "flows"
          ],
          "recommended_for_automation": [
            "commercial",
            "compliance",
            "security"
          ],
          "blocking_issues": [
            "encrypted_ip",
            "requires_nda"
          ]
        }
      ],
      "children": [
        {
          "name": "minimal_required",
          "type": "array",
          "description": "Minimum fields required for basic automation",
          "required": false,
          "examples": [
            [
              "name",
              "version",
              "license",
              "interfaces",
              "template",
              "target",
              "design_type",
              "maturity",
              "description",
              "source",
              "asic",
              "fpga",
              "test",
              "flows"
            ]
          ]
        },
        {
          "name": "recommended_for_automation",
          "type": "array",
          "description": "Recommended fields for enhanced automation",
          "required": false,
          "examples": [
            [
              "parameters",
              "dependencies",
              "toolRequirements",
              "performance",
              "reliability",
              "packaging",
              "community",
              "security"
            ]
          ]
        },
        {
          "name": "automation_level",
          "type": "string",
          "description": "Level of automation support this IP provides",
          "required": false,
          "enum": [
            "basic",
            "enhanced",
            "full"
          ],
          "examples": [
            "basic",
            "enhanced"
          ]
        },
        {
          "name": "blocking_issues",
          "type": "array",
          "description": "Issues that prevent automation (e.g., missing source, encrypted IP)",
          "required": false,
          "examples": [
            [
              "encrypted_ip",
              "requires_nda"
            ],
            [
              "missing_source"
            ]
          ]
        },
        {
          "name": "security_policy",
          "type": "object",
          "description": "Project-wide security policy for automation",
          "required": false,
          "examples": [
            {
              "min_security_level": "medium",
              "require_assertions": true,
              "require_secure_testbench": true,
              "tag_high_risk_ips": true,
              "enforced_standards": [
                "iso_26262"
              ],
              "automated_checks": [
                "assertion_coverage",
                "fuzzing_tests"
              ]
            },
            {
              "min_security_level": "critical",
              "require_assertions": true,
              "require_secure_testbench": true,
              "require_formal_verification": true,
              "tag_high_risk_ips": true,
              "enforced_standards": [
                "fips_140",
                "nist_sp_800"
              ],
              "automated_checks": [
                "assertion_coverage",
                "fuzzing_tests",
                "formal_verification",
                "side_channel_analysis"
              ]
            }
          ],
          "children": [
            {
              "name": "min_security_level",
              "type": "string",
              "description": "Minimum security level required for all IPs in this project",
              "required": false,
              "enum": [
                "low",
                "medium",
                "high",
                "critical"
              ],
              "examples": [
                "medium",
                "high"
              ]
            },
            {
              "name": "require_assertions",
              "type": "boolean",
              "description": "Whether security assertions are required for all IPs",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "require_secure_testbench",
              "type": "boolean",
              "description": "Whether secure testbench generation is required",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "require_formal_verification",
              "type": "boolean",
              "description": "Whether formal verification is required for security properties",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "tag_high_risk_ips",
              "type": "boolean",
              "description": "Whether to automatically tag high-risk IPs",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "enforced_standards",
              "type": "array",
              "description": "Security standards that must be enforced",
              "required": false,
              "examples": [
                [
                  "iso_26262",
                  "iec_61508"
                ],
                [
                  "fips_140",
                  "nist_sp_800"
                ]
              ]
            },
            {
              "name": "automated_checks",
              "type": "array",
              "description": "Automated security checks to run",
              "required": false,
              "examples": [
                [
                  "assertion_coverage",
                  "fuzzing_tests",
                  "formal_verification"
                ],
                [
                  "side_channel_analysis",
                  "threat_modeling",
                  "compliance_check"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "maintainers",
      "type": "array",
      "description": "List of maintainers responsible for this IP block",
      "required": false,
      "examples": [
        [
          {
            "name": "Shivaram Mysore",
            "email": "shivaram@vyges.com",
            "github": "smysore"
          }
        ],
        [
          {
            "name": "John Doe",
            "email": "john.doe@acme.com",
            "github": "johndoe"
          },
          {
            "name": "Jane Smith",
            "github": "janesmith"
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name"
          ],
          "children": [
            {
              "name": "name",
              "type": "string",
              "description": "Full name of the maintainer",
              "required": false,
              "examples": [
                "Shivaram Mysore",
                "John Doe"
              ]
            },
            {
              "name": "email",
              "type": "string",
              "description": "Contact email address",
              "required": false,
              "examples": [
                "shivaram@vyges.com",
                "john.doe@acme.com"
              ]
            },
            {
              "name": "github",
              "type": "string",
              "description": "GitHub username for collaboration",
              "required": false,
              "examples": [
                "smysore",
                "johndoe"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "branding",
      "type": "object",
      "description": "Optional branding metadata for provider attribution.",
      "required": [
        "provider"
      ],
      "examples": [
        {
          "provider": "Vyges Inc.",
          "logo": "https://vyges.com/images/logo.svg",
          "website": "https://vyges.com",
          "usage": "Attribution only"
        },
        {
          "provider": "Acme Semiconductor",
          "website": "https://acme.com/ip/pcie-phy",
          "usage": "Contact for commercial use"
        }
      ],
      "children": [
        {
          "name": "provider",
          "type": "string",
          "description": "Name of the company, organization, or individual maintaining the IP.",
          "required": false,
          "examples": [
            "Vyges Inc.",
            "Acme Semiconductor"
          ]
        },
        {
          "name": "logo",
          "type": "string",
          "description": "URL to a logo image (SVG or PNG preferred).",
          "required": false,
          "examples": [
            "https://vyges.com/images/logo.svg",
            "https://acme.com/logo.png"
          ]
        },
        {
          "name": "website",
          "type": "string",
          "description": "Link to the official IP page or provider's site.",
          "required": false,
          "examples": [
            "https://vyges.com",
            "https://acme.com/ip/pcie-phy"
          ]
        },
        {
          "name": "usage",
          "type": "string",
          "description": "Optional note describing how branding may be used (e.g., attribution only).",
          "required": false,
          "examples": [
            "Attribution only",
            "Logo may be used in documentation"
          ]
        }
      ]
    },
    {
      "name": "template",
      "type": "string",
      "description": "Name and version of the template used (e.g., vyges-ip-template@1.0.0)",
      "required": false,
      "examples": [
        "vyges-ip-template@1.0.0"
      ]
    },
    {
      "name": "meta",
      "type": "object",
      "description": "Additional metadata for future extensibility",
      "required": false,
      "examples": [
        {
          "template": {
            "generator": "vyges-cli",
            "init_tool": "vyges-cli",
            "template_version": "1.0.0",
            "generated_at": "2024-01-15T10:30:00Z"
          },
          "generated_by": "vyges-cli",
          "schema": {
            "version": "1.0.0",
            "compatible_versions": [
              "1.0.0",
              "1.1.0"
            ],
            "generated_with": "vyges-cli"
          }
        }
      ],
      "children": [
        {
          "name": "template",
          "type": "object",
          "description": "Template-related metadata",
          "required": false,
          "examples": [
            {
              "generator": "vyges-cli",
              "init_tool": "vyges-cli",
              "template_version": "1.0.0",
              "generated_at": "2024-01-15T10:30:00Z"
            }
          ],
          "children": [
            {
              "name": "generator",
              "type": "string",
              "description": "Tool or service that generated this IP from the template",
              "required": false,
              "examples": [
                "vyges-cli",
                "cookiecutter"
              ]
            },
            {
              "name": "init_tool",
              "type": "string",
              "description": "Initialization tool used (e.g., vyges-cli, cookiecutter)",
              "required": false,
              "examples": [
                "vyges-cli",
                "cookiecutter"
              ]
            },
            {
              "name": "template_version",
              "type": "string",
              "description": "Version of the template when this IP was generated",
              "required": false,
              "examples": [
                "1.0.0",
                "2.1.0"
              ]
            },
            {
              "name": "generated_at",
              "type": "string",
              "description": "ISO 8601 timestamp when this IP was generated from the template",
              "required": false,
              "examples": [
                "2024-01-15T10:30:00Z",
                "2023-12-01T09:15:00Z"
              ]
            }
          ]
        },
        {
          "name": "generated_by",
          "type": "string",
          "description": "Tool or service that created this metadata file",
          "required": false,
          "examples": [
            "vyges-cli",
            "manual"
          ]
        },
        {
          "name": "schema",
          "type": "object",
          "description": "Schema version and compatibility information",
          "required": [
            "version"
          ],
          "examples": [
            {
              "version": "1.0.0",
              "compatible_versions": [
                "1.0.0",
                "1.1.0"
              ],
              "generated_with": "vyges-cli"
            }
          ],
          "children": [
            {
              "name": "version",
              "type": "string",
              "description": "Version of the vyges-metadata schema used",
              "required": false,
              "examples": [
                "1.0.0",
                "0.1.0"
              ]
            },
            {
              "name": "compatible_versions",
              "type": "array",
              "description": "List of compatible schema versions",
              "required": false,
              "examples": [
                [
                  "1.0.0",
                  "1.1.0"
                ],
                [
                  "0.1.0",
                  "0.2.0"
                ]
              ]
            },
            {
              "name": "generated_with",
              "type": "string",
              "description": "Tool that generated this metadata file",
              "required": false,
              "examples": [
                "vyges-cli",
                "json-schema-generator"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "source",
      "type": "object",
      "description": "Source code location and versioning information",
      "required": [
        "type",
        "url"
      ],
      "examples": [
        {
          "type": "git",
          "url": "https://github.com/vyges/spi-controller",
          "commit": "a1b2c3d",
          "private": false,
          "containsEncryptedPayload": false,
          "indexing": true
        },
        {
          "type": "git",
          "url": "https://github.com/acme/pcie-phy-encrypted",
          "private": true,
          "containsEncryptedPayload": true,
          "indexing": false
        }
      ],
      "children": [
        {
          "name": "type",
          "type": "string",
          "description": "Type of source reference",
          "required": false,
          "enum": [
            "git",
            "archive"
          ],
          "examples": [
            "git",
            "archive"
          ]
        },
        {
          "name": "url",
          "type": "string",
          "description": "URL to the source repository or archive",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller",
            "https://github.com/acme/pcie-phy-encrypted"
          ]
        },
        {
          "name": "commit",
          "type": "string",
          "description": "Git commit hash or version identifier",
          "required": false,
          "examples": [
            "a1b2c3d",
            "main"
          ]
        },
        {
          "name": "hash",
          "type": "string",
          "description": "SHA256 for archive-based sources",
          "required": false,
          "examples": [
            "sha256:abc123...",
            "sha256:def456..."
          ]
        },
        {
          "name": "private",
          "type": "boolean",
          "description": "Whether the repository is private or contains proprietary content",
          "required": false,
          "examples": [
            false,
            true
          ]
        },
        {
          "name": "containsEncryptedPayload",
          "type": "boolean",
          "description": "Whether the repository contains encrypted or proprietary IP",
          "required": false,
          "examples": [
            false,
            true
          ]
        },
        {
          "name": "indexing",
          "type": "boolean",
          "description": "Whether Vyges should index the repository contents",
          "required": false,
          "examples": [
            true,
            false
          ]
        }
      ]
    },
    {
      "name": "sourceFiles",
      "type": "array",
      "description": "List of source RTL files constituting the IP block.",
      "required": false,
      "examples": [
        {
          "path": "rtl/spi_controller.sv",
          "type": "rtl",
          "owner": "vyges-team",
          "version": "1.0.0",
          "license": "Apache-2.0",
          "block": "spi_core"
        },
        {
          "path": "rtl/third_party/uart_core.v",
          "type": "rtl",
          "owner": "acme-corp",
          "version": "2.1.0",
          "license": "MIT",
          "vendor": {
            "name": "ACME Corporation",
            "docs": [
              {
                "title": "UART Core Datasheet",
                "url": "https://acme.com/docs/uart-core-datasheet.pdf",
                "type": "datasheet"
              },
              {
                "title": "UART Core User Guide",
                "url": "https://acme.com/docs/uart-core-user-guide.pdf",
                "type": "user_guide"
              }
            ],
            "contact": {
              "email": "support@acme.com",
              "url": "https://acme.com/support"
            }
          },
          "block": "uart_interface"
        }
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "path",
            "type",
            "owner",
            "version",
            "license"
          ],
          "children": [
            {
              "name": "path",
              "type": "string",
              "description": "Relative path to the file.",
              "required": false
            },
            {
              "name": "type",
              "type": "string",
              "description": "File category.",
              "required": false,
              "enum": [
                "rtl",
                "testbench",
                "constraint",
                "doc",
                "header"
              ]
            },
            {
              "name": "owner",
              "type": "string",
              "description": "Maintainer or owner of this file.",
              "required": false
            },
            {
              "name": "version",
              "type": "string",
              "description": "Version or commit identifier of the file.",
              "required": false
            },
            {
              "name": "license",
              "type": "string",
              "description": "SPDX license identifier for this file.",
              "required": false
            },
            {
              "name": "vendor",
              "type": "object",
              "description": "Vendor information for the IP",
              "required": [
                "name"
              ],
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Name of the vendor or organization",
                  "required": false
                },
                {
                  "name": "docs",
                  "type": "array",
                  "description": "Documentation links from vendor.",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "title",
                        "url"
                      ],
                      "children": [
                        {
                          "name": "title",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "url",
                          "type": "string",
                          "description": "",
                          "required": false
                        },
                        {
                          "name": "type",
                          "type": "string",
                          "description": "",
                          "required": false,
                          "enum": [
                            "datasheet",
                            "user_guide",
                            "api_ref",
                            "app_note",
                            "reference_manual",
                            "integration_guide",
                            "other"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "contact",
                  "type": "object",
                  "description": "Contact information for vendor support",
                  "required": false,
                  "children": [
                    {
                      "name": "email",
                      "type": "string",
                      "description": "Primary support email address",
                      "required": false
                    },
                    {
                      "name": "url",
                      "type": "string",
                      "description": "Support page or contact form URL",
                      "required": false
                    },
                    {
                      "name": "phone",
                      "type": "string",
                      "description": "Support phone number (optional)",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "block",
              "type": "string",
              "description": "Logical block name or namespace this file belongs to. Used for organization and to avoid naming conflicts between different functional blocks within the same IP.",
              "required": false,
              "examples": [
                "spi_core",
                "uart_interface"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "interfaces",
      "type": "array",
      "description": "One or more external interfaces this IP exposes",
      "required": false,
      "examples": [
        [
          {
            "type": "bus",
            "direction": "input",
            "protocol": "APB",
            "width": 32,
            "signals": [
              {
                "name": "PCLK",
                "direction": "input",
                "type": "clock",
                "description": "APB clock signal"
              },
              {
                "name": "PRESETn",
                "direction": "input",
                "type": "reset",
                "active_level": "low",
                "description": "APB reset signal"
              }
            ]
          }
        ],
        [
          {
            "type": "chiplet",
            "direction": "inout",
            "protocol": "UCIe",
            "width": 64,
            "signals": [
              {
                "name": "ucie_clk",
                "direction": "input",
                "type": "clock",
                "description": "UCIe clock signal"
              },
              {
                "name": "ucie_rst_n",
                "direction": "input",
                "type": "reset",
                "active_level": "low",
                "description": "UCIe reset signal"
              },
              {
                "name": "ucie_tx_data",
                "direction": "output",
                "type": "data",
                "width": 64,
                "description": "UCIe transmit data"
              },
              {
                "name": "ucie_rx_data",
                "direction": "input",
                "type": "data",
                "width": 64,
                "description": "UCIe receive data"
              }
            ]
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "type"
          ],
          "children": [
            {
              "name": "type",
              "type": "string",
              "description": "Interface type category",
              "required": false,
              "enum": [
                "bus",
                "io",
                "interrupt",
                "clock",
                "reset",
                "chiplet"
              ],
              "examples": [
                "bus",
                "io"
              ]
            },
            {
              "name": "direction",
              "type": "string",
              "description": "Signal direction: input (to IP), output (from IP), or inout (bidirectional)",
              "required": false,
              "enum": [
                "input",
                "output",
                "inout"
              ],
              "examples": [
                "input",
                "output"
              ]
            },
            {
              "name": "protocol",
              "type": "string",
              "description": "Bus protocol name, e.g. AXI4-Lite, APB, TileLink",
              "required": false,
              "examples": [
                "APB",
                "AXI4-Lite"
              ]
            },
            {
              "name": "width",
              "type": "integer",
              "description": "Interface width in bits (for bus interfaces)",
              "required": false,
              "examples": [
                32,
                64
              ]
            },
            {
              "name": "signals",
              "type": "array",
              "description": "List of signals in this interface",
              "required": false,
              "children": [
                {
                  "name": "items",
                  "type": "object",
                  "description": "",
                  "required": [
                    "name",
                    "direction"
                  ],
                  "examples": [
                    {
                      "name": "PCLK",
                      "direction": "input",
                      "type": "clock",
                      "description": "APB clock signal"
                    },
                    {
                      "name": "PRESETn",
                      "direction": "input",
                      "type": "reset",
                      "active_level": "low",
                      "description": "APB reset signal"
                    }
                  ],
                  "children": [
                    {
                      "name": "name",
                      "type": "string",
                      "description": "Signal name as it appears in the RTL",
                      "required": false,
                      "examples": [
                        "PCLK",
                        "PRESETn"
                      ]
                    },
                    {
                      "name": "direction",
                      "type": "string",
                      "description": "Signal direction relative to the IP block",
                      "required": false,
                      "enum": [
                        "input",
                        "output",
                        "inout"
                      ],
                      "examples": [
                        "input",
                        "output"
                      ]
                    },
                    {
                      "name": "width",
                      "type": "integer",
                      "description": "Signal width in bits (1 for single-bit signals)",
                      "required": false,
                      "examples": [
                        1,
                        8
                      ]
                    },
                    {
                      "name": "type",
                      "type": "string",
                      "description": "Signal category for better understanding",
                      "required": false,
                      "enum": [
                        "data",
                        "control",
                        "clock",
                        "reset",
                        "interrupt",
                        "status"
                      ],
                      "examples": [
                        "clock",
                        "reset"
                      ]
                    },
                    {
                      "name": "description",
                      "type": "string",
                      "description": "Human-readable description of the signal's purpose",
                      "required": false,
                      "examples": [
                        "APB clock signal",
                        "APB reset signal"
                      ]
                    },
                    {
                      "name": "active_level",
                      "type": "string",
                      "description": "Active level for control signals (e.g., reset, enable)",
                      "required": false,
                      "enum": [
                        "high",
                        "low"
                      ],
                      "examples": [
                        "high",
                        "low"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "parameters",
      "type": "array",
      "description": "Parameterizable configuration fields",
      "required": false,
      "examples": [
        [
          {
            "name": "CLOCK_DIV",
            "type": "int",
            "default": 8,
            "description": "Clock divider for SPI clock generation",
            "range": {
              "min": 2,
              "max": 256
            },
            "units": "cycles",
            "required": false
          },
          {
            "name": "DATA_WIDTH",
            "type": "int",
            "default": 8,
            "description": "Data width for SPI transactions",
            "range": {
              "min": 1,
              "max": 32
            },
            "units": "bits",
            "required": true
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name",
            "type"
          ],
          "examples": [
            {
              "name": "CLOCK_DIV",
              "type": "int",
              "default": 8,
              "description": "Clock divider for SPI clock generation",
              "range": {
                "min": 2,
                "max": 256
              },
              "units": "cycles",
              "required": false
            },
            {
              "name": "DATA_WIDTH",
              "type": "int",
              "default": 8,
              "description": "Data width for SPI transactions",
              "range": {
                "min": 1,
                "max": 32
              },
              "units": "bits",
              "required": true
            }
          ],
          "children": [
            {
              "name": "name",
              "type": "string",
              "description": "Parameter name as used in the RTL",
              "required": false,
              "examples": [
                "CLOCK_DIV",
                "DATA_WIDTH"
              ]
            },
            {
              "name": "type",
              "type": "string",
              "description": "Parameter data type",
              "required": false,
              "enum": [
                "int",
                "bool",
                "string",
                "real"
              ],
              "examples": [
                "int",
                "bool"
              ]
            },
            {
              "name": "default",
              "type": "object",
              "description": "Default value for the parameter",
              "required": false,
              "examples": [
                8,
                true
              ]
            },
            {
              "name": "description",
              "type": "string",
              "description": "Human-readable description of the parameter's purpose",
              "required": false,
              "examples": [
                "Clock divider for SPI clock generation",
                "Enable advanced features"
              ]
            },
            {
              "name": "range",
              "type": "object",
              "description": "Valid range for the parameter",
              "required": false,
              "examples": [
                {
                  "min": 2,
                  "max": 256,
                  "step": 1
                },
                {
                  "min": 0,
                  "max": 100
                }
              ],
              "children": [
                {
                  "name": "min",
                  "type": "object",
                  "description": "Minimum allowed value",
                  "required": false,
                  "examples": [
                    2,
                    0
                  ]
                },
                {
                  "name": "max",
                  "type": "object",
                  "description": "Maximum allowed value",
                  "required": false,
                  "examples": [
                    256,
                    100
                  ]
                },
                {
                  "name": "step",
                  "type": "object",
                  "description": "Step size for numeric parameters",
                  "required": false,
                  "examples": [
                    1,
                    0.1
                  ]
                }
              ]
            },
            {
              "name": "units",
              "type": "string",
              "description": "Units for the parameter (e.g., MHz, bits, cycles)",
              "required": false,
              "examples": [
                "cycles",
                "bits"
              ]
            },
            {
              "name": "required",
              "type": "boolean",
              "description": "Whether this parameter is required",
              "required": false,
              "examples": [
                true,
                false
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "verification",
      "type": "object",
      "description": "Legacy verification metadata (use 'test' and 'flows' sections instead)",
      "required": false,
      "examples": [
        {
          "testbenches": [
            "test_spi_controller.py"
          ],
          "framework": "cocotb",
          "coverage": {
            "lines": 95,
            "branches": 88
          },
          "formal": {
            "tools": [
              "yosys-smtbmc"
            ],
            "status": "passed"
          }
        }
      ],
      "children": [
        {
          "name": "testbenches",
          "type": "array",
          "description": "List of testbench files or frameworks",
          "required": false,
          "examples": [
            [
              "test_spi_controller.py",
              "test_apb_interface.py"
            ],
            [
              "tb_spi.v"
            ]
          ]
        },
        {
          "name": "framework",
          "type": "string",
          "description": "Test framework used (e.g., cocotb, UVM)",
          "required": false,
          "examples": [
            "cocotb",
            "UVM"
          ]
        },
        {
          "name": "coverage",
          "type": "object",
          "description": "Code coverage metrics",
          "required": false,
          "examples": [
            {
              "lines": 95,
              "branches": 88
            },
            {
              "lines": 100,
              "branches": 100
            }
          ],
          "children": [
            {
              "name": "lines",
              "type": "number",
              "description": "Line coverage percentage",
              "required": false,
              "examples": [
                95,
                88
              ]
            },
            {
              "name": "branches",
              "type": "number",
              "description": "Branch coverage percentage",
              "required": false,
              "examples": [
                88,
                92
              ]
            }
          ]
        },
        {
          "name": "formal",
          "type": "object",
          "description": "Formal verification results",
          "required": false,
          "examples": [
            {
              "tools": [
                "yosys-smtbmc",
                "sby"
              ],
              "status": "passed"
            },
            {
              "tools": [
                "jtag"
              ],
              "status": "partial"
            }
          ],
          "children": [
            {
              "name": "tools",
              "type": "array",
              "description": "List of formal verification tools used",
              "required": false,
              "examples": [
                [
                  "yosys-smtbmc",
                  "sby"
                ],
                [
                  "jtag",
                  "symbiyosys"
                ]
              ]
            },
            {
              "name": "status",
              "type": "string",
              "description": "Formal verification status",
              "required": false,
              "enum": [
                "passed",
                "partial",
                "failed",
                "untested"
              ],
              "examples": [
                "passed",
                "partial"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "test",
      "type": "object",
      "description": "Testing and verification status information",
      "required": [
        "status"
      ],
      "examples": [
        {
          "coverage": true,
          "testbenches": [
            "cocotb"
          ],
          "simulators": [
            "verilator"
          ],
          "status": "passing"
        },
        {
          "testbenches": [
            "UVM"
          ],
          "simulators": [
            "VCS"
          ],
          "status": "partial"
        }
      ],
      "children": [
        {
          "name": "coverage",
          "type": "boolean",
          "description": "Whether code coverage is enabled for this IP",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "testbenches",
          "type": "array",
          "description": "List of testbench frameworks used (e.g., cocotb, UVM, SystemVerilog)",
          "required": false,
          "examples": [
            [
              "cocotb"
            ],
            [
              "UVM",
              "SystemVerilog"
            ]
          ]
        },
        {
          "name": "simulators",
          "type": "array",
          "description": "List of simulators used for testing (e.g., verilator, iverilog, ModelSim)",
          "required": false,
          "examples": [
            [
              "verilator"
            ],
            [
              "iverilog",
              "ModelSim"
            ]
          ]
        },
        {
          "name": "status",
          "type": "string",
          "description": "Overall test status",
          "required": false,
          "enum": [
            "passing",
            "failing",
            "partial",
            "untested"
          ],
          "examples": [
            "passing",
            "partial"
          ]
        }
      ]
    },
    {
      "name": "flows",
      "type": "object",
      "description": "Design flow verification status for different tools and processes",
      "required": false,
      "examples": [
        {
          "verilator": {
            "status": "verified"
          },
          "openlane": {
            "pdks": [
              "sky130B",
              "gf180mcuC",
              "ihp-sg13g2"
            ],
            "status": "tested"
          },
          "vivado": {
            "status": "verified"
          }
        },
        {
          "verilator": {
            "status": "partial"
          },
          "openlane": {
            "pdks": [
              "sky130B"
            ],
            "status": "partial"
          }
        }
      ],
      "children": [
        {
          "name": "verilator",
          "type": "object",
          "description": "",
          "required": [
            "status"
          ],
          "examples": [
            {
              "status": "verified"
            },
            {
              "status": "partial"
            }
          ],
          "children": [
            {
              "name": "status",
              "type": "string",
              "description": "Verilator simulation and linting status",
              "required": false,
              "enum": [
                "verified",
                "partial",
                "failed",
                "untested"
              ],
              "examples": [
                "verified",
                "partial"
              ]
            }
          ]
        },
        {
          "name": "openlane",
          "type": "object",
          "description": "",
          "required": [
            "status"
          ],
          "examples": [
            {
              "pdks": [
                "sky130B",
                "gf180mcuC",
                "ihp-sg13g2"
              ],
              "status": "tested"
            },
            {
              "pdks": [
                "sky130B"
              ],
              "status": "partial"
            }
          ],
          "children": [
            {
              "name": "pdks",
              "type": "array",
              "description": "List of PDKs tested with OpenLane (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
              "required": false,
              "examples": [
                [
                  "sky130B",
                  "gf180mcuC"
                ],
                [
                  "sky130B"
                ]
              ]
            },
            {
              "name": "status",
              "type": "string",
              "description": "OpenLane synthesis and place-and-route status",
              "required": false,
              "enum": [
                "tested",
                "partial",
                "failed",
                "untested"
              ],
              "examples": [
                "tested",
                "partial"
              ]
            }
          ]
        },
        {
          "name": "vivado",
          "type": "object",
          "description": "",
          "required": [
            "status"
          ],
          "examples": [
            {
              "status": "verified"
            },
            {
              "status": "partial"
            }
          ],
          "children": [
            {
              "name": "status",
              "type": "string",
              "description": "Xilinx Vivado synthesis and implementation status",
              "required": false,
              "enum": [
                "verified",
                "partial",
                "failed",
                "untested"
              ],
              "examples": [
                "verified",
                "partial"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "tools",
      "type": "object",
      "description": "Comprehensive tool categorization for different design flows and security testing",
      "required": false,
      "examples": [
        {
          "asic": {
            "open_source": {
              "synthesis": [
                "yosys"
              ],
              "place_route": [
                "openroad"
              ],
              "verification": [
                "verilator"
              ],
              "formal": [
                "yosys-smtbmc"
              ],
              "security": [
                "custom_python",
                "numpy"
              ],
              "layout": [
                "magic"
              ],
              "drc_lvs": [
                "magic"
              ]
            },
            "commercial": {
              "synthesis": [],
              "place_route": [],
              "verification": [],
              "formal": [],
              "security": [],
              "layout": [],
              "drc_lvs": []
            }
          },
          "fpga": {
            "open_source": {
              "synthesis": [
                "yosys"
              ],
              "place_route": [
                "nextpnr"
              ],
              "verification": [
                "verilator"
              ],
              "formal": [
                "yosys-smtbmc"
              ],
              "security": [
                "custom_python"
              ],
              "programming": [
                "openfpgaloader"
              ]
            },
            "commercial": {
              "synthesis": [],
              "place_route": [],
              "verification": [],
              "formal": [],
              "security": [],
              "programming": []
            }
          }
        }
      ],
      "children": [
        {
          "name": "asic",
          "type": "object",
          "description": "ASIC design and verification tools",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source ASIC tools",
              "required": false,
              "children": [
                {
                  "name": "synthesis",
                  "type": "array",
                  "description": "Open-source synthesis tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys",
                      "abc"
                    ],
                    [
                      "yosys"
                    ]
                  ]
                },
                {
                  "name": "place_route",
                  "type": "array",
                  "description": "Open-source place and route tools",
                  "required": false,
                  "examples": [
                    [
                      "openroad",
                      "tritonroute"
                    ],
                    [
                      "openroad"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Open-source verification tools",
                  "required": false,
                  "examples": [
                    [
                      "verilator",
                      "iverilog"
                    ],
                    [
                      "verilator"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Open-source formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys-smtbmc",
                      "sby",
                      "symbiyosys"
                    ],
                    [
                      "yosys-smtbmc"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Open-source security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy",
                      "scipy"
                    ],
                    [
                      "chipwhisperer"
                    ]
                  ]
                },
                {
                  "name": "layout",
                  "type": "array",
                  "description": "Open-source layout tools",
                  "required": false,
                  "examples": [
                    [
                      "magic",
                      "klayout"
                    ],
                    [
                      "magic"
                    ]
                  ]
                },
                {
                  "name": "drc_lvs",
                  "type": "array",
                  "description": "Open-source DRC/LVS tools",
                  "required": false,
                  "examples": [
                    [
                      "magic",
                      "netgen"
                    ],
                    [
                      "magic"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial ASIC tools",
              "required": false,
              "children": [
                {
                  "name": "synthesis",
                  "type": "array",
                  "description": "Commercial synthesis tools",
                  "required": false,
                  "examples": [
                    [
                      "design_compiler",
                      "synplify"
                    ],
                    [
                      "design_compiler"
                    ]
                  ]
                },
                {
                  "name": "place_route",
                  "type": "array",
                  "description": "Commercial place and route tools",
                  "required": false,
                  "examples": [
                    [
                      "ic_compiler",
                      "innovus"
                    ],
                    [
                      "ic_compiler"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Commercial verification tools",
                  "required": false,
                  "examples": [
                    [
                      "vcs",
                      "xcelium",
                      "questa"
                    ],
                    [
                      "vcs"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Commercial formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "onespin",
                      "jasper",
                      "vc_formal"
                    ],
                    [
                      "onespin"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Commercial security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rambus_dpa"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                },
                {
                  "name": "layout",
                  "type": "array",
                  "description": "Commercial layout tools",
                  "required": false,
                  "examples": [
                    [
                      "virtuoso",
                      "laker"
                    ],
                    [
                      "virtuoso"
                    ]
                  ]
                },
                {
                  "name": "drc_lvs",
                  "type": "array",
                  "description": "Commercial DRC/LVS tools",
                  "required": false,
                  "examples": [
                    [
                      "calibre",
                      "hercules"
                    ],
                    [
                      "calibre"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "fpga",
          "type": "object",
          "description": "FPGA design and verification tools",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source FPGA tools",
              "required": false,
              "children": [
                {
                  "name": "synthesis",
                  "type": "array",
                  "description": "Open-source FPGA synthesis tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys",
                      "nextpnr"
                    ],
                    [
                      "yosys"
                    ]
                  ]
                },
                {
                  "name": "place_route",
                  "type": "array",
                  "description": "Open-source FPGA place and route tools",
                  "required": false,
                  "examples": [
                    [
                      "nextpnr",
                      "vpr"
                    ],
                    [
                      "nextpnr"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Open-source FPGA verification tools",
                  "required": false,
                  "examples": [
                    [
                      "verilator",
                      "iverilog"
                    ],
                    [
                      "verilator"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Open-source FPGA formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys-smtbmc",
                      "sby"
                    ],
                    [
                      "yosys-smtbmc"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Open-source FPGA security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy"
                    ],
                    [
                      "chipwhisperer"
                    ]
                  ]
                },
                {
                  "name": "programming",
                  "type": "array",
                  "description": "Open-source FPGA programming tools",
                  "required": false,
                  "examples": [
                    [
                      "openfpgaloader",
                      "fujprog"
                    ],
                    [
                      "openfpgaloader"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial FPGA tools",
              "required": false,
              "children": [
                {
                  "name": "synthesis",
                  "type": "array",
                  "description": "Commercial FPGA synthesis tools",
                  "required": false,
                  "examples": [
                    [
                      "vivado",
                      "quartus"
                    ],
                    [
                      "vivado"
                    ]
                  ]
                },
                {
                  "name": "place_route",
                  "type": "array",
                  "description": "Commercial FPGA place and route tools",
                  "required": false,
                  "examples": [
                    [
                      "vivado",
                      "quartus"
                    ],
                    [
                      "vivado"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Commercial FPGA verification tools",
                  "required": false,
                  "examples": [
                    [
                      "modelsim",
                      "questa"
                    ],
                    [
                      "modelsim"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Commercial FPGA formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "questa_formal",
                      "jasper"
                    ],
                    [
                      "questa_formal"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Commercial FPGA security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rohde_schwarz"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                },
                {
                  "name": "programming",
                  "type": "array",
                  "description": "Commercial FPGA programming tools",
                  "required": false,
                  "examples": [
                    [
                      "vivado",
                      "quartus"
                    ],
                    [
                      "vivado"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "chiplet",
          "type": "object",
          "description": "Chiplet design and verification tools",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source chiplet tools",
              "required": false,
              "children": [
                {
                  "name": "design",
                  "type": "array",
                  "description": "Open-source chiplet design tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys",
                      "openroad"
                    ],
                    [
                      "yosys"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Open-source chiplet verification tools",
                  "required": false,
                  "examples": [
                    [
                      "verilator",
                      "cocotb"
                    ],
                    [
                      "verilator"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Open-source chiplet formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "yosys-smtbmc",
                      "sby"
                    ],
                    [
                      "yosys-smtbmc"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Open-source chiplet security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy"
                    ],
                    [
                      "chipwhisperer"
                    ]
                  ]
                },
                {
                  "name": "integration",
                  "type": "array",
                  "description": "Open-source chiplet integration tools",
                  "required": false,
                  "examples": [
                    [
                      "openroad",
                      "magic"
                    ],
                    [
                      "openroad"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial chiplet tools",
              "required": false,
              "children": [
                {
                  "name": "design",
                  "type": "array",
                  "description": "Commercial chiplet design tools",
                  "required": false,
                  "examples": [
                    [
                      "innovus",
                      "virtuoso"
                    ],
                    [
                      "innovus"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Commercial chiplet verification tools",
                  "required": false,
                  "examples": [
                    [
                      "vcs",
                      "questa"
                    ],
                    [
                      "vcs"
                    ]
                  ]
                },
                {
                  "name": "formal",
                  "type": "array",
                  "description": "Commercial chiplet formal verification tools",
                  "required": false,
                  "examples": [
                    [
                      "onespin",
                      "jasper"
                    ],
                    [
                      "onespin"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Commercial chiplet security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rambus_dpa"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                },
                {
                  "name": "integration",
                  "type": "array",
                  "description": "Commercial chiplet integration tools",
                  "required": false,
                  "examples": [
                    [
                      "innovus",
                      "virtuoso"
                    ],
                    [
                      "innovus"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "analog",
          "type": "object",
          "description": "Analog design and verification tools",
          "required": false,
          "children": [
            {
              "name": "open_source",
              "type": "object",
              "description": "Open-source analog tools",
              "required": false,
              "children": [
                {
                  "name": "schematic",
                  "type": "array",
                  "description": "Open-source schematic capture tools",
                  "required": false,
                  "examples": [
                    [
                      "xschem",
                      "kicad"
                    ],
                    [
                      "xschem"
                    ]
                  ]
                },
                {
                  "name": "simulation",
                  "type": "array",
                  "description": "Open-source analog simulation tools",
                  "required": false,
                  "examples": [
                    [
                      "ngspice",
                      "xyce"
                    ],
                    [
                      "ngspice"
                    ]
                  ]
                },
                {
                  "name": "layout",
                  "type": "array",
                  "description": "Open-source analog layout tools",
                  "required": false,
                  "examples": [
                    [
                      "magic",
                      "klayout"
                    ],
                    [
                      "magic"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Open-source analog verification tools",
                  "required": false,
                  "examples": [
                    [
                      "ngspice",
                      "custom_python"
                    ],
                    [
                      "ngspice"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Open-source analog security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy"
                    ],
                    [
                      "chipwhisperer"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "commercial",
              "type": "object",
              "description": "Commercial analog tools",
              "required": false,
              "children": [
                {
                  "name": "schematic",
                  "type": "array",
                  "description": "Commercial schematic capture tools",
                  "required": false,
                  "examples": [
                    [
                      "virtuoso",
                      "composer"
                    ],
                    [
                      "virtuoso"
                    ]
                  ]
                },
                {
                  "name": "simulation",
                  "type": "array",
                  "description": "Commercial analog simulation tools",
                  "required": false,
                  "examples": [
                    [
                      "spectre",
                      "hspice",
                      "ams_designer"
                    ],
                    [
                      "spectre"
                    ]
                  ]
                },
                {
                  "name": "layout",
                  "type": "array",
                  "description": "Commercial analog layout tools",
                  "required": false,
                  "examples": [
                    [
                      "virtuoso",
                      "laker"
                    ],
                    [
                      "virtuoso"
                    ]
                  ]
                },
                {
                  "name": "verification",
                  "type": "array",
                  "description": "Commercial analog verification tools",
                  "required": false,
                  "examples": [
                    [
                      "spectre",
                      "ams_designer"
                    ],
                    [
                      "spectre"
                    ]
                  ]
                },
                {
                  "name": "security",
                  "type": "array",
                  "description": "Commercial analog security testing tools",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rohde_schwarz"
                    ],
                    [
                      "secure_ic"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "toolchain_support",
      "type": "array",
      "description": "List of EDA tools or simulators this IP has been tested with (legacy field)",
      "required": false,
      "examples": [
        [
          "verilator",
          "yosys"
        ],
        [
          "VCS",
          "Design Compiler"
        ]
      ]
    },
    {
      "name": "target_pdks",
      "type": "array",
      "description": "PDKs this IP has been validated against (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
      "required": false,
      "examples": [
        [
          "sky130B",
          "gf180mcuC"
        ],
        [
          "sky130B"
        ]
      ]
    },
    {
      "name": "integration",
      "type": "object",
      "description": "Integration examples and wrappers",
      "required": false,
      "examples": [
        {
          "examples": [
            {
              "target": "simulation",
              "wrapper": "examples/spi_wrapper.v",
              "tb": "examples/spi_tb.v"
            },
            {
              "target": "fpga",
              "wrapper": "examples/fpga_wrapper.v",
              "tb": "test/spi_integration_tb.py"
            }
          ]
        }
      ],
      "children": [
        {
          "name": "examples",
          "type": "array",
          "description": "List of integration examples",
          "required": false,
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": false,
              "examples": [
                {
                  "target": "simulation",
                  "wrapper": "examples/spi_wrapper.v",
                  "tb": "examples/spi_tb.v"
                },
                {
                  "target": "fpga",
                  "wrapper": "examples/fpga_wrapper.v",
                  "tb": "test/spi_integration_tb.py"
                }
              ],
              "children": [
                {
                  "name": "target",
                  "type": "string",
                  "description": "Target platform for the example",
                  "required": false,
                  "enum": [
                    "simulation",
                    "fpga",
                    "asic"
                  ],
                  "examples": [
                    "simulation",
                    "fpga"
                  ]
                },
                {
                  "name": "wrapper",
                  "type": "string",
                  "description": "Path to wrapper file or module name",
                  "required": false,
                  "examples": [
                    "examples/spi_wrapper.v",
                    "examples/fpga_wrapper.v"
                  ]
                },
                {
                  "name": "tb",
                  "type": "string",
                  "description": "Path to testbench file",
                  "required": false,
                  "examples": [
                    "examples/spi_tb.v",
                    "test/spi_integration_tb.py"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "trust_profile",
      "type": "object",
      "description": "Security and trust indicators for the IP",
      "required": false,
      "examples": [
        {
          "reproducible_build": true,
          "fuzzed": true,
          "lint_clean": true,
          "signed": false
        },
        {
          "reproducible_build": true,
          "lint_clean": true,
          "fuzzed": false,
          "signed": true
        }
      ],
      "children": [
        {
          "name": "reproducible_build",
          "type": "boolean",
          "description": "Whether the build is reproducible from source",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "fuzzed",
          "type": "boolean",
          "description": "Whether the IP has been fuzz tested",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "lint_clean",
          "type": "boolean",
          "description": "Whether the IP passes linting checks",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "signed",
          "type": "boolean",
          "description": "Whether the IP is cryptographically signed",
          "required": false,
          "examples": [
            true,
            false
          ]
        }
      ]
    },
    {
      "name": "tags",
      "type": "array",
      "description": "Searchable tags for categorizing and discovering the IP",
      "required": false,
      "examples": [
        [
          "spi",
          "controller",
          "apb",
          "master"
        ],
        [
          "pcie",
          "phy",
          "encrypted",
          "mixed-signal"
        ]
      ]
    },
    {
      "name": "keywords",
      "type": "array",
      "description": "Keywords for search and discovery",
      "required": false,
      "examples": [
        [
          "serial",
          "protocol",
          "master",
          "slave",
          "communication"
        ],
        [
          "high-speed",
          "phy",
          "gen4",
          "encrypted"
        ]
      ]
    },
    {
      "name": "registry",
      "type": "object",
      "description": "Registry information for catalog discovery and management",
      "required": false,
      "examples": [
        {
          "status": "approved",
          "submission_date": "2024-01-15T10:30:00Z",
          "approval_date": "2024-01-16T14:20:00Z",
          "verified_by": "vyges-team",
          "registry_id": "spi-controller-v1",
          "compliance_check": {
            "status": "passing",
            "last_checked": "2024-01-16T14:20:00Z",
            "checker_version": "1.0.0",
            "issues": []
          }
        },
        {
          "status": "draft",
          "registry_id": "pcie-phy-v3"
        }
      ],
      "children": [
        {
          "name": "status",
          "type": "string",
          "description": "Current status in the registry approval process",
          "required": false,
          "enum": [
            "draft",
            "submitted",
            "approved",
            "rejected",
            "deprecated"
          ],
          "examples": [
            "draft",
            "submitted"
          ]
        },
        {
          "name": "submission_date",
          "type": "string",
          "description": "ISO 8601 timestamp when this IP was submitted to the registry",
          "required": false,
          "examples": [
            "2024-01-15T10:30:00Z",
            "2024-01-16T14:20:00Z"
          ]
        },
        {
          "name": "approval_date",
          "type": "string",
          "description": "ISO 8601 timestamp when this IP was approved for the registry",
          "required": false,
          "examples": [
            "2024-01-16T14:20:00Z",
            "2024-01-17T09:15:00Z"
          ]
        },
        {
          "name": "verified_by",
          "type": "string",
          "description": "GitHub username of the person who verified this IP for registry inclusion",
          "required": false,
          "examples": [
            "vyges-team",
            "smysore"
          ]
        },
        {
          "name": "registry_id",
          "type": "string",
          "description": "Unique identifier for this IP in the registry (auto-generated if not provided)",
          "required": false,
          "examples": [
            "spi-controller-v1",
            "pcie-phy-v3"
          ]
        },
        {
          "name": "compliance_check",
          "type": "object",
          "description": "Compliance validation results",
          "required": false,
          "examples": [
            {
              "status": "passing",
              "last_checked": "2024-01-16T14:20:00Z",
              "checker_version": "1.0.0",
              "issues": []
            },
            {
              "status": "failing",
              "last_checked": "2024-01-15T16:30:00Z",
              "checker_version": "0.9.5",
              "issues": [
                "missing_description",
                "invalid_license"
              ]
            }
          ],
          "children": [
            {
              "name": "status",
              "type": "string",
              "description": "Current compliance status",
              "required": false,
              "enum": [
                "pending",
                "passing",
                "failing"
              ],
              "examples": [
                "pending",
                "passing"
              ]
            },
            {
              "name": "last_checked",
              "type": "string",
              "description": "ISO 8601 timestamp of last compliance check",
              "required": false,
              "examples": [
                "2024-01-16T14:20:00Z",
                "2024-01-15T16:30:00Z"
              ]
            },
            {
              "name": "checker_version",
              "type": "string",
              "description": "Version of compliance checker used",
              "required": false,
              "examples": [
                "1.0.0",
                "0.9.5"
              ]
            },
            {
              "name": "issues",
              "type": "array",
              "description": "List of compliance issues found",
              "required": false,
              "examples": [
                [],
                [
                  "missing_description",
                  "invalid_license"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "categories",
      "type": "array",
      "description": "Catalog categories and subcategories for IP classification",
      "required": false,
      "examples": [
        [
          {
            "main_category": "Interface Controllers",
            "sub_category": "Serial Interfaces",
            "description": "SPI master controller for serial communication"
          }
        ],
        [
          {
            "main_category": "Signal Processing",
            "sub_category": "Transforms",
            "description": "Fast Fourier Transform implementation"
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "main_category"
          ],
          "children": [
            {
              "name": "main_category",
              "type": "string",
              "description": "Primary functional category for the IP block",
              "required": false,
              "enum": [
                "Analog & Mixed-Signal",
                "Arithmetic Units",
                "Base Libraries",
                "Chiplet Integration",
                "Control Logic",
                "Converters",
                "Interface Controllers",
                "Memory Subsystems",
                "Miscellaneous",
                "Processing Cores",
                "Security IP",
                "Signal Processing",
                "Timing & Clocking",
                "Verification & Testing"
              ]
            },
            {
              "name": "sub_category",
              "type": "string",
              "description": "Secondary subcategory within the main category. Bandgap References: Voltage reference circuits. Comparators: Analog voltage comparators. Oscillators: Clock generation circuits. Temperature Sensors: Temperature sensing circuits. Voltage Regulators: Power management circuits. Basic: Basic arithmetic operations. Custom DSP Cores: Digital signal processing cores. Fixed-Point: Fixed-point arithmetic units. Floating-Point: Floating-point arithmetic units. Vector: Vector processing units. Arbiters: Bus arbitration logic. Counters & Timers: Counting and timing circuits. Crossbars: Crossbar switches. Decoders: Address and data decoders. Flip-Flops & Latches: Sequential logic elements. Muxes & Demuxes: Multiplexers and demultiplexers. Pipeline & Bypass Logic: Pipeline control logic. Priority Encoders: Priority encoding logic. Synchronizers: Clock domain crossing synchronizers. AIB Interfaces: Advanced Interface Bus. BoW Interfaces: Bunch of Wires interfaces. Die-to-Die Protocol IP: Die-to-die communication protocols. Interposer Models: Interposer design models. UCIe Interfaces: Universal Chiplet Interconnect Express. Chiplet Wrappers: Chiplet integration wrappers. Interrupt Controllers: Interrupt handling logic. Power Management Units: Power control and management. Reset & Clock Control: Reset and clock management. Sequencers: State sequencing logic. State Machines: Finite state machines. ADC: Analog-to-Digital Converters. Clock Domain Crossers: Clock domain crossing circuits. DAC: Digital-to-Analog Converters. Level Shifters: Voltage level conversion circuits. High-Speed Interfaces: High-speed communication interfaces. Parallel Interfaces: Parallel bus interfaces. Serial Interfaces: Serial communication interfaces. Cache Subsystems: Cache memory controllers. DRAM Controllers: DRAM memory controllers. FIFOs & Buffers: First-in-first-out buffers. Flash Interfaces: Flash memory interfaces. Register Files: Register file memories. SRAM Controllers: SRAM memory controllers. Custom Accelerators: Application-specific accelerators. IP Wrappers & Glue Logic: IP integration logic. LED Controllers: Light-emitting diode controllers. PWM Generators: Pulse-width modulation generators. Watchdog Timers: System watchdog timers. ARM-Compatible: ARM architecture compatible cores. Co-Processors: Co-processing units. Custom ISAs: Custom instruction set architectures. Microcontrollers: Microcontroller cores. RISC-V: RISC-V architecture cores. Vector Processors: Vector processing units. Crypto Engines: Cryptographic processing engines. Fuse Controllers: Fuse programming controllers. Secure Boot Blocks: Secure boot implementation. Tamper Detection: Tamper detection circuits. True Random Number Generators (TRNG): Random number generation. Codecs: Audio/video codecs. Filters: Digital filters. Transforms: Mathematical transforms. Clock Gating: Clock gating logic. Clock Tree Models: Clock distribution models. DLL: Delay-locked loops. Frequency Dividers: Clock frequency dividers. PLL: Phase-locked loops. Assertions: Verification assertions. Driver/Monitor Agents: Testbench agents. Formal Models: Formal verification models. Scoreboards: Verification scoreboards. Testbenches: Testbench infrastructure.",
              "required": false
            },
            {
              "name": "description",
              "type": "string",
              "description": "Optional description of why this category applies to the IP",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "name": "dependencies",
      "type": "array",
      "description": "List of other IP blocks or libraries this IP depends on",
      "required": false,
      "examples": [
        [
          {
            "name": "openhw/apb-bridge",
            "version": "^1.0.0",
            "type": "ip",
            "license": "CERN-OHL-S",
            "source": {
              "type": "git",
              "url": "https://github.com/openhwgroup/apb-bridge",
              "commit": "a1b2c3d"
            },
            "autoFetch": true,
            "attribution": "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S."
          }
        ],
        [
          {
            "name": "pulp-platform/common_cells",
            "version": ">=1.0.0",
            "type": "library",
            "optional": true,
            "license": "Apache-2.0"
          },
          {
            "name": "lowrisc/prim",
            "version": "~1.0.0",
            "type": "ip",
            "license": "Apache-2.0",
            "source": {
              "type": "git",
              "url": "https://github.com/lowrisc/opentitan",
              "commit": "main"
            }
          }
        ]
      ],
      "children": [
        {
          "name": "items",
          "type": "object",
          "description": "",
          "required": [
            "name",
            "version"
          ],
          "examples": [
            {
              "name": "openhw/apb-bridge",
              "version": "^1.0.0",
              "type": "ip",
              "license": "CERN-OHL-S",
              "source": {
                "type": "git",
                "url": "https://github.com/openhwgroup/apb-bridge",
                "commit": "a1b2c3d"
              },
              "autoFetch": true,
              "attribution": "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S."
            },
            {
              "name": "pulp-platform/common_cells",
              "version": ">=1.0.0",
              "type": "library",
              "optional": true,
              "license": "Apache-2.0"
            }
          ],
          "children": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of the dependent IP or library",
              "required": false,
              "examples": [
                "openhw/apb-bridge",
                "pulp-platform/common_cells"
              ]
            },
            {
              "name": "version",
              "type": "string",
              "description": "Required version range (e.g., ^1.2.0, >=2.0.0)",
              "required": false,
              "examples": [
                "^1.0.0",
                ">=2.0.0"
              ]
            },
            {
              "name": "type",
              "type": "string",
              "description": "Type of dependency",
              "required": false,
              "enum": [
                "ip",
                "library",
                "tool"
              ],
              "examples": [
                "ip",
                "library"
              ]
            },
            {
              "name": "optional",
              "type": "boolean",
              "description": "Whether this dependency is optional",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "license",
              "type": "string",
              "description": "SPDX identifier of the dependency's license",
              "required": false,
              "examples": [
                "Apache-2.0",
                "CERN-OHL-S"
              ]
            },
            {
              "name": "source",
              "type": "object",
              "description": "",
              "required": false,
              "examples": [
                {
                  "type": "git",
                  "url": "https://github.com/openhwgroup/apb-bridge",
                  "commit": "a1b2c3d",
                  "indexing": true
                },
                {
                  "type": "registry",
                  "url": "https://registry.vyges.com/ip/apb-bridge",
                  "indexing": false
                }
              ],
              "children": [
                {
                  "name": "type",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "enum": [
                    "git",
                    "archive",
                    "registry"
                  ],
                  "examples": [
                    "git",
                    "archive"
                  ]
                },
                {
                  "name": "url",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "https://github.com/openhwgroup/apb-bridge",
                    "https://github.com/pulp-platform/common_cells"
                  ]
                },
                {
                  "name": "commit",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "a1b2c3d",
                    "main"
                  ]
                },
                {
                  "name": "hash",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "sha256:abc123...",
                    "sha256:def456..."
                  ]
                },
                {
                  "name": "indexing",
                  "type": "boolean",
                  "description": "",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                }
              ]
            },
            {
              "name": "autoFetch",
              "type": "boolean",
              "description": "Whether this dependency should be auto-downloaded by the Vyges CLI",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "attribution",
              "type": "string",
              "description": "Required attribution text or URL if OSS license demands it",
              "required": false,
              "examples": [
                "Copyright 2024 OpenHW Group. Licensed under CERN-OHL-S.",
                "Portions Copyright 2023 FOSSi Foundation"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "documentation",
      "type": "object",
      "description": "Documentation links and resources",
      "required": false,
      "examples": [
        {
          "readme": "https://github.com/vyges/spi-controller/blob/main/README.md",
          "datasheet": "https://docs.vyges.com/spi-controller/datasheet.pdf",
          "user_guide": "https://docs.vyges.com/spi-controller/user-guide",
          "api_docs": "https://docs.vyges.com/spi-controller/api"
        },
        {
          "readme": "https://github.com/acme/pcie-phy-encrypted/blob/main/README.md",
          "datasheet": "https://acme.com/pcie-phy/datasheet"
        }
      ],
      "children": [
        {
          "name": "readme",
          "type": "string",
          "description": "URL to the main README file",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/blob/main/README.md",
            "https://docs.vyges.com/spi-controller"
          ]
        },
        {
          "name": "datasheet",
          "type": "string",
          "description": "URL to the datasheet or technical specification",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/datasheet.pdf",
            "https://acme.com/pcie-phy/datasheet"
          ]
        },
        {
          "name": "user_guide",
          "type": "string",
          "description": "URL to the user guide or manual",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/user-guide",
            "https://acme.com/pcie-phy/manual"
          ]
        },
        {
          "name": "api_docs",
          "type": "string",
          "description": "URL to API documentation",
          "required": false,
          "examples": [
            "https://docs.vyges.com/spi-controller/api",
            "https://acme.com/pcie-phy/api"
          ]
        }
      ]
    },
    {
      "name": "fpga",
      "type": "object",
      "description": "FPGA-specific configuration and requirements",
      "required": [
        "toolchain"
      ],
      "examples": [
        {
          "toolchain": "vivado",
          "board": "arty-a7-35",
          "cfu_playground_compatible": true,
          "constraints": [
            "constraints.xdc",
            "timing.sdc"
          ]
        },
        {
          "toolchain": "yosys",
          "board": "ice40-hx8k-b-evn",
          "constraints": [
            "ice40-hx8k-b-evn.pcf"
          ]
        }
      ],
      "children": [
        {
          "name": "toolchain",
          "type": "string",
          "description": "Primary FPGA toolchain used",
          "required": false,
          "enum": [
            "vivado",
            "quartus",
            "yosys",
            "symbiflow"
          ],
          "examples": [
            "vivado",
            "quartus"
          ]
        },
        {
          "name": "board",
          "type": "string",
          "description": "Name of the supported FPGA board",
          "required": false,
          "examples": [
            "arty-a7-35",
            "nexys-a7-100t"
          ]
        },
        {
          "name": "cfu_playground_compatible",
          "type": "boolean",
          "description": "Whether this IP is compatible with CFU Playground",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "constraints",
          "type": "array",
          "description": "List of constraint files (.xdc, .sdc, etc.)",
          "required": false,
          "examples": [
            [
              "constraints.xdc",
              "timing.sdc"
            ],
            [
              "arty-a7-35.xdc"
            ]
          ]
        },
        {
          "name": "hard_ip",
          "type": "boolean",
          "description": "Whether this is a hard IP block (vendor-provided)",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "vendor",
          "type": "string",
          "description": "FPGA vendor for hard IP blocks",
          "required": false,
          "enum": [
            "xilinx",
            "intel",
            "lattice",
            "microchip"
          ],
          "examples": [
            "xilinx",
            "intel"
          ]
        }
      ]
    },
    {
      "name": "asic",
      "type": "object",
      "description": "ASIC-specific configuration and requirements",
      "required": false,
      "examples": [
        {
          "flavor": "digital",
          "pdks": [
            "sky130B",
            "sky130A"
          ],
          "synthesis_tool": "openlane",
          "clock_freq_mhz": 100,
          "constraints": [
            "constraints.sdc"
          ],
          "tools": [
            "yosys",
            "openroad"
          ]
        },
        {
          "flavor": "analog",
          "pdks": [
            "sky130B"
          ],
          "tools": [
            "ngspice",
            "xschem"
          ],
          "analog_models": [
            "models.spice"
          ],
          "symbol_views": [
            "symbol.sym"
          ],
          "layout_views": [
            "layout.gds"
          ]
        }
      ],
      "children": [
        {
          "name": "flavor",
          "type": "string",
          "description": "ASIC design type",
          "required": false,
          "enum": [
            "digital",
            "analog",
            "mixed-signal"
          ],
          "examples": [
            "digital",
            "analog"
          ]
        },
        {
          "name": "pdks",
          "type": "array",
          "description": "List of supported PDKs (e.g., sky130B, gf180mcuC, ihp-sg13g2)",
          "required": false,
          "examples": [
            [
              "sky130B",
              "sky130A"
            ],
            [
              "gf180mcuC"
            ]
          ]
        },
        {
          "name": "synthesis_tool",
          "type": "string",
          "description": "Primary synthesis tool for digital flows",
          "required": false,
          "enum": [
            "openlane",
            "design_compiler",
            "genus",
            "yosys"
          ],
          "examples": [
            "openlane",
            "design_compiler"
          ]
        },
        {
          "name": "clock_freq_mhz",
          "type": "number",
          "description": "Target clock frequency in MHz",
          "required": false,
          "examples": [
            100,
            250
          ]
        },
        {
          "name": "constraints",
          "type": "array",
          "description": "List of constraint files (.sdc, etc.)",
          "required": false,
          "examples": [
            [
              "constraints.sdc"
            ],
            [
              "timing.sdc",
              "area.sdc"
            ]
          ]
        },
        {
          "name": "tools",
          "type": "array",
          "description": "List of tools used (e.g., ngspice, xschem for analog)",
          "required": false,
          "examples": [
            [
              "yosys",
              "openroad"
            ],
            [
              "ngspice",
              "xschem"
            ]
          ]
        },
        {
          "name": "analog_models",
          "type": "array",
          "description": "List of analog model files (.spice, .ams, etc.)",
          "required": false,
          "examples": [
            [
              "models.spice"
            ],
            [
              "analog.ams",
              "models.spice"
            ]
          ]
        },
        {
          "name": "symbol_views",
          "type": "array",
          "description": "List of symbol view files",
          "required": false,
          "examples": [
            [
              "symbol.sym"
            ],
            [
              "spi_controller.sym"
            ]
          ]
        },
        {
          "name": "layout_views",
          "type": "array",
          "description": "List of layout view files",
          "required": false,
          "examples": [
            [
              "layout.gds"
            ],
            [
              "spi_controller.gds",
              "spi_controller.lef"
            ]
          ]
        },
        {
          "name": "digital_partition",
          "type": "array",
          "description": "List of digital RTL files for mixed-signal flows",
          "required": false,
          "examples": [
            [
              "spi_controller.v"
            ],
            [
              "spi_controller.sv",
              "spi_fifo.v"
            ]
          ]
        },
        {
          "name": "analog_partition",
          "type": "array",
          "description": "List of analog files for mixed-signal flows",
          "required": false,
          "examples": [
            [
              "analog.spice"
            ],
            [
              "analog.ams",
              "analog.spice"
            ]
          ]
        },
        {
          "name": "co_simulation",
          "type": "object",
          "description": "Co-simulation configuration for mixed-signal flows",
          "required": false,
          "examples": [
            {
              "tool": "ams-designer",
              "interface_signals": [
                "clk",
                "rst_n",
                "data_in",
                "data_out"
              ]
            },
            {
              "tool": "spectre",
              "interface_signals": [
                "adc_in",
                "dac_out"
              ]
            }
          ],
          "children": [
            {
              "name": "tool",
              "type": "string",
              "description": "Co-simulation tool (e.g., ams-designer)",
              "required": false,
              "examples": [
                "ams-designer",
                "spectre"
              ]
            },
            {
              "name": "interface_signals",
              "type": "array",
              "description": "List of interface signals between digital and analog partitions",
              "required": false,
              "examples": [
                [
                  "clk",
                  "rst_n",
                  "data_in",
                  "data_out"
                ],
                [
                  "adc_in",
                  "dac_out"
                ]
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "delivery",
      "type": "object",
      "description": "IP delivery and access information",
      "required": false,
      "examples": [
        {
          "encryptedRTL": false,
          "encryptedModels": false,
          "formats": [
            "verilog",
            "vhdl"
          ],
          "requiresNDA": false
        },
        {
          "encryptedRTL": true,
          "encryptedModels": true,
          "formats": [
            "lib",
            "db",
            "gds"
          ],
          "requiresNDA": true,
          "access": "https://acme.com/contact",
          "licenseModel": "per-project",
          "partnerPortal": "https://partners.acme.com"
        }
      ],
      "children": [
        {
          "name": "encryptedRTL",
          "type": "boolean",
          "description": "Whether the RTL is encrypted or proprietary",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "encryptedModels",
          "type": "boolean",
          "description": "Whether analog models are encrypted",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "formats",
          "type": "array",
          "description": "List of delivered file formats (e.g., verilog, vhdl, lib, db, gds, spice)",
          "required": false,
          "examples": [
            [
              "verilog",
              "vhdl"
            ],
            [
              "spice",
              "gds"
            ]
          ]
        },
        {
          "name": "requiresNDA",
          "type": "boolean",
          "description": "Whether an NDA is required for access",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "access",
          "type": "string",
          "description": "Contact information or URL for requesting access",
          "required": false,
          "examples": [
            "https://acme.com/contact",
            "sales@acme.com"
          ]
        },
        {
          "name": "licenseModel",
          "type": "string",
          "description": "Type of licensing model",
          "required": false,
          "enum": [
            "evaluation",
            "per-project",
            "royalty",
            "proprietary"
          ],
          "examples": [
            "evaluation",
            "per-project"
          ]
        },
        {
          "name": "partnerPortal",
          "type": "string",
          "description": "URL to partner portal for licensing",
          "required": false,
          "examples": [
            "https://partners.acme.com",
            "https://licensing.vyges.com"
          ]
        }
      ]
    },
    {
      "name": "toolRequirements",
      "type": "object",
      "description": "Tool requirements for using this IP",
      "required": false,
      "examples": [
        {
          "simulation": "verilator",
          "synthesis": "yosys",
          "physical": "openroad",
          "layout": "magic",
          "verification": "netgen",
          "notes": "Open-source toolchain supported"
        },
        {
          "simulation": "VCS",
          "synthesis": "Design Compiler",
          "physical": "Innovus",
          "layout": "Virtuoso",
          "verification": "calibre",
          "version_notes": {
            "VCS": "2023.06+ required",
            "Design Compiler": "2023.03+ recommended"
          },
          "notes": "Requires commercial tools for full functionality"
        }
      ],
      "children": [
        {
          "name": "simulation",
          "type": "string",
          "description": "Required simulation tool (e.g., VCS, ModelSim, verilator)",
          "required": false,
          "examples": [
            "verilator",
            "VCS"
          ]
        },
        {
          "name": "synthesis",
          "type": "string",
          "description": "Required synthesis tool (e.g., Design Compiler, OpenLane)",
          "required": false,
          "examples": [
            "yosys",
            "Design Compiler"
          ]
        },
        {
          "name": "physical",
          "type": "string",
          "description": "Required physical design tool (e.g., Innovus, OpenLane)",
          "required": false,
          "examples": [
            "openroad",
            "Innovus"
          ]
        },
        {
          "name": "layout",
          "type": "string",
          "description": "Required layout tool (e.g., Virtuoso, Magic)",
          "required": false,
          "examples": [
            "magic",
            "Virtuoso"
          ]
        },
        {
          "name": "verification",
          "type": "string",
          "description": "Required verification tool (e.g., Calibre, PVS)",
          "required": false,
          "examples": [
            "calibre",
            "PVS"
          ]
        },
        {
          "name": "version_notes",
          "type": "object",
          "description": "Optional version requirements and compatibility notes for tools",
          "required": false,
          "examples": [
            {
              "verilator": "4.0+ for SystemVerilog, 5.0+ for latest optimizations",
              "yosys": "0.9+ for basic synthesis, 0.23+ for advanced features",
              "vivado": "2023.1+ recommended for latest features",
              "edalock": "See EDA Lock manifest for exact tool versions and reproducible builds"
            }
          ]
        },
        {
          "name": "notes",
          "type": "string",
          "description": "Additional notes about tool requirements",
          "required": false,
          "examples": [
            "Requires commercial tools for full functionality",
            "Open-source toolchain supported"
          ]
        }
      ]
    },
    {
      "name": "commercial",
      "type": "object",
      "description": "Commercial/licensing contact and monetization options",
      "required": false,
      "examples": [
        {
          "contact_email": "sales@acme.com",
          "sales_page": "https://acme.com/sales",
          "pricing_model": "one-time",
          "available_regions": [
            "US",
            "EU",
            "JP"
          ]
        },
        {
          "pricing_model": "free",
          "available_regions": [
            "Global"
          ]
        }
      ],
      "children": [
        {
          "name": "contact_email",
          "type": "string",
          "description": "Contact email for commercial inquiries",
          "required": false,
          "examples": [
            "sales@acme.com",
            "licensing@vyges.com"
          ]
        },
        {
          "name": "sales_page",
          "type": "string",
          "description": "URL to sales or licensing page",
          "required": false,
          "examples": [
            "https://acme.com/sales",
            "https://vyges.com/licensing"
          ]
        },
        {
          "name": "pricing_model",
          "type": "string",
          "description": "Pricing model for this IP",
          "required": false,
          "enum": [
            "free",
            "evaluation",
            "subscription",
            "one-time",
            "royalty",
            "custom",
            "contact-us"
          ],
          "examples": [
            "free",
            "evaluation"
          ]
        },
        {
          "name": "available_regions",
          "type": "array",
          "description": "List of regions/countries this IP can be licensed in",
          "required": false,
          "examples": [
            [
              "US",
              "EU",
              "JP"
            ],
            [
              "US",
              "CA"
            ]
          ]
        }
      ]
    },
    {
      "name": "packaging",
      "type": "object",
      "description": "Packaging and standard integration support",
      "required": false,
      "examples": [
        {
          "ipxact": true,
          "edalock": true,
          "format": "verilog"
        },
        {
          "ipxact": false,
          "edalock": true,
          "format": "vhdl"
        }
      ],
      "children": [
        {
          "name": "ipxact",
          "type": "boolean",
          "description": "IP-XACT packaging compatibility",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "edalock",
          "type": "boolean",
          "description": "EDA Lock manifest support (for reproducible toolchains). When true, an EDA Lock manifest file should be present in the IP package.",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "format",
          "type": "string",
          "description": "Primary HDL format",
          "required": false,
          "enum": [
            "verilog",
            "vhdl",
            "chisel",
            "spice",
            "ams",
            "mixed"
          ],
          "examples": [
            "verilog",
            "vhdl"
          ]
        }
      ]
    },
    {
      "name": "compliance",
      "type": "object",
      "description": "Security and compliance metadata",
      "required": false,
      "examples": [
        {
          "sbom": "https://github.com/vyges/spi-controller/blob/main/sbom.json",
          "known_cves": [],
          "threat_model": "Side-channel attacks on cryptographic operations"
        },
        {
          "sbom": "https://acme.com/ip/sbom.xml",
          "known_cves": [
            "CVE-2023-1234"
          ],
          "threat_model": "Timing attacks on memory access patterns"
        }
      ],
      "children": [
        {
          "name": "sbom",
          "type": "string",
          "description": "Link to Software Bill of Materials (SBOM)",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/blob/main/sbom.json",
            "https://acme.com/ip/sbom.xml"
          ]
        },
        {
          "name": "known_cves",
          "type": "array",
          "description": "List of known CVE IDs affecting this IP (if applicable)",
          "required": false,
          "examples": [
            [],
            [
              "CVE-2023-1234"
            ]
          ]
        },
        {
          "name": "threat_model",
          "type": "string",
          "description": "Optional high-level threat model or attack surfaces",
          "required": false,
          "examples": [
            "Side-channel attacks on cryptographic operations",
            "Timing attacks on memory access patterns"
          ]
        }
      ]
    },
    {
      "name": "security",
      "type": "object",
      "description": "Security and safety-related metadata for RTL design validation",
      "required": [
        "enabled"
      ],
      "examples": [
        {
          "enabled": true,
          "security_level": "high",
          "risk_areas": [
            "memory_access",
            "fsm_state_control",
            "reset_glitch"
          ],
          "protection_features": [
            "address_range_check",
            "fsm_default_state",
            "reset_assertion"
          ],
          "recommended_tests": [
            "assert_illegal_address_access",
            "assert_fsm_stable_transitions",
            "reset_glitch_simulation"
          ],
          "requires_secure_testbench": true,
          "assertion_coverage": {
            "required_assertions": [
              "address_bounds_check",
              "fsm_state_validity"
            ],
            "coverage_target": 95,
            "critical_paths": [
              "memory_access_control",
              "reset_recovery"
            ]
          },
          "fuzzing_config": {
            "enabled": true,
            "input_ranges": [
              {
                "signal": "addr",
                "min_value": 0,
                "max_value": 1023,
                "include_invalid": true
              }
            ],
            "test_duration": 10000,
            "mutation_strategy": "random"
          },
          "formal_verification": {
            "enabled": true,
            "security_properties": [
              "no_illegal_memory_access",
              "fsm_reachability"
            ],
            "tools": [
              "yosys-smtbmc",
              "sby"
            ],
            "timeout": 600
          },
          "compliance_standards": [
            "iso_26262",
            "iec_61508"
          ],
          "security_documentation": {
            "security_analysis": "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
            "threat_model": "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md"
          }
        },
        {
          "enabled": true,
          "security_level": "critical",
          "risk_areas": [
            "cryptographic_operations",
            "timing_attacks",
            "fault_injection"
          ],
          "protection_features": [
            "side_channel_protection",
            "constant_time_operations",
            "power_analysis_resistance"
          ],
          "recommended_tests": [
            "assert_cryptographic_operations",
            "assert_timing_attack_resistance",
            "assert_fault_injection_resistance"
          ],
          "requires_secure_testbench": true,
          "side_channel_analysis": {
            "enabled": true,
            "attack_vectors": [
              "timing",
              "power",
              "electromagnetic",
              "fault_injection"
            ],
            "protection_mechanisms": [
              "randomization",
              "shielding",
              "fault_detection"
            ],
            "analysis_tools": [
              "chipwhisperer",
              "power_analyzer",
              "em_analyzer"
            ]
          },
          "compliance_standards": [
            "fips_140",
            "nist_sp_800"
          ],
          "security_documentation": {
            "security_analysis": "https://acme.com/ip/security_analysis.pdf",
            "threat_model": "https://acme.com/ip/threat_model.pdf",
            "penetration_testing": "https://acme.com/ip/penetration_testing.pdf"
          }
        }
      ],
      "children": [
        {
          "name": "enabled",
          "type": "boolean",
          "description": "Whether security validation is enabled for this IP (disabled by default to lower barrier to entry)",
          "required": false,
          "examples": [
            false,
            true
          ]
        },
        {
          "name": "tool_availability",
          "type": "string",
          "description": "Preferred tool availability for security testing (open-source by default for accessibility)",
          "required": false,
          "enum": [
            "open_source",
            "commercial",
            "hybrid"
          ],
          "examples": [
            "open_source",
            "commercial"
          ]
        },
        {
          "name": "target_flow",
          "type": "string",
          "description": "Target design flow for security tool selection (references tools.{flow})",
          "required": false,
          "enum": [
            "asic",
            "fpga",
            "chiplet",
            "analog"
          ],
          "examples": [
            "fpga",
            "asic"
          ]
        },
        {
          "name": "security_level",
          "type": "string",
          "description": "Severity or criticality of this IP from a security standpoint",
          "required": false,
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ],
          "examples": [
            "low",
            "medium"
          ]
        },
        {
          "name": "risk_areas",
          "type": "array",
          "description": "Functional areas where security validation is critical",
          "required": false,
          "examples": [
            [
              "memory_access",
              "fsm_state_control",
              "reset_glitch"
            ],
            [
              "bus_protocol",
              "clock_domain_crossing",
              "side_channel"
            ]
          ]
        },
        {
          "name": "protection_features",
          "type": "array",
          "description": "Security-related design features implemented in the IP",
          "required": false,
          "examples": [
            [
              "address_range_check",
              "fsm_default_state",
              "reset_assertion"
            ],
            [
              "ecc_protection",
              "parity_checking",
              "crc_validation"
            ]
          ]
        },
        {
          "name": "recommended_tests",
          "type": "array",
          "description": "Suggested tests/assertions to validate security for this IP",
          "required": false,
          "examples": [
            [
              "assert_illegal_address_access",
              "assert_fsm_stable_transitions",
              "reset_glitch_simulation"
            ],
            [
              "assert_protocol_timing",
              "assert_cdc_synchronization",
              "assert_side_channel_protection"
            ]
          ]
        },
        {
          "name": "requires_secure_testbench",
          "type": "boolean",
          "description": "Whether this IP requires security-focused testbench generation",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "assertion_coverage",
          "type": "object",
          "description": "Security assertion coverage requirements",
          "required": false,
          "examples": [
            {
              "required_assertions": [
                "address_bounds_check",
                "fsm_state_validity"
              ],
              "coverage_target": 95,
              "critical_paths": [
                "memory_access_control",
                "reset_recovery"
              ]
            },
            {
              "required_assertions": [
                "protocol_timing",
                "cdc_synchronization"
              ],
              "coverage_target": 98,
              "critical_paths": [
                "cryptographic_key_path",
                "privilege_check"
              ]
            }
          ],
          "children": [
            {
              "name": "required_assertions",
              "type": "array",
              "description": "List of required security assertions",
              "required": false,
              "examples": [
                [
                  "address_bounds_check",
                  "fsm_state_validity",
                  "reset_synchronization"
                ],
                [
                  "protocol_timing",
                  "cdc_synchronization",
                  "side_channel_protection"
                ]
              ]
            },
            {
              "name": "coverage_target",
              "type": "number",
              "description": "Target assertion coverage percentage",
              "required": false,
              "examples": [
                90,
                95
              ]
            },
            {
              "name": "critical_paths",
              "type": "array",
              "description": "Critical security paths that must be covered",
              "required": false,
              "examples": [
                [
                  "memory_access_control",
                  "privilege_check",
                  "cryptographic_key_path"
                ],
                [
                  "reset_recovery",
                  "error_handling",
                  "state_transition_validation"
                ]
              ]
            }
          ]
        },
        {
          "name": "fuzzing_config",
          "type": "object",
          "description": "Configuration for security-focused fuzzing tests",
          "required": false,
          "examples": [
            {
              "enabled": true,
              "input_ranges": [
                {
                  "signal": "addr",
                  "min_value": 0,
                  "max_value": 1023,
                  "include_invalid": true
                }
              ],
              "test_duration": 10000,
              "mutation_strategy": "random"
            }
          ],
          "children": [
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Whether fuzzing tests should be generated",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "input_ranges",
              "type": "array",
              "description": "Input signal ranges for fuzzing",
              "required": false,
              "examples": [
                [
                  {
                    "signal": "addr",
                    "min_value": 0,
                    "max_value": 1023,
                    "include_invalid": true
                  },
                  {
                    "signal": "data",
                    "min_value": 0,
                    "max_value": 255,
                    "include_invalid": false
                  }
                ]
              ],
              "children": [
                {
                  "name": "items",
                  "type": "object",
                  "description": "",
                  "required": [
                    "signal",
                    "min_value",
                    "max_value"
                  ],
                  "children": [
                    {
                      "name": "signal",
                      "type": "string",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "min_value",
                      "type": "integer",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "max_value",
                      "type": "integer",
                      "description": "",
                      "required": false
                    },
                    {
                      "name": "include_invalid",
                      "type": "boolean",
                      "description": "",
                      "required": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "test_duration",
              "type": "integer",
              "description": "Duration of fuzzing tests in cycles",
              "required": false,
              "examples": [
                1000,
                10000
              ]
            },
            {
              "name": "mutation_strategy",
              "type": "string",
              "description": "Fuzzing mutation strategy",
              "required": false,
              "enum": [
                "random",
                "directed",
                "coverage_guided"
              ],
              "examples": [
                "random",
                "directed"
              ]
            }
          ]
        },
        {
          "name": "formal_verification",
          "type": "object",
          "description": "Formal verification requirements for security properties",
          "required": false,
          "examples": [
            {
              "enabled": true,
              "security_properties": [
                "no_illegal_memory_access",
                "fsm_reachability"
              ],
              "tools": {
                "open_source": [
                  "yosys-smtbmc",
                  "sby"
                ],
                "commercial": []
              },
              "timeout": 600
            }
          ],
          "children": [
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Whether formal verification is required",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "security_properties",
              "type": "array",
              "description": "Security properties to be formally verified",
              "required": false,
              "examples": [
                [
                  "no_illegal_memory_access",
                  "fsm_reachability",
                  "reset_recovery"
                ],
                [
                  "protocol_compliance",
                  "cdc_safety",
                  "side_channel_protection"
                ]
              ]
            },
            {
              "name": "tools",
              "type": "object",
              "description": "Formal verification tools categorized by availability",
              "required": false,
              "examples": [
                {
                  "open_source": [
                    "yosys-smtbmc",
                    "sby"
                  ],
                  "commercial": [
                    "oneSpin"
                  ]
                }
              ],
              "children": [
                {
                  "name": "open_source",
                  "type": "array",
                  "description": "Open-source formal verification tools (references tools.{flow}.open_source.formal)",
                  "required": false,
                  "examples": [
                    [
                      "yosys-smtbmc",
                      "sby",
                      "symbiyosys",
                      "jtag"
                    ]
                  ]
                },
                {
                  "name": "commercial",
                  "type": "array",
                  "description": "Commercial formal verification tools (references tools.{flow}.commercial.formal)",
                  "required": false,
                  "examples": [
                    [
                      "oneSpin",
                      "jasper",
                      "vc_formal",
                      "questa_formal"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "timeout",
              "type": "integer",
              "description": "Formal verification timeout in seconds",
              "required": false,
              "examples": [
                300,
                600
              ]
            }
          ]
        },
        {
          "name": "side_channel_analysis",
          "type": "object",
          "description": "Side-channel analysis requirements and protections",
          "required": false,
          "examples": [
            {
              "enabled": true,
              "attack_vectors": [
                "timing",
                "power"
              ],
              "protection_mechanisms": [
                "constant_time_operations",
                "power_balancing"
              ],
              "analysis_tools": {
                "open_source": [
                  "custom_python",
                  "numpy"
                ],
                "commercial": [
                  "secure_ic"
                ]
              }
            }
          ],
          "children": [
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Whether side-channel analysis is required",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "attack_vectors",
              "type": "array",
              "description": "Side-channel attack vectors to protect against",
              "required": false,
              "examples": [
                [
                  "timing",
                  "power"
                ],
                [
                  "timing",
                  "power",
                  "electromagnetic",
                  "fault_injection"
                ]
              ]
            },
            {
              "name": "protection_mechanisms",
              "type": "array",
              "description": "Implemented side-channel protection mechanisms",
              "required": false,
              "examples": [
                [
                  "constant_time_operations",
                  "power_balancing"
                ],
                [
                  "randomization",
                  "shielding",
                  "fault_detection"
                ]
              ]
            },
            {
              "name": "analysis_tools",
              "type": "object",
              "description": "Side-channel analysis tools categorized by availability",
              "required": false,
              "examples": [
                {
                  "open_source": [
                    "custom_python",
                    "numpy"
                  ],
                  "commercial": [
                    "secure_ic"
                  ]
                }
              ],
              "children": [
                {
                  "name": "open_source",
                  "type": "array",
                  "description": "Open-source side-channel analysis tools (references tools.{flow}.open_source.security)",
                  "required": false,
                  "examples": [
                    [
                      "custom_python",
                      "numpy",
                      "scipy",
                      "chipwhisperer"
                    ]
                  ]
                },
                {
                  "name": "commercial",
                  "type": "array",
                  "description": "Commercial side-channel analysis tools (references tools.{flow}.commercial.security)",
                  "required": false,
                  "examples": [
                    [
                      "secure_ic",
                      "rambus_dpa",
                      "rohde_schwarz"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "compliance_standards",
          "type": "array",
          "description": "Security compliance standards this IP adheres to",
          "required": false,
          "examples": [
            [
              "iso_26262",
              "iec_61508"
            ],
            [
              "fips_140",
              "nist_sp_800"
            ]
          ]
        },
        {
          "name": "security_documentation",
          "type": "object",
          "description": "Links to security-related documentation",
          "required": false,
          "examples": [
            {
              "security_analysis": "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
              "threat_model": "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md"
            }
          ],
          "children": [
            {
              "name": "security_analysis",
              "type": "string",
              "description": "Link to security analysis report",
              "required": false,
              "examples": [
                "https://github.com/vyges/spi-controller/blob/main/docs/security_analysis.md",
                "https://acme.com/ip/security_analysis.pdf"
              ]
            },
            {
              "name": "threat_model",
              "type": "string",
              "description": "Link to detailed threat model",
              "required": false,
              "examples": [
                "https://github.com/vyges/spi-controller/blob/main/docs/threat_model.md",
                "https://acme.com/ip/threat_model.pdf"
              ]
            },
            {
              "name": "penetration_testing",
              "type": "string",
              "description": "Link to penetration testing results",
              "required": false,
              "examples": [
                "https://github.com/vyges/spi-controller/blob/main/docs/penetration_testing.md",
                "https://acme.com/ip/penetration_testing.pdf"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "community",
      "type": "object",
      "description": "Community and ecosystem contributions",
      "required": false,
      "examples": [
        {
          "issues": "https://github.com/vyges/spi-controller/issues",
          "contributions": true,
          "chat": "https://discord.gg/vyges"
        },
        {
          "issues": "https://acme.com/support",
          "contributions": false,
          "chat": "https://acme.slack.com"
        }
      ],
      "children": [
        {
          "name": "issues",
          "type": "string",
          "description": "Link to GitHub issues or support forum",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/issues",
            "https://forum.vyges.com"
          ]
        },
        {
          "name": "contributions",
          "type": "boolean",
          "description": "Is the project accepting external contributions?",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "chat",
          "type": "string",
          "description": "Link to Discord, Gitter, Slack, or Zulip",
          "required": false,
          "examples": [
            "https://discord.gg/vyges",
            "https://gitter.im/vyges/community"
          ]
        }
      ]
    },
    {
      "name": "demo",
      "type": "object",
      "description": "Interactive or downloadable demo availability",
      "required": false,
      "examples": [
        {
          "sandbox_link": "https://demo.vyges.com/spi-controller",
          "emulation_video": "https://youtube.com/watch?v=abc123",
          "testbench_example": "https://github.com/vyges/spi-controller/tree/main/tb",
          "integration_example": "https://github.com/vyges/spi-controller/tree/main/examples"
        },
        {
          "emulation_video": "https://acme.com/demo/video.mp4",
          "testbench_example": "https://acme.com/examples/testbench.zip"
        }
      ],
      "children": [
        {
          "name": "sandbox_link",
          "type": "string",
          "description": "URL to interactive demo or sandbox",
          "required": false,
          "examples": [
            "https://demo.vyges.com/spi-controller",
            "https://acme.com/demo/pcie-phy"
          ]
        },
        {
          "name": "emulation_video",
          "type": "string",
          "description": "URL to demonstration video",
          "required": false,
          "examples": [
            "https://youtube.com/watch?v=abc123",
            "https://acme.com/demo/video.mp4"
          ]
        },
        {
          "name": "testbench_example",
          "type": "string",
          "description": "URL to example testbench or simulation files",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/tree/main/tb",
            "https://acme.com/examples/testbench.zip"
          ]
        },
        {
          "name": "integration_example",
          "type": "string",
          "description": "URL to integration example or wrapper code",
          "required": false,
          "examples": [
            "https://github.com/vyges/spi-controller/tree/main/examples",
            "https://acme.com/examples/integration.zip"
          ]
        }
      ]
    },
    {
      "name": "performance",
      "type": "object",
      "description": "Performance characteristics and benchmarks",
      "required": false,
      "examples": [
        {
          "max_frequency_mhz": 100,
          "power_consumption_mw": 10,
          "area_mm2": 0.01,
          "gate_count": 1000,
          "benchmarks": [
            {
              "name": "Throughput",
              "value": "100",
              "unit": "Mbps",
              "description": "Maximum data transfer rate"
            }
          ]
        },
        {
          "max_frequency_mhz": 500,
          "power_consumption_mw": 100,
          "area_mm2": 1,
          "gate_count": 10000
        }
      ],
      "children": [
        {
          "name": "max_frequency_mhz",
          "type": "number",
          "description": "Maximum operating frequency in MHz",
          "required": false,
          "examples": [
            100,
            250
          ]
        },
        {
          "name": "power_consumption_mw",
          "type": "number",
          "description": "Typical power consumption in milliwatts",
          "required": false,
          "examples": [
            10,
            50
          ]
        },
        {
          "name": "area_mm2",
          "type": "number",
          "description": "Silicon area in square millimeters",
          "required": false,
          "examples": [
            0.01,
            0.1
          ]
        },
        {
          "name": "gate_count",
          "type": "integer",
          "description": "Approximate gate count",
          "required": false,
          "examples": [
            1000,
            5000
          ]
        },
        {
          "name": "benchmarks",
          "type": "array",
          "description": "Custom benchmark results",
          "required": false,
          "examples": [
            [
              {
                "name": "Throughput",
                "value": "100",
                "unit": "Mbps",
                "description": "Maximum data transfer rate"
              },
              {
                "name": "Latency",
                "value": "5",
                "unit": "ns",
                "description": "End-to-end latency"
              }
            ],
            [
              {
                "name": "Efficiency",
                "value": "85",
                "unit": "%",
                "description": "Power efficiency"
              }
            ]
          ],
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": [
                "name",
                "value"
              ],
              "examples": [
                {
                  "name": "Throughput",
                  "value": "100",
                  "unit": "Mbps",
                  "description": "Maximum data transfer rate"
                },
                {
                  "name": "Latency",
                  "value": "5",
                  "unit": "ns",
                  "description": "End-to-end latency"
                }
              ],
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "Throughput",
                    "Latency"
                  ]
                },
                {
                  "name": "value",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "100",
                    "5"
                  ]
                },
                {
                  "name": "unit",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "Mbps",
                    "ns"
                  ]
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "Maximum data transfer rate",
                    "End-to-end latency"
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "reliability",
      "type": "object",
      "description": "Reliability and quality metrics",
      "required": false,
      "examples": [
        {
          "fault_tolerance": "basic",
          "error_detection": [
            "parity",
            "CRC"
          ],
          "test_coverage": {
            "line_coverage": 90,
            "branch_coverage": 85,
            "functional_coverage": 95
          },
          "mtbf_hours": 10000
        },
        {
          "fault_tolerance": "mission_critical",
          "error_detection": [
            "ECC",
            "CRC",
            "checksum"
          ],
          "test_coverage": {
            "line_coverage": 95,
            "branch_coverage": 90,
            "functional_coverage": 98
          },
          "mtbf_hours": 100000
        }
      ],
      "children": [
        {
          "name": "fault_tolerance",
          "type": "string",
          "description": "Level of fault tolerance implemented",
          "required": false,
          "enum": [
            "none",
            "basic",
            "advanced",
            "mission_critical"
          ],
          "examples": [
            "none",
            "basic"
          ]
        },
        {
          "name": "error_detection",
          "type": "array",
          "description": "List of error detection mechanisms (e.g., parity, ECC, CRC)",
          "required": false,
          "examples": [
            [
              "parity"
            ],
            [
              "ECC",
              "CRC"
            ]
          ]
        },
        {
          "name": "test_coverage",
          "type": "object",
          "description": "Test coverage percentages",
          "required": false,
          "examples": [
            {
              "line_coverage": 90,
              "branch_coverage": 85,
              "functional_coverage": 95
            },
            {
              "line_coverage": 95,
              "branch_coverage": 90,
              "functional_coverage": 98
            }
          ],
          "children": [
            {
              "name": "line_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                85,
                90
              ]
            },
            {
              "name": "branch_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                80,
                85
              ]
            },
            {
              "name": "functional_coverage",
              "type": "number",
              "description": "",
              "required": false,
              "examples": [
                90,
                95
              ]
            }
          ]
        },
        {
          "name": "mtbf_hours",
          "type": "number",
          "description": "Mean Time Between Failures in hours",
          "required": false,
          "examples": [
            1000,
            10000
          ]
        }
      ]
    },
    {
      "name": "certification",
      "type": "object",
      "description": "Industry certifications and standards compliance",
      "required": false,
      "examples": [
        {
          "iso_26262": "asil_b",
          "ieee_1149_1": true,
          "ieee_1500": false,
          "other_certifications": [
            "DO-254"
          ]
        },
        {
          "iso_26262": "none",
          "ieee_1149_1": false,
          "ieee_1500": false,
          "other_certifications": []
        }
      ],
      "children": [
        {
          "name": "iso_26262",
          "type": "string",
          "description": "ISO 26262 Automotive Safety Integrity Level",
          "required": false,
          "enum": [
            "none",
            "qm",
            "asil_a",
            "asil_b",
            "asil_c",
            "asil_d"
          ],
          "examples": [
            "none",
            "qm"
          ]
        },
        {
          "name": "ieee_1149_1",
          "type": "boolean",
          "description": "IEEE 1149.1 JTAG boundary scan compliance",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "ieee_1500",
          "type": "boolean",
          "description": "IEEE 1500 embedded core test compliance",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "other_certifications",
          "type": "array",
          "description": "List of other certifications or standards",
          "required": false,
          "examples": [
            [
              "DO-254"
            ],
            [
              "IEC 61508"
            ]
          ]
        }
      ]
    },
    {
      "name": "ai_copilot",
      "type": "object",
      "description": "AI copilot integration and prompts",
      "required": false,
      "examples": [
        {
          "prompt_to_generate_tb": "Generate a SystemVerilog testbench for an SPI controller with configurable clock polarity and phase",
          "prompt_to_instantiate": "Instantiate an SPI controller in a SystemVerilog top-level module with APB interface",
          "prompt_to_integrate": "Integrate SPI controller into a SoC with multiple peripherals and DMA support",
          "ai_compatible": true
        },
        {
          "prompt_to_generate_tb": "Create a comprehensive testbench for a PCIe PHY with multiple test scenarios",
          "prompt_to_instantiate": "Create a wrapper for PCIe PHY with clock generation and reset logic",
          "ai_compatible": false
        }
      ],
      "children": [
        {
          "name": "prompt_to_generate_tb",
          "type": "string",
          "description": "Suggested prompt to generate testbench using AI",
          "required": false,
          "examples": [
            "Generate a SystemVerilog testbench for an SPI controller with configurable clock polarity and phase",
            "Create a comprehensive testbench for a PCIe PHY with multiple test scenarios"
          ]
        },
        {
          "name": "prompt_to_instantiate",
          "type": "string",
          "description": "Suggested prompt to instantiate in larger system",
          "required": false,
          "examples": [
            "Instantiate an SPI controller in a SystemVerilog top-level module with APB interface",
            "Create a wrapper for PCIe PHY with clock generation and reset logic"
          ]
        },
        {
          "name": "prompt_to_integrate",
          "type": "string",
          "description": "Suggested prompt for system integration",
          "required": false,
          "examples": [
            "Integrate SPI controller into a SoC with multiple peripherals and DMA support",
            "Connect PCIe PHY to a root complex with proper clock domain crossing"
          ]
        },
        {
          "name": "ai_compatible",
          "type": "boolean",
          "description": "Whether this IP is optimized for AI-assisted design",
          "required": false,
          "examples": [
            true,
            false
          ]
        }
      ]
    },
    {
      "name": "roadmap",
      "type": "object",
      "description": "Future development plans and roadmap",
      "required": false,
      "examples": [
        {
          "planned_features": [
            "DMA support",
            "Interrupt handling",
            "Power management"
          ],
          "deprecation_plan": "Version 2.0 will be deprecated in Q4 2024. Migration guide available at https://docs.vyges.com/migration",
          "version_schedule": {
            "next_major": "2024-12-01",
            "next_minor": "2024-09-01",
            "maintenance_until": "2026-12-31"
          }
        },
        {
          "planned_features": [
            "Multi-lane support",
            "Advanced error correction"
          ],
          "deprecation_plan": "No deprecation planned"
        }
      ],
      "children": [
        {
          "name": "planned_features",
          "type": "array",
          "description": "List of planned features or improvements",
          "required": false,
          "examples": [
            [
              "DMA support",
              "Interrupt handling",
              "Power management"
            ],
            [
              "Multi-lane support",
              "Advanced error correction"
            ]
          ]
        },
        {
          "name": "deprecation_plan",
          "type": "string",
          "description": "Deprecation timeline and migration path",
          "required": false,
          "examples": [
            "Version 2.0 will be deprecated in Q4 2024. Migration guide available at https://docs.vyges.com/migration",
            "No deprecation planned"
          ]
        },
        {
          "name": "version_schedule",
          "type": "object",
          "description": "Planned version release schedule",
          "required": false,
          "examples": [
            {
              "next_major": "2024-12-01",
              "next_minor": "2024-09-01",
              "maintenance_until": "2026-12-31"
            },
            {
              "next_minor": "2024-11-15",
              "maintenance_until": "2027-06-30"
            }
          ],
          "children": [
            {
              "name": "next_major",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2024-12-01",
                "2025-03-15"
              ]
            },
            {
              "name": "next_minor",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2024-09-01",
                "2024-11-15"
              ]
            },
            {
              "name": "maintenance_until",
              "type": "string",
              "description": "",
              "required": false,
              "examples": [
                "2026-12-31",
                "2027-06-30"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "compatibility",
      "type": "object",
      "description": "Compatibility information and version constraints",
      "required": false,
      "examples": [
        {
          "min_vyges_version": "1.0.0",
          "max_vyges_version": "3.0.0",
          "breaking_changes": [
            {
              "version": "2.0.0",
              "description": "API interface changed",
              "migration_guide": "https://docs.vyges.com/migration/v2"
            }
          ]
        },
        {
          "min_vyges_version": "2.0.0",
          "deprecated_since": "3.0.0",
          "replacement": "spi-controller-v2"
        }
      ],
      "children": [
        {
          "name": "min_vyges_version",
          "type": "string",
          "description": "Minimum Vyges platform version required",
          "required": false,
          "examples": [
            "1.0.0",
            "2.0.0"
          ]
        },
        {
          "name": "max_vyges_version",
          "type": "string",
          "description": "Maximum Vyges platform version supported",
          "required": false,
          "examples": [
            "3.0.0",
            "4.0.0"
          ]
        },
        {
          "name": "breaking_changes",
          "type": "array",
          "description": "List of breaking changes and migration guides",
          "required": false,
          "examples": [
            [
              {
                "version": "2.0.0",
                "description": "API interface changed",
                "migration_guide": "https://docs.vyges.com/migration/v2"
              }
            ],
            [
              {
                "version": "3.0.0",
                "description": "Parameter names updated"
              },
              {
                "version": "4.0.0",
                "description": "New required fields added",
                "migration_guide": "https://docs.vyges.com/migration/v4"
              }
            ]
          ],
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": [
                "version",
                "description"
              ],
              "examples": [
                {
                  "version": "2.0.0",
                  "description": "API interface changed",
                  "migration_guide": "https://docs.vyges.com/migration/v2"
                },
                {
                  "version": "3.0.0",
                  "description": "Parameter names updated"
                }
              ],
              "children": [
                {
                  "name": "version",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "2.0.0",
                    "3.0.0"
                  ]
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "API interface changed",
                    "Parameter names updated"
                  ]
                },
                {
                  "name": "migration_guide",
                  "type": "string",
                  "description": "",
                  "required": false,
                  "examples": [
                    "https://docs.vyges.com/migration/v2",
                    "https://docs.vyges.com/migration/v3"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "deprecated_since",
          "type": "string",
          "description": "Version when this IP was deprecated",
          "required": false,
          "examples": [
            "2.0.0",
            "3.0.0"
          ]
        },
        {
          "name": "replacement",
          "type": "string",
          "description": "Name of the replacement IP (if deprecated)",
          "required": false,
          "examples": [
            "spi-controller-v2",
            "pcie-phy-v3"
          ]
        }
      ]
    },
    {
      "name": "localization",
      "type": "object",
      "description": "Internationalization and localization support",
      "required": false,
      "examples": [
        {
          "supported_languages": [
            "en",
            "zh"
          ],
          "documentation_languages": [
            "en",
            "zh"
          ],
          "localized_descriptions": {
            "en": "High-performance SPI controller with configurable parameters",
            "zh": "高性能SPI控制器，具有可配置参数"
          }
        },
        {
          "supported_languages": [
            "en"
          ],
          "documentation_languages": [
            "en"
          ],
          "localized_descriptions": {
            "en": "PCIe PHY supporting multiple generations"
          }
        }
      ],
      "children": [
        {
          "name": "supported_languages",
          "type": "array",
          "description": "List of supported language codes (e.g., en, zh, ja)",
          "required": false,
          "examples": [
            [
              "en"
            ],
            [
              "en",
              "zh"
            ]
          ]
        },
        {
          "name": "documentation_languages",
          "type": "array",
          "description": "Languages in which documentation is available",
          "required": false,
          "examples": [
            [
              "en"
            ],
            [
              "en",
              "zh"
            ]
          ]
        },
        {
          "name": "localized_descriptions",
          "type": "object",
          "description": "Description in different languages",
          "required": false,
          "examples": [
            {
              "en": "High-performance SPI controller with configurable parameters",
              "zh": "高性能SPI控制器，具有可配置参数",
              "ja": "設定可能なパラメータを持つ高性能SPIコントローラー"
            },
            {
              "en": "PCIe PHY supporting multiple generations",
              "zh": "支持多代PCIe PHY",
              "ja": "複数の世代をサポートするPCIe PHY"
            }
          ]
        }
      ]
    },
    {
      "name": "chiplet",
      "type": "object",
      "description": "Chiplet integration and packaging metadata",
      "required": false,
      "examples": [
        {
          "chiplet_ready": true,
          "integration_level": "rtl",
          "die_to_die_interfaces": [
            "ucie",
            "bow"
          ],
          "packaging_considerations": "Requires 2.5D interposer with 0.8mm bump pitch",
          "interposer_constraints": {
            "technology": "silicon",
            "routing_layers": 4,
            "minimum_pitch": 0.8,
            "die_spacing": 0.1
          },
          "bump_constraints": {
            "pitch": 0.8,
            "size": 0.4,
            "array": "full",
            "power_bumps": 8,
            "signal_bumps": 32
          },
          "thermal_constraints": {
            "max_power_per_die": 5,
            "junction_temperature": 125,
            "thermal_resistance": 20,
            "cooling_requirements": "Active cooling required"
          },
          "multi_die_testing": {
            "test_access": "boundary_scan",
            "test_coverage": {
              "interconnect": 95,
              "functionality": 90
            },
            "test_vectors": [
              "interconnect_test.v",
              "functional_test.v"
            ]
          },
          "signal_conformance": {
            "protocol_reference": "UCIe 1.1",
            "verified_against": true,
            "test_suite": "UCIe Compliance Test Suite v1.1",
            "verification_date": "2024-01-15",
            "verification_tool": "UCIe Compliance Checker",
            "compliance_level": "full"
          },
          "power_domains": [
            {
              "name": "core_pd",
              "voltage": 0.8,
              "type": "logic",
              "isolation_required": true,
              "max_current_ma": 100,
              "description": "Core logic domain"
            },
            {
              "name": "io_pd",
              "voltage": 1.8,
              "type": "io",
              "isolation_required": false,
              "max_current_ma": 50,
              "description": "I/O interface domain"
            }
          ],
          "lifecycle": {
            "origin": "vyges/partner-x",
            "trusted_fabricator": true,
            "version_control": "git",
            "release_status": "qualified",
            "fabrication_node": "tsmc7nm",
            "package_type": "2.5d_interposer",
            "supply_chain_tracking": true,
            "certification": [
              "ISO 9001",
              "IATF 16949"
            ]
          },
          "cdxml_compliance": {
            "cdxml_version": "cdxml-v0.2",
            "interface": {
              "type": "BoW",
              "lanes": 8,
              "tx_pads": 32,
              "rx_pads": 32,
              "data_rate_gbps": 8
            },
            "electrical_characteristics": {
              "core_voltage": 0.8,
              "io_voltage": 1.2,
              "max_current_ma": 120,
              "leakage_ma": 4.5
            },
            "mechanical_characteristics": {
              "die_width_um": 4000,
              "die_height_um": 3000,
              "bump_pitch_um": 100,
              "substrate_type": "organic"
            },
            "checklist_items": {
              "known_good_die": true,
              "reticle_compatible": true,
              "has_dft_hooks": true,
              "test_vector_included": true
            },
            "validation_status": "validated",
            "validation_date": "2024-01-15",
            "validation_tool": "CDXML Validator v0.2"
          }
        },
        {
          "chiplet_ready": false,
          "integration_level": "rtl",
          "packaging_considerations": "Standard single-die packaging"
        }
      ],
      "children": [
        {
          "name": "chiplet_ready",
          "type": "boolean",
          "description": "Whether this IP is designed for chiplet integration",
          "required": false,
          "examples": [
            true,
            false
          ]
        },
        {
          "name": "integration_level",
          "type": "string",
          "description": "Integration abstraction level for chiplet design",
          "required": false,
          "enum": [
            "rtl",
            "netlist",
            "hard_ip"
          ],
          "examples": [
            "rtl",
            "netlist"
          ]
        },
        {
          "name": "die_to_die_interfaces",
          "type": "array",
          "description": "Supported die-to-die interface protocols",
          "required": false,
          "examples": [
            [
              "ucie",
              "bow"
            ],
            [
              "aib"
            ]
          ]
        },
        {
          "name": "packaging_considerations",
          "type": "string",
          "description": "Notes about physical packaging requirements",
          "required": false,
          "examples": [
            "Requires 2.5D interposer with 0.8mm bump pitch",
            "Compatible with organic substrate packaging"
          ]
        },
        {
          "name": "interposer_constraints",
          "type": "object",
          "description": "Interposer design constraints",
          "required": false,
          "examples": [
            {
              "technology": "silicon",
              "routing_layers": 4,
              "minimum_pitch": 0.8,
              "die_spacing": 0.1
            },
            {
              "technology": "organic",
              "routing_layers": 2,
              "minimum_pitch": 2,
              "die_spacing": 0.5
            }
          ],
          "children": [
            {
              "name": "technology",
              "type": "string",
              "description": "Interposer technology type",
              "required": false,
              "enum": [
                "silicon",
                "organic",
                "glass"
              ],
              "examples": [
                "silicon",
                "organic"
              ]
            },
            {
              "name": "routing_layers",
              "type": "integer",
              "description": "Number of routing layers required",
              "required": false,
              "examples": [
                2,
                4
              ]
            },
            {
              "name": "minimum_pitch",
              "type": "number",
              "description": "Minimum routing pitch in micrometers",
              "required": false,
              "examples": [
                0.8,
                1
              ]
            },
            {
              "name": "die_spacing",
              "type": "number",
              "description": "Minimum spacing between dies in millimeters",
              "required": false,
              "examples": [
                0.1,
                0.2
              ]
            }
          ]
        },
        {
          "name": "bump_constraints",
          "type": "object",
          "description": "Bump map and connectivity constraints",
          "required": false,
          "examples": [
            {
              "pitch": 0.8,
              "size": 0.4,
              "array": "full",
              "power_bumps": 8,
              "signal_bumps": 32
            },
            {
              "pitch": 1,
              "size": 0.5,
              "array": "peripheral",
              "power_bumps": 4,
              "signal_bumps": 16
            }
          ],
          "children": [
            {
              "name": "pitch",
              "type": "number",
              "description": "Bump pitch in micrometers",
              "required": false,
              "examples": [
                0.8,
                1
              ]
            },
            {
              "name": "size",
              "type": "number",
              "description": "Bump size in micrometers",
              "required": false,
              "examples": [
                0.4,
                0.5
              ]
            },
            {
              "name": "array",
              "type": "string",
              "description": "Bump array configuration",
              "required": false,
              "enum": [
                "full",
                "peripheral",
                "area"
              ],
              "examples": [
                "full",
                "peripheral"
              ]
            },
            {
              "name": "power_bumps",
              "type": "integer",
              "description": "Number of power/ground bumps required",
              "required": false,
              "examples": [
                4,
                8
              ]
            },
            {
              "name": "signal_bumps",
              "type": "integer",
              "description": "Number of signal bumps required",
              "required": false,
              "examples": [
                16,
                32
              ]
            }
          ]
        },
        {
          "name": "thermal_constraints",
          "type": "object",
          "description": "Thermal analysis constraints",
          "required": false,
          "examples": [
            {
              "max_power_per_die": 5,
              "junction_temperature": 125,
              "thermal_resistance": 20,
              "cooling_requirements": "Active cooling required"
            },
            {
              "max_power_per_die": 1,
              "junction_temperature": 85,
              "thermal_resistance": 50,
              "cooling_requirements": "Passive cooling sufficient"
            }
          ],
          "children": [
            {
              "name": "max_power_per_die",
              "type": "number",
              "description": "Maximum power per die in watts",
              "required": false,
              "examples": [
                1,
                2.5
              ]
            },
            {
              "name": "junction_temperature",
              "type": "number",
              "description": "Maximum junction temperature in Celsius",
              "required": false,
              "examples": [
                85,
                100
              ]
            },
            {
              "name": "thermal_resistance",
              "type": "number",
              "description": "Thermal resistance in degrees C per watt",
              "required": false,
              "examples": [
                10,
                20
              ]
            },
            {
              "name": "cooling_requirements",
              "type": "string",
              "description": "Cooling requirements description",
              "required": false,
              "examples": [
                "Passive cooling sufficient",
                "Active cooling required"
              ]
            }
          ]
        },
        {
          "name": "multi_die_testing",
          "type": "object",
          "description": "Multi-die testing and validation requirements",
          "required": false,
          "examples": [
            {
              "test_access": "boundary_scan",
              "test_coverage": {
                "interconnect": 95,
                "functionality": 90
              },
              "test_vectors": [
                "interconnect_test.v",
                "functional_test.v"
              ]
            },
            {
              "test_access": "functional",
              "test_coverage": {
                "interconnect": 100,
                "functionality": 95
              },
              "test_vectors": [
                "boundary_scan.pat"
              ]
            }
          ],
          "children": [
            {
              "name": "test_access",
              "type": "string",
              "description": "Test access method",
              "required": false,
              "enum": [
                "boundary_scan",
                "internal_access",
                "functional"
              ],
              "examples": [
                "boundary_scan",
                "internal_access"
              ]
            },
            {
              "name": "test_coverage",
              "type": "object",
              "description": "",
              "required": false,
              "examples": [
                {
                  "interconnect": 95,
                  "functionality": 90
                },
                {
                  "interconnect": 100,
                  "functionality": 95
                }
              ],
              "children": [
                {
                  "name": "interconnect",
                  "type": "number",
                  "description": "Interconnect test coverage percentage",
                  "required": false,
                  "examples": [
                    90,
                    95
                  ]
                },
                {
                  "name": "functionality",
                  "type": "number",
                  "description": "Functional test coverage percentage",
                  "required": false,
                  "examples": [
                    85,
                    90
                  ]
                }
              ]
            },
            {
              "name": "test_vectors",
              "type": "array",
              "description": "List of test vector files or formats",
              "required": false,
              "examples": [
                [
                  "interconnect_test.v",
                  "functional_test.v"
                ],
                [
                  "boundary_scan.pat"
                ]
              ]
            }
          ]
        },
        {
          "name": "signal_conformance",
          "type": "object",
          "description": "Signal and protocol conformance validation",
          "required": false,
          "examples": [
            {
              "protocol_reference": "UCIe 1.1",
              "verified_against": true,
              "test_suite": "UCIe Compliance Test Suite v1.1",
              "verification_date": "2024-01-15",
              "verification_tool": "UCIe Compliance Checker",
              "compliance_level": "full"
            },
            {
              "protocol_reference": "BoW 1.0",
              "verified_against": false,
              "compliance_level": "basic"
            }
          ],
          "children": [
            {
              "name": "protocol_reference",
              "type": "string",
              "description": "Protocol specification version and reference",
              "required": false,
              "examples": [
                "UCIe 1.1",
                "BoW 1.0"
              ]
            },
            {
              "name": "verified_against",
              "type": "boolean",
              "description": "Whether interface was verified against protocol test suite",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "test_suite",
              "type": "string",
              "description": "Name and version of test suite used for verification",
              "required": false,
              "examples": [
                "UCIe Compliance Test Suite v1.1",
                "BoW Validation Suite v1.0"
              ]
            },
            {
              "name": "verification_date",
              "type": "string",
              "description": "Date when protocol verification was completed",
              "required": false,
              "examples": [
                "2024-01-15",
                "2024-03-20"
              ]
            },
            {
              "name": "verification_tool",
              "type": "string",
              "description": "Tool used for protocol verification",
              "required": false,
              "examples": [
                "UCIe Compliance Checker",
                "Custom BoW Validator"
              ]
            },
            {
              "name": "compliance_level",
              "type": "string",
              "description": "Level of protocol compliance achieved",
              "required": false,
              "enum": [
                "basic",
                "full",
                "extended"
              ],
              "examples": [
                "basic",
                "full"
              ]
            }
          ]
        },
        {
          "name": "power_domains",
          "type": "array",
          "description": "Power domain configuration for SoC/Chiplet partitioning",
          "required": false,
          "examples": [
            [
              {
                "name": "core_pd",
                "voltage": 0.8,
                "type": "logic",
                "isolation_required": true,
                "max_current_ma": 100,
                "description": "Core logic domain"
              },
              {
                "name": "io_pd",
                "voltage": 1.8,
                "type": "io",
                "isolation_required": false,
                "max_current_ma": 50,
                "description": "I/O interface domain"
              }
            ]
          ],
          "children": [
            {
              "name": "items",
              "type": "object",
              "description": "",
              "required": [
                "name",
                "voltage",
                "type"
              ],
              "examples": [
                {
                  "name": "core_pd",
                  "voltage": 0.8,
                  "type": "logic",
                  "isolation_required": true,
                  "max_current_ma": 100,
                  "description": "Core logic domain"
                },
                {
                  "name": "io_pd",
                  "voltage": 1.8,
                  "type": "io",
                  "isolation_required": false,
                  "max_current_ma": 50,
                  "description": "I/O interface domain"
                }
              ],
              "children": [
                {
                  "name": "name",
                  "type": "string",
                  "description": "Power domain name",
                  "required": false,
                  "examples": [
                    "core_pd",
                    "io_pd"
                  ]
                },
                {
                  "name": "voltage",
                  "type": "number",
                  "description": "Operating voltage in volts",
                  "required": false,
                  "examples": [
                    0.8,
                    1
                  ]
                },
                {
                  "name": "type",
                  "type": "string",
                  "description": "Type of circuitry in this power domain",
                  "required": false,
                  "enum": [
                    "logic",
                    "memory",
                    "analog",
                    "io",
                    "mixed"
                  ],
                  "examples": [
                    "logic",
                    "memory"
                  ]
                },
                {
                  "name": "isolation_required",
                  "type": "boolean",
                  "description": "Whether power isolation is required",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "retention_required",
                  "type": "boolean",
                  "description": "Whether state retention is required during power down",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "max_current_ma",
                  "type": "number",
                  "description": "Maximum current draw in milliamps",
                  "required": false,
                  "examples": [
                    10,
                    50
                  ]
                },
                {
                  "name": "description",
                  "type": "string",
                  "description": "Description of power domain purpose",
                  "required": false,
                  "examples": [
                    "Core logic domain",
                    "I/O interface domain"
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "lifecycle",
          "type": "object",
          "description": "Lifecycle and supply chain metadata for chiplet integration",
          "required": false,
          "examples": [
            {
              "origin": "vyges/partner-x",
              "trusted_fabricator": true,
              "version_control": "git",
              "release_status": "qualified",
              "fabrication_node": "tsmc7nm",
              "package_type": "2.5d_interposer",
              "supply_chain_tracking": true,
              "certification": [
                "ISO 9001",
                "IATF 16949"
              ]
            },
            {
              "origin": "internal",
              "trusted_fabricator": true,
              "version_control": "git",
              "release_status": "production",
              "fabrication_node": "sky130nm",
              "package_type": "organic_substrate",
              "supply_chain_tracking": false
            }
          ],
          "children": [
            {
              "name": "origin",
              "type": "string",
              "description": "Origin of the chiplet (e.g., vyges/partner-x, internal)",
              "required": false,
              "examples": [
                "vyges/partner-x",
                "internal"
              ]
            },
            {
              "name": "trusted_fabricator",
              "type": "boolean",
              "description": "Whether this chiplet comes from a trusted fabricator",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "version_control",
              "type": "string",
              "description": "Version control system used",
              "required": false,
              "enum": [
                "git",
                "svn",
                "perforce",
                "none"
              ],
              "examples": [
                "git",
                "svn"
              ]
            },
            {
              "name": "release_status",
              "type": "string",
              "description": "Release status in the supply chain",
              "required": false,
              "enum": [
                "development",
                "alpha",
                "beta",
                "qualified",
                "production",
                "deprecated"
              ],
              "examples": [
                "qualified",
                "production"
              ]
            },
            {
              "name": "fabrication_node",
              "type": "string",
              "description": "Fabrication process node",
              "required": false,
              "examples": [
                "tsmc7nm",
                "intel10nm"
              ]
            },
            {
              "name": "package_type",
              "type": "string",
              "description": "Package type for chiplet integration",
              "required": false,
              "enum": [
                "2.5d_interposer",
                "3d_stacked",
                "organic_substrate",
                "fan_out"
              ],
              "examples": [
                "2.5d_interposer",
                "3d_stacked"
              ]
            },
            {
              "name": "supply_chain_tracking",
              "type": "boolean",
              "description": "Whether supply chain is tracked and verified",
              "required": false,
              "examples": [
                true,
                false
              ]
            },
            {
              "name": "certification",
              "type": "array",
              "description": "List of certifications (e.g., ISO 9001, automotive)",
              "required": false,
              "examples": [
                [
                  "ISO 9001"
                ],
                [
                  "ISO 9001",
                  "IATF 16949"
                ]
              ]
            }
          ]
        },
        {
          "name": "cdxml_compliance",
          "type": "object",
          "description": "CDXML compliance metadata for OCP (Open Compute Project) chiplet integration",
          "required": false,
          "examples": [
            {
              "cdxml_version": "cdxml-v0.2",
              "interface": {
                "type": "BoW",
                "lanes": 8,
                "tx_pads": 32,
                "rx_pads": 32,
                "data_rate_gbps": 8
              },
              "electrical_characteristics": {
                "core_voltage": 0.8,
                "io_voltage": 1.2,
                "max_current_ma": 120,
                "leakage_ma": 4.5
              },
              "mechanical_characteristics": {
                "die_width_um": 4000,
                "die_height_um": 3000,
                "bump_pitch_um": 100,
                "substrate_type": "organic"
              },
              "checklist_items": {
                "known_good_die": true,
                "reticle_compatible": true,
                "has_dft_hooks": true,
                "test_vector_included": true
              },
              "validation_status": "validated",
              "validation_date": "2024-01-15",
              "validation_tool": "CDXML Validator v0.2"
            }
          ],
          "children": [
            {
              "name": "cdxml_version",
              "type": "string",
              "description": "CDXML specification version this chiplet complies with",
              "required": false,
              "examples": [
                "cdxml-v0.1",
                "cdxml-v0.2"
              ]
            },
            {
              "name": "interface",
              "type": "object",
              "description": "Die-to-die interface characteristics per CDXML specification",
              "required": [
                "type"
              ],
              "examples": [
                {
                  "type": "BoW",
                  "lanes": 8,
                  "tx_pads": 32,
                  "rx_pads": 32,
                  "data_rate_gbps": 8,
                  "bow_specification": {
                    "spec_version": "2.0d.1",
                    "signaling_class": "B",
                    "tx_voltage": 0.4,
                    "rx_voltage": 0.4,
                    "clocking_scheme": "forwarded",
                    "link_training": true,
                    "protocol_layer": "raw",
                    "serialization_factor": 8
                  }
                },
                {
                  "type": "UCIe",
                  "lanes": 16,
                  "tx_pads": 64,
                  "rx_pads": 64,
                  "data_rate_gbps": 16
                }
              ],
              "children": [
                {
                  "name": "type",
                  "type": "string",
                  "description": "Interface protocol type",
                  "required": false,
                  "enum": [
                    "BoW",
                    "UCIe",
                    "AIB",
                    "EMIB",
                    "custom"
                  ],
                  "examples": [
                    "BoW",
                    "UCIe"
                  ]
                },
                {
                  "name": "lanes",
                  "type": "integer",
                  "description": "Number of interface lanes",
                  "required": false,
                  "examples": [
                    4,
                    8
                  ]
                },
                {
                  "name": "tx_pads",
                  "type": "integer",
                  "description": "Number of transmit pads",
                  "required": false,
                  "examples": [
                    16,
                    32
                  ]
                },
                {
                  "name": "rx_pads",
                  "type": "integer",
                  "description": "Number of receive pads",
                  "required": false,
                  "examples": [
                    16,
                    32
                  ]
                },
                {
                  "name": "data_rate_gbps",
                  "type": "number",
                  "description": "Data rate per lane in Gbps",
                  "required": false,
                  "examples": [
                    2.5,
                    5
                  ]
                },
                {
                  "name": "bow_specification",
                  "type": "object",
                  "description": "BoW-specific interface parameters (when type is 'BoW')",
                  "required": false,
                  "examples": [
                    {
                      "spec_version": "2.0d.1",
                      "signaling_class": "B",
                      "tx_voltage": 0.4,
                      "rx_voltage": 0.4,
                      "clocking_scheme": "forwarded",
                      "link_training": true,
                      "protocol_layer": "raw",
                      "serialization_factor": 8,
                      "bump_group": {
                        "pitch_um": 55,
                        "location": "south",
                        "arrangement": "linear"
                      },
                      "compliance": {
                        "has_loopback": true,
                        "supports_prbs": true,
                        "supports_inband_error_detect": false
                      },
                      "timing_constraints": {
                        "setup_time_ps": 100,
                        "hold_time_ps": 100,
                        "max_jitter_ps": 20,
                        "skew_tolerance_ps": 50
                      }
                    }
                  ],
                  "children": [
                    {
                      "name": "spec_version",
                      "type": "string",
                      "description": "BoW specification version",
                      "required": false,
                      "examples": [
                        "2.0d.1",
                        "2.0"
                      ]
                    },
                    {
                      "name": "signaling_class",
                      "type": "string",
                      "description": "BoW signaling class defining voltage and timing characteristics",
                      "required": false,
                      "enum": [
                        "A",
                        "B",
                        "C",
                        "D"
                      ],
                      "examples": [
                        "A",
                        "B"
                      ]
                    },
                    {
                      "name": "tx_voltage",
                      "type": "number",
                      "description": "Transmit voltage in volts",
                      "required": false,
                      "examples": [
                        0.4,
                        0.8
                      ]
                    },
                    {
                      "name": "rx_voltage",
                      "type": "number",
                      "description": "Receive voltage in volts",
                      "required": false,
                      "examples": [
                        0.4,
                        0.8
                      ]
                    },
                    {
                      "name": "clocking_scheme",
                      "type": "string",
                      "description": "Clock distribution scheme",
                      "required": false,
                      "enum": [
                        "forwarded",
                        "embedded",
                        "recovered"
                      ],
                      "examples": [
                        "forwarded",
                        "embedded"
                      ]
                    },
                    {
                      "name": "link_training",
                      "type": "boolean",
                      "description": "Whether link training is supported",
                      "required": false,
                      "examples": [
                        true,
                        false
                      ]
                    },
                    {
                      "name": "protocol_layer",
                      "type": "string",
                      "description": "Protocol layer type",
                      "required": false,
                      "enum": [
                        "raw",
                        "packetized",
                        "streaming"
                      ],
                      "examples": [
                        "raw",
                        "packetized"
                      ]
                    },
                    {
                      "name": "serialization_factor",
                      "type": "integer",
                      "description": "Serialization factor for data transmission",
                      "required": false,
                      "examples": [
                        8,
                        16
                      ]
                    },
                    {
                      "name": "bump_group",
                      "type": "object",
                      "description": "Bump group configuration for BoW interface",
                      "required": false,
                      "examples": [
                        {
                          "pitch_um": 55,
                          "location": "south",
                          "arrangement": "linear"
                        }
                      ],
                      "children": [
                        {
                          "name": "pitch_um",
                          "type": "number",
                          "description": "Bump pitch in micrometers",
                          "required": false,
                          "examples": [
                            55,
                            100
                          ]
                        },
                        {
                          "name": "location",
                          "type": "string",
                          "description": "Bump group location on die",
                          "required": false,
                          "enum": [
                            "north",
                            "south",
                            "east",
                            "west",
                            "center",
                            "distributed"
                          ],
                          "examples": [
                            "south",
                            "distributed"
                          ]
                        },
                        {
                          "name": "arrangement",
                          "type": "string",
                          "description": "Bump arrangement pattern",
                          "required": false,
                          "enum": [
                            "linear",
                            "grid",
                            "staggered",
                            "custom"
                          ],
                          "examples": [
                            "linear",
                            "staggered"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "compliance",
                      "type": "object",
                      "description": "BoW compliance and testing features",
                      "required": false,
                      "examples": [
                        {
                          "has_loopback": true,
                          "supports_prbs": true,
                          "supports_inband_error_detect": false,
                          "supports_eye_monitoring": true,
                          "supports_jitter_tolerance": true
                        }
                      ],
                      "children": [
                        {
                          "name": "has_loopback",
                          "type": "boolean",
                          "description": "Whether loopback testing is supported",
                          "required": false,
                          "examples": [
                            true,
                            false
                          ]
                        },
                        {
                          "name": "supports_prbs",
                          "type": "boolean",
                          "description": "Whether PRBS (Pseudo-Random Bit Sequence) testing is supported",
                          "required": false,
                          "examples": [
                            true,
                            false
                          ]
                        },
                        {
                          "name": "supports_inband_error_detect",
                          "type": "boolean",
                          "description": "Whether in-band error detection is supported",
                          "required": false,
                          "examples": [
                            true,
                            false
                          ]
                        },
                        {
                          "name": "supports_eye_monitoring",
                          "type": "boolean",
                          "description": "Whether eye diagram monitoring is supported",
                          "required": false,
                          "examples": [
                            true,
                            false
                          ]
                        },
                        {
                          "name": "supports_jitter_tolerance",
                          "type": "boolean",
                          "description": "Whether jitter tolerance testing is supported",
                          "required": false,
                          "examples": [
                            true,
                            false
                          ]
                        }
                      ]
                    },
                    {
                      "name": "timing_constraints",
                      "type": "object",
                      "description": "BoW timing and signal integrity constraints",
                      "required": false,
                      "examples": [
                        {
                          "setup_time_ps": 100,
                          "hold_time_ps": 100,
                          "max_jitter_ps": 20,
                          "skew_tolerance_ps": 50
                        }
                      ],
                      "children": [
                        {
                          "name": "setup_time_ps",
                          "type": "number",
                          "description": "Setup time requirement in picoseconds",
                          "required": false,
                          "examples": [
                            50,
                            100
                          ]
                        },
                        {
                          "name": "hold_time_ps",
                          "type": "number",
                          "description": "Hold time requirement in picoseconds",
                          "required": false,
                          "examples": [
                            50,
                            100
                          ]
                        },
                        {
                          "name": "max_jitter_ps",
                          "type": "number",
                          "description": "Maximum allowed jitter in picoseconds",
                          "required": false,
                          "examples": [
                            10,
                            20
                          ]
                        },
                        {
                          "name": "skew_tolerance_ps",
                          "type": "number",
                          "description": "Skew tolerance between lanes in picoseconds",
                          "required": false,
                          "examples": [
                            10,
                            20
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "electrical_characteristics",
              "type": "object",
              "description": "Electrical characteristics per CDXML specification",
              "required": false,
              "examples": [
                {
                  "core_voltage": 0.8,
                  "io_voltage": 1.2,
                  "max_current_ma": 120,
                  "leakage_ma": 4.5,
                  "power_domains": [
                    {
                      "name": "core_vdd",
                      "voltage": 0.8,
                      "max_current_ma": 100
                    },
                    {
                      "name": "io_vdd",
                      "voltage": 1.2,
                      "max_current_ma": 50
                    }
                  ]
                }
              ],
              "children": [
                {
                  "name": "core_voltage",
                  "type": "number",
                  "description": "Core operating voltage in volts",
                  "required": false,
                  "examples": [
                    0.8,
                    1
                  ]
                },
                {
                  "name": "io_voltage",
                  "type": "number",
                  "description": "I/O operating voltage in volts",
                  "required": false,
                  "examples": [
                    1.2,
                    1.8
                  ]
                },
                {
                  "name": "max_current_ma",
                  "type": "number",
                  "description": "Maximum current draw in milliamps",
                  "required": false,
                  "examples": [
                    50,
                    100
                  ]
                },
                {
                  "name": "leakage_ma",
                  "type": "number",
                  "description": "Typical leakage current in milliamps",
                  "required": false,
                  "examples": [
                    1,
                    2.5
                  ]
                },
                {
                  "name": "power_domains",
                  "type": "array",
                  "description": "Power domain specifications",
                  "required": false,
                  "children": [
                    {
                      "name": "items",
                      "type": "object",
                      "description": "",
                      "required": [
                        "name",
                        "voltage"
                      ],
                      "examples": [
                        {
                          "name": "core_vdd",
                          "voltage": 0.8,
                          "max_current_ma": 100
                        },
                        {
                          "name": "io_vdd",
                          "voltage": 1.2,
                          "max_current_ma": 50
                        }
                      ],
                      "children": [
                        {
                          "name": "name",
                          "type": "string",
                          "description": "Power domain name",
                          "required": false,
                          "examples": [
                            "core_vdd",
                            "io_vdd"
                          ]
                        },
                        {
                          "name": "voltage",
                          "type": "number",
                          "description": "Operating voltage in volts",
                          "required": false,
                          "examples": [
                            0.8,
                            1
                          ]
                        },
                        {
                          "name": "max_current_ma",
                          "type": "number",
                          "description": "Maximum current in milliamps",
                          "required": false,
                          "examples": [
                            25,
                            50
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "mechanical_characteristics",
              "type": "object",
              "description": "Mechanical characteristics per CDXML specification",
              "required": false,
              "examples": [
                {
                  "die_width_um": 4000,
                  "die_height_um": 3000,
                  "bump_pitch_um": 100,
                  "substrate_type": "organic",
                  "package_dimensions": {
                    "width_mm": 15,
                    "height_mm": 15,
                    "thickness_mm": 1.5
                  }
                }
              ],
              "children": [
                {
                  "name": "die_width_um",
                  "type": "number",
                  "description": "Die width in micrometers",
                  "required": false,
                  "examples": [
                    2000,
                    4000
                  ]
                },
                {
                  "name": "die_height_um",
                  "type": "number",
                  "description": "Die height in micrometers",
                  "required": false,
                  "examples": [
                    2000,
                    3000
                  ]
                },
                {
                  "name": "bump_pitch_um",
                  "type": "number",
                  "description": "Bump pitch in micrometers",
                  "required": false,
                  "examples": [
                    50,
                    100
                  ]
                },
                {
                  "name": "substrate_type",
                  "type": "string",
                  "description": "Substrate material type",
                  "required": false,
                  "enum": [
                    "organic",
                    "silicon",
                    "glass",
                    "ceramic"
                  ],
                  "examples": [
                    "organic",
                    "silicon"
                  ]
                },
                {
                  "name": "package_dimensions",
                  "type": "object",
                  "description": "Package physical dimensions",
                  "required": false,
                  "examples": [
                    {
                      "width_mm": 15,
                      "height_mm": 15,
                      "thickness_mm": 1.5
                    }
                  ],
                  "children": [
                    {
                      "name": "width_mm",
                      "type": "number",
                      "description": "Package width in millimeters",
                      "required": false,
                      "examples": [
                        10,
                        15
                      ]
                    },
                    {
                      "name": "height_mm",
                      "type": "number",
                      "description": "Package height in millimeters",
                      "required": false,
                      "examples": [
                        10,
                        15
                      ]
                    },
                    {
                      "name": "thickness_mm",
                      "type": "number",
                      "description": "Package thickness in millimeters",
                      "required": false,
                      "examples": [
                        1,
                        1.5
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "checklist_items",
              "type": "object",
              "description": "CDXML compliance checklist items",
              "required": false,
              "examples": [
                {
                  "known_good_die": true,
                  "reticle_compatible": true,
                  "has_dft_hooks": true,
                  "test_vector_included": true,
                  "thermal_model_available": true,
                  "power_model_available": true,
                  "d2d_loopback_coverage": true
                }
              ],
              "children": [
                {
                  "name": "known_good_die",
                  "type": "boolean",
                  "description": "Whether die has been tested and verified as known-good",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "reticle_compatible",
                  "type": "boolean",
                  "description": "Whether die is compatible with standard reticle formats",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "has_dft_hooks",
                  "type": "boolean",
                  "description": "Whether die includes design-for-test hooks",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "test_vector_included",
                  "type": "boolean",
                  "description": "Whether test vectors are included with the die",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "thermal_model_available",
                  "type": "boolean",
                  "description": "Whether thermal model is available for analysis",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "power_model_available",
                  "type": "boolean",
                  "description": "Whether power model is available for analysis",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                },
                {
                  "name": "d2d_loopback_coverage",
                  "type": "boolean",
                  "description": "Whether die-to-die loopback testing is covered",
                  "required": false,
                  "examples": [
                    true,
                    false
                  ]
                }
              ]
            },
            {
              "name": "validation_status",
              "type": "string",
              "description": "CDXML validation status",
              "required": false,
              "enum": [
                "not_validated",
                "in_progress",
                "validated",
                "failed"
              ],
              "examples": [
                "not_validated",
                "in_progress"
              ]
            },
            {
              "name": "validation_date",
              "type": "string",
              "description": "Date when CDXML validation was completed",
              "required": false,
              "examples": [
                "2024-01-15",
                "2024-03-20"
              ]
            },
            {
              "name": "validation_tool",
              "type": "string",
              "description": "Tool used for CDXML validation",
              "required": false,
              "examples": [
                "CDXML Validator v0.2",
                "Custom CDXML Checker"
              ]
            }
          ]
        }
      ]
    }
  ]
}